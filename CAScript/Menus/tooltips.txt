//Option menu with tooltips by Marisa (SWWM GZ)
Class DCY_OptionMenu : OptionMenu
{
	private String ttip, olttip;
	private Font mTipFont;
	private BrokenLines ttlines;

	override void Init( Menu parent, OptionMenuDescriptor desc )
	{
		Super.Init(parent,desc);
		mTipFont = Font.GetFont('NewSmallFont');
	}

	override void Ticker()
	{
		Super.Ticker();
		// fetch the tooltip for whatever's selected (if any)
		if ( mDesc.mSelectedItem == -1 ) return;
		String mcvar = mDesc.mItems[mDesc.mSelectedItem].GetAction();
		mcvar.Replace(" ","_");	// need to strip whitespace for command actions
		String locstr = String.Format("TIP_%s",mcvar);
		olttip = ttip;
		ttip = StringTable.Localize(locstr,false);
		if ( ttip == locstr ) ttip = "";
		if ( (ttip != olttip) && ttlines ) ttlines.Destroy();
		if ( !ttlines ) ttlines = mTipFont.BreakLines(ttip,CleanWidth_1-8);
	}
	
	override void Drawer()
	{
		Super.Drawer();
		if ( (ttip == "") || !ttlines ) return;
		// re-evaluate y to check where the cursor is
		int cy = 0;
		int y = mDesc.mPosition;
		if ( y <= 0 )
		{
			let font = generic_ui||!mDesc.mFont?NewSmallFont:mDesc.mFont;
			if ( font && (mDesc.mTitle.Length() > 0) )
				y = -y+font.GetHeight();
			else y = -y;
		}
		int fontheight = OptionMenuSettings.mLinespacing*CleanYfac_1;
		y *= CleanYfac_1;
		int lastrow = Screen.GetHeight()-OptionHeight()*CleanYfac_1;
		for ( int i=0; ((i < mDesc.mItems.Size()) && (y <= lastrow)); i++ )
		{
			// Don't scroll the uppermost items
			if ( i == mDesc.mScrollTop )
			{
				i += mDesc.mScrollPos;
				if ( i >= mDesc.mItems.Size() ) break;	// skipped beyond end of menu
			}
			y += fontheight;
			if ( mDesc.mSelectedItem == i )
			{
				cy = y+fontheight;
				break;
			}
		}
		int height = (4+mTipFont.GetHeight()*ttlines.Count())*CleanYFac_1;
		// draw at the bottom unless the selected option could be covered by the tooltip
		int ypos = Screen.GetHeight()-height;
		if ( cy > ypos ) ypos = 0;
		Screen.Dim("Black",.7,0,ypos,Screen.GetWidth(),height);
		ypos += 2*CleanYFac_1;
		for ( int i=0; i<ttlines.Count(); i++ )
		{
			Screen.DrawText(mTipFont,Font.CR_WHITE,4*CleanXFac_1,ypos,ttlines.StringAt(i),DTA_CleanNoMove_1,true);
			ypos += mTipFont.GetHeight()*CleanYFac_1;
		}
	}
}