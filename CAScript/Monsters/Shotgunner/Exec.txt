Class DCY_Z_Exec : DCY_ShotgunZombe
{
  Default
  {
  Health 400;
  Translation "168:191=%[0.00,0.00,0.00]:[2.00,0.00,0.00]", "80:111=[255,255,255]:[0,0,0]", "16:47=%[0.00,0.00,0.00]:[1.41,0.00,0.00]", "48:79=%[0.00,0.00,0.00]:[0.92,0.74,0.64]", "128:159=%[0.00,0.00,0.00]:[0.67,0.67,0.67]", "1:3=%[0.00,0.00,0.00]:[0.42,0.42,0.42]", "5:15=%[0.00,0.00,0.00]:[0.42,0.42,0.42]", "160:167=%[0.00,0.00,0.00]:[0.48,0.82,1.53]", "208:235=%[0.00,0.00,0.00]:[0.48,0.82,1.54]", "248:255=%[0.00,0.00,0.00]:[0.48,0.82,1.54]";
  Speed 6;
  +NEVERFAST
  +MISSILEMORE
  +MISSILEEVENMORE
  +QUICKTORETALIATE
  +NOTARGET
  +DONTHARMSPECIES
  +NOINFIGHTING
  DropItem "PlasmaRifle", 70;
  DropItem "DCY_Minigun", 70;
  Species "Z-Exec";
  DropItem "DCY_Palisade", 50;
  DropItem "DCY_Deterrence", 50;
  Tag "\c[l7]Z-Exec\c-";
  Obituary "%o got gunned down by the Z-Spec Ops Exec.";
  SeeSound "Exec/Sight";
  ActiveSound "Exec/Active";
  PainSound "Exec/Pain";
  DeathSound "";
  DropItem "BlurSphere", 50;
  DropItem "DCY_UltramodernEnergy";
  }
  
  int drone;
  int zmissile;
  int waiting;
  bool grenadecooldown;
  bool issmoke;
  bool smokegrenadecooldown;
  bool seen;
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o got gunned down by the Z-Spec Ops Exec.",
		"You weren't strong enough.",
		"%h wasn't strong enough.",
		"You should've watched your back."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  void A_ZExecGun()
  {
	A_StartSound("PIS2FIRE", CHAN_WEAPON);
	A_SpawnProjectile("DCY_BlueZombieTracer", 34, 7, frandom(-2.2, 2.2)); //Has shock bullets
	A_FaceTarget();
  }
  
  override void Tick()
  {
	super.Tick();
	
	if (DCY_EffectRange(3000))
	if (InStateSequence(CurState, ResolveState("See")) && waiting < 400)
		waiting += 1;
  }
  
  void A_ExecDecide()
  {
	if (health < 200)
	{
		if (random(0, 1) == 0 && !drone)
			SetStateLabel("TakeOutDeDrone");
	}
	
	if (random(0, 1) == 0) SetStateLabel("FireShit");
	if (random(0, 2) == 2) SetStateLabel("Dodge");
	if (random(0, 8) == 6) { issmoke = randompick(0, 0, 1); SetStateLabel("Grenade"); }
  }
  
  States
  {
  Spawn:
	ZSEC A 10 DCY_Look();
	Loop;
  Look:
	ZSEC AABBCCDD 2 DCY_LookingForPlayer();
	"####" A 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" "#" 0 DCY_AlertSound();
	Goto See;
  See:
	ZSEC AABBCCDD 2
	{
		A_Chase();
		Return A_Jump(50, "Run", "Dodge");
	}
	Loop;
  Run:
	ZSEC AABBCCDDAABBCCDD 2
	{
		bFRIGHTENED = random(0, 1);
		for (int i = 2; i > 0; i--)
			A_Chase();
	}
	Goto See;
  Dodge:
	ZSEC A 5 A_Dodging(10);
	Goto See;
  Missile:
	ZSEC E 1
	{
		if (waiting >= 399)
		{
			waiting = 0;
			A_StartSound("Exec/Spot", CHAN_VOICE);
		}
		
		bFRIGHTENED = false;
		A_ExecDecide();
	}
	Goto See;
  FireShit:
	ZSEC E 10
	{	
		A_FaceTarget();
		waiting = 0;
		zmissile = 7;
	}
	ZSEC E 2 A_FaceTarget();
	ZSEC F 2 Bright
	{
		if (zmissile <= 0)
			Return ResolveState("See");
		
		zmissile -= 1;
		A_ZExecGun();
		Return ResolveState(null);
	}
	ZSEC E 2 A_FaceTarget();
	Goto FireShit+2;
  Grenade:
	ZSEC EEEEE 2 A_FaceTarget();
	ZSEC F 4
	{	
		A_StartSound("DCYRifleGrenade", CHAN_WEAPON);
		let grenade = Spawn((issmoke) ? "DCY_EnemySmokeGrenade" : "DCY_EnemyGrenade", pos + (0,0,32));
		if (grenade)
		{
			grenade.target = self;
			grenade.angle = angle;
			grenade.species = "Z-Exec";
			grenade.bTHRUSPECIES = true;
			grenade.Vel3DFromAngle((target && distance3D(target) > 500) ? ((issmoke) ? 29 : 39) : ((issmoke) ? 14 : 24), grenade.angle, BulletSlope() - 10);
		}
		
		A_FaceTarget();
	}
	ZSEC E 10;
	Goto See;
  TakeOutDeDrone:
	ZSEC A 10
	{
		if (drone)
			SetStateLabel("FireShit");
	}
	ZSEC E 10 A_StartSound("Exec/Active", CHAN_VOICE);
	ZSEC E 5
	{
		A_SpawnItemEX("DCY_Z_ExecDrone", flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
		drone = 1;
	}
	ZSEC A 4;
	Goto See;
  Pain:
	ZSEC G 3;
	ZSEC G 3 A_Pain();
	Goto See;
  Death:
  Death.Fire:
	ZSDI A 2;
	ZSDI B 5
	{
		A_KillChildren("Normal", KILS_FOILINVUL, "DCY_Z_ExecDrone", "Z-Exec");
		A_StartSound("COMMDTH2", CHAN_VOICE, pitch: 0.756);
	}
	ZSDI C 5 A_NoBlocking();
	ZSDI D 5;
	ZSDI E -1;
	Stop;
  XDeath:
	ZSDI A 2;
    SPOS M 5;
    SPOS N 4
	{
		A_KillChildren("Normal", KILS_FOILINVUL, "DCY_Z_ExecDrone", "Z-Exec");
		DCY_Gibs();
	}
    SPOS O 4 A_NoBlocking();
    SPOS PQRST 3;
    SPOS U -1;
    Stop;
  Raise:
	Stop;
  }
}

Class DCY_EnemySmokeGrenade : DCY_GoreBase
{
  Default
  {
	Speed 15;
	-THRUACTORS
  }
  
  int timer;
  bool exploded;
  
  override void Tick()
  {
	super.Tick();
	if (level.isFrozen()) return;
	
	if (!exploded)
	{
		timer++;
	
		if (timer == 80)
		{
			exploded = true;
			A_StartSound("DCYSmokeGrenade", CHAN_WEAPON);
			SetStateLabel("UnleashTheSmoke");
		}
	}
  }
  
  States
  {
  Spawn:
	SM0K X 1 A_SetRoll(Roll + (xroll * 2));
	Loop;
  Death:
	SM0K X -1;
	Stop;
  UnleashTheSmoke:
	SM0K X 1 Bright;
	SM0K XXXXXXXXXXXXXXXXXXXX random(2, 4)
	{
		for (int i = random(1, 2); i > 0; i--)
		{
			let smoke = Spawn("DCY_GrenadeSmoke", pos + (frandom(-10, 10), frandom(-10, 10), frandom(-10, 10)));
			if (smoke)
			{
				smoke.vel.x = frandom(-8, 8);
				smoke.vel.y = frandom(-8, 8);
				smoke.vel.z = frandom(-8, 8);
				smoke.scale *= frandom(0.8, 2.5);
			}
		}
	}
	Stop;
  }
}

Class DCY_GrenadeSmoke : Actor
{
  Default
  {
  RenderStyle "Translucent";
  Scale 0.1;
  Alpha 0;
  Radius 0;
  Height 0;
  +FORCEXYBILLBOARD
  +THRUACTORS
  +ROLLSPRITE
  +NOGRAVITY
  +NOBLOCKMAP
  }
  
  int timer;
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	roll = frandom(0, 360);
  }
  
  override void Tick()
  {
	super.Tick();
	if (timer < 40)
	{
		if (timer > 1) A_SetScale(Scale.X + 4 * (0.9 / timer));
		if (alpha < 0.4) alpha += 0.05;
	}
	else
		alpha -= 0.00098;
	
	A_ScaleVelocity(0.95);
	if (alpha < 0)
		Destroy();
		
	timer++;
  }
  
  States
  {
  Spawn:
	SM0K Z -1;
	Stop;
  }
}

Class DCY_Z_ExecDrone : DCY_SkullParent
{
  Default
  {
  Health 150;
  Tag "Z-Drone";
  Translation "5:8=%[0.00,0.00,0.00]:[0.91,0.90,1.11]", "80:111=%[0.00,0.00,0.00]:[0.91,0.90,1.11]", "112:167=%[0.00,0.00,0.00]:[2.00,0.55,0.55]";
  +NOBLOOD
  -COUNTKILL
  +DONTFALL
  SeeSound "ZDrone/Sight";
  ActiveSound "ZDrone/Active";
  PainSound "ZDrone/Pain";
  DeathSound "ZDrone/Death";
  Obituary "%o got ionized by the Z-Exec's drone.";
  Radius 16;
  Height 24;
  Speed 7;
  PainChance 20;
  Monster;
  -BRIGHT
  +FLOATBOB
  +DONTHARMSPECIES
  +LOOKALLAROUND
  +NOINFIGHTING
  +NOBLOOD
  Species "Z-Exec";
  FloatBobPhase 1;
  }
  
  override void Tick()
  {
	Super.Tick();
	
	If (Health > 0)
		Warp(master, 0, 43, 35, 0, WARPF_ABSOLUTEOFFSET|WARPF_INTERPOLATE);
  }
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o got ionized by the Z-Exec's drone.",
		"Crazy ahh drone"
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  States
  {
  Spawn:
	HDRN A 1 A_Look();
	Loop;
  See:
	HDRN A 1 A_Chase(null, "Missile", CHF_DONTMOVE);
	Loop;
  Melee:
  Missile:
	HDRN AAAAAAAAA 1 A_FaceTracer();
	HDRN B 1
	{
		A_StartSound("LASER001", CHAN_WEAPON);
		A_SpawnProjectile("DCY_DronePlasma", 4, -12);
		A_SpawnProjectile("DCY_DronePlasma", 4, 12);
		A_FaceTracer();
	}
	HDRN BBBCCCDDD 1 A_FaceTracer();
	HDRN B 1
	{
		A_StartSound("LASER001", CHAN_WEAPON);
		A_SpawnProjectile("DCY_DronePlasma", 4, -12);
		A_SpawnProjectile("DCY_DronePlasma", 4, 12);
		A_FaceTarget();
	}
	HDRN BBBCCCDDD 1
	{
		A_FaceTarget();
		
		if (random(0, 7) == 1)
			SetStateLabel("Cooldown");
	}
	Goto See;
  Cooldown:
	HDRN AAAAAAAAAAAAAAAAAAAA 1 A_FaceTracer();
	Goto See;
  Pain:
	HDRN A 1 A_Pain();
	HDRN AAAAA 1 A_Warp(AAPTR_MASTER, 0, 43, 35, 0, WARPF_ABSOLUTEANGLE|WARPF_INTERPOLATE);
	Goto See;
  Death:
  XDeath:
	HDRN A 10;
	DRON E 4
	{
		bFloatBob = false;
		A_ScreamAndUnblock();
	}
	DRON FGHIJK 4;
	Stop;
  Raise:
	Stop;
  }
}