Class DCY_Convector : DCY_ArachnoParent
{
  Default
  {
  Health 1400;
  DamageType "Fire";
  Scale 1.2;
  +BOSS
  +MISSILEEVENMORE
  +QUICKTORETALIATE
  +DONTFALL
  +NOGRAVITY
  +FLOAT
  PainChance 50;
  Tag "\c[x1]Convector\c-";
  SeeSound "Convector/Sight";
  ActiveSound "Convector/Hover";
  PainSound "Convector/Pain";
  DeathSound "Convector/Death";
  DCYMonster.ScientificName "Ardenti aranea";
  }
  
  int ballcount;
  
  override void Tick()
  {
	Super.Tick();
	
	If (Health > 0 && !IsFrozen() && DCY_EffectDistance(sfxdistance))
	{
		A_SpawnItemEx("DCY_MastermindJetFlareSmall", frandom(35, 32), frandom(35, 32),35,0,0,frandom(-4,-6),0,128);
		A_SpawnItemEx("DCY_MastermindJetFlareSmall", frandom(-35, -32), frandom(-35, -32),35,0,0,frandom(-4,-6),0,128);
		A_SpawnItemEx("DCY_MastermindJetFlareSmall", frandom(-35, -32), frandom(35, 32),35,0,0,frandom(-4,-6),0,128);
		A_SpawnItemEx("DCY_MastermindJetFlareSmall", frandom(35, 32), frandom(-35, -32),35,0,0,frandom(-4,-6),0,128);
		
		if (ballcount > 10)
		{
			damagefactor = 2;
			
			A_SpawnParticleEx(0x701d08, TexMan.CheckForTexture("graphics/particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, 80, frandom(0, 360), frandom(-20.0, 20.0), frandom(-20.0, 20.0), 40 + frandom(-4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(6.35, 12.35), fadestepf: 0, sizestep: -2.35);
			
			if ((level.time % random(2, 5)) == 0)
				A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, 90, 90, 0, frandom(-20, 20), frandom(-20, 20), 40, frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.3, 1), startalphaf: 0.05, fadestepf: 0.0007, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
		}
		else
		{
			damagefactor = 1;
		}
		
		if (ballcount > 5)
			if ((level.time % random(1, 3)) == 0)
				A_SpawnParticleEx(0xef5501, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT, 90, random(3, 9), frandom(0, 360), frandom(-20.0, 20.0), frandom(-20.0, 20.0), 40 + frandom(-4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.05, 0.2), fadestepf: 0, sizestep: -0.15);
			
		if ((level.time % random(2, 5)) == 0)
			A_SpawnParticleEx(0xef5501, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, random(3, 9), frandom(0, 360), frandom(-20.0, 20.0), frandom(-20.0, 20.0), 40 + frandom(-4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.05, 0.2), fadestepf: 0, sizestep: -0.15);
		if ((level.time % random(2, 7)) == 0)
			A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, 90, 90, 0, frandom(-20, 20), frandom(-20, 20), 40, frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.3, 1), startalphaf: 0.05, fadestepf: 0.0007, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
	}
  }
  
  States
  {
  Spawn:
	HFBT AB 2 DCY_Look();
	Loop;
  Look:
    HFBT AB 2 DCY_LookingForPlayer();
  Alert:
    "####" "#" 0 DCY_AlertSound();
    Goto See;
  See:
	HFBT AB 2
	{
		if (ballcount > 13) SetStateLabel("Cool");
		A_Chase();
	}
	Loop;
  Cool:
	HFBT V 3
	{
		ballcount--;
		if (ballcount <= 0) SetStateLabel("See");
	}
	Loop;
  Missile:
	HFBT A 0
	{
		if (target && distance3D(target) < 300) Return ResolveState("Flamethrower");
		
		switch (random(0, 1))
		{
			case 0: Return ResolveState("Minigun"); break;
			case 1: Return ResolveState("Balls"); break;
		}
		
		Return ResolveState(null);
	}
	Goto See;
  FlameThrower:
	HFBT V 30 A_FaceTarget();
	HFBT CCCCCCCCCCCCCCCCCC 2
	{
		if (ballcount > 10) A_SpawnProjectile("DCY_WastelandFlame", 20, 0, frandom(-10, 10), CMF_OFFSETPITCH, frandom(-10, 10));
		A_SpawnProjectile("DCY_WastelandFlame", 20, 0, (ballcount > 10) ? frandom(-10, 10) : 0);
		A_FaceTarget();
		A_StartSound("ROBOFIRE", CHAN_WEAPON, attenuation: 0.35);
	}
	HFBT V 20 A_FaceTarget();
	Goto See;
  Minigun:
	HFBT ABABABABABAB 2 A_FaceTarget();
	HFBT V 40 A_StartSound("Convector/MinigunReady", CHAN_WEAPON, attenuation: 0.5);
	HFBT KL 3
	{
		tics = (ballcount > 6) ? 6 : 3;
		
		A_StartSound("PIS3FIRE", CHAN_WEAPON, attenuation: 0.5, pitch: 0.75);
		
		for (int i = 15; i > -16; i -= 15)
			A_SpawnProjectile("DCY_AlacritousGuyBullet", 8, i, frandom(-15, 15), CMF_OFFSETPITCH|CMF_TRACKOWNER, frandom(-7, 7));
		
		A_FaceTarget();
		Return A_MonsterRefire(100, "See");
	}
	Goto Minigun+13;
  Balls:
	HFBT ABABABABABAB 2 A_FaceTarget();
	HFBT VVV 18
	{
		A_FaceTarget();
		A_StartSound("Ballista/Reload", CHAN_WEAPON, pitch: 0.8);
		ballcount++;
	}
	HFBT C 8
	{
		tics = (ballcount > 7) ? 5 : 8;
		A_StartSound("dcyfatso/attack", CHAN_WEAPON, attenuation: 0.5, pitch: 0.75);
		A_SpawnProjectile("DCY_ConvectorBall", 20, 0, frandom(-4, 4), CMF_OFFSETPITCH|CMF_TRACKOWNER, frandom(-4, 4));
		A_FaceTarget();
		ballcount--;
	}
	HFBT D 8
	{
		tics = (ballcount > 7) ? 5 : 8;
		A_FaceTarget();
		if (ballcount <= 0) SetStateLabel("See");
	}
	Goto Balls+15;
  Pain:
	HFBT A 2;
	HFBT B 2 A_Pain();
	Goto See;
  Death:
	HFBT E 1;
	HFBT E 1 A_Scream();
	HFBT EFG 6;
	HFBT H 6
	{
		A_StartSound("Archon/Explode");
		
		for (int i = 3; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1_Biggie", frandom(-10, 10), frandom(-10, 10), 30 + frandom(-10, 10), flags: SXF_NOCHECKPOSITION);
		
		Spawn("DCY_NapalmBigFire", pos);
		
		for (int i = 12 + ballcount; i > 0; i--)
		{
			let ember = Spawn("DCY_NapalmEmber", (pos.x, pos.y, pos.z));
			
			if (ember)
			{
				ember.vel.x = frandom(-12, 12);
				ember.vel.y = frandom(-12, 12);
				ember.vel.z = frandom(1, 12);
			}
		}
	}
	HFBT IJ 6;
	HFBT J 1 A_BossDeath2();
	Stop;
  Raise:
	Stop;
  }
}

Class DCY_ConvectorBall : DCY_ImpFireball
{
  Default
  {
  Damage 6;
  DamageType "Fire";
  Speed 20;
  +NEVERFAST
  }
  
  States
  {
  Spawn:
	M2FN AAABBB 1
	{
		A_SpawnFlames("ff3e1f", 35, 45, 0, allsmoke: true);
		if ((level.time % random(1, 9)) == 0) A_SpawnParticleEx(0xff3e1f, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 80, random(3, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), fadestepf: 0, sizestep: -0.075);	
		A_SpawnItemEx("DCY_Explosion_1_Smaller", frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	Loop;
  Death:
	TNT1 A 2 Bright
	{
		A_Explode();
		bNoGravity = true;
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_QuakeEx(2, 2, 2, 20, 0, 450, "", QF_SCALEDOWN|QF_3D);
		A_Explode(40, 128, 1, 0, 25);
		Spawn("DCY_NapalmBigFire", pos);
		
		for (int i = 5; i > 0; i--)
		{
			let ember = Spawn("DCY_NapalmEmber", (pos.x, pos.y, pos.z));
			
			if (ember)
			{
				ember.vel.x = frandom(-7, 7);
				ember.vel.y = frandom(-7, 7);
				ember.vel.z = frandom(1, 10);
			}
		}
	}
	TNT1 A 2 Bright
	{
		for (int i = random(3, 4); i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1", frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-2.0, 2.0), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	Stop;
  }
}