Class DCY_Befouler : DCYMonster
{
  Default
  {
	Health 400;
	Radius 31;
	Height 56;
	Mass 400;
	Speed 8;
	PainChance 128;
	-FLOORCLIP
	+FLOAT 
	+NOGRAVITY
	+DONTFALL;
	+NOINFIGHTSPECIES
	+DONTHARMCLASS
	+DONTHARMSPECIES
	SeeSound "EternalPainElemental/Sight";
	PainSound "EternalPainElemental/Pain";
	DeathSound "EternalPainElemental/NormalDeath";
	ActiveSound "EternalPainElemental/Active";
	Tag "Befouler";
	Species "Pain Elementals";
	BloodColor "ad3002";
	BloodType "AndroidNeonFluid";
	DCYMonster.GibType "DCY_GibletsLava";
	DCYMonster.ScientificName "Aptenus tibetisci";
	DCYMonster.FootstepSound "";
  }
  
  int t, t2, ang, angt;
  int atkmode;
  double a, xv;
  
  States
  {
  Spawn:
	DAJK A 10 DCY_Look();
	Loop;
  Look:
	DAJK AABBCC 3
	{
		A_Recoil(-0.05);
		DCY_LookingForPlayer();
	}
	"####" "#" 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" "#" 0
	{
		if (random(0, 1) == 0)
			SetStateLabel("ScreamAtPlayer");
		else
			DCY_AlertSound();
	}
	Goto See;
  ScreamAtPlayer:
	DAJK A 2 A_FaceTarget();
	DAJK D 3
	{
		A_Stop();
		A_StartSound("EternalPainElemental/WarCry", CHAN_VOICE, attenuation: 0.85);
		A_FaceTarget();
	}
	DAJK NO 4 A_FaceTarget();
	DAJK OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 1
	{
		A_FaceTarget();
		A_QuakeEx(3, 0, 0, 30, 0, 600, "", QF_SCALEDOWN|QF_RELATIVE|QF_3D, rollintensity: 0.5, rollwave: 0.5);
	}
	DAJK ND 5;
	Goto See;
  Laugh:
	DAJK Y 7 
	{
		A_StartSound("EternalPainElemental/Laugh", CHAN_VOICE);
		A_FaceTarget();
	}
	DAJK ZYZYZYZ 7 A_FaceTarget();
	DAJK Y 7
	{
		A_StartSound("EternalPainElemental/Laugh", CHAN_VOICE);
		A_FaceTarget();
	}
	DAJK ZYZYZYZ 7 Bright A_FaceTarget();
	Goto See;
  See:
	DAJK AABBCC 3
	{
		A_Recoil(-0.05);
		DCY_Chase();
		
		if (!random(0, 50)) SetStateLabel("Dodge");
	}
	Loop;
  Dodge:
	DAJK G 2
	{
		xv = 1;
		t = 1;
		vel.z -= 2;
		A_StartSound("EternalPainElemental/Dodge");
		a = angle = random(0, 4) * 90;
		VelFromAngle(xv, a);
	}
	DAJK G 1
	{
		float velp = 2 * sin(t);
		float velt = (1.65 * sin(t * 16));
		
		xv += velt;
		vel.z += velp;
		VelFromAngle(xv, a);
		
		A_FaceTarget();
		
		if (t > 19)
		{
			A_Stop();
			SetStateLabel("See");
		}
		
		t++;
	}
	Goto Dodge+1;
  Missile:
	DAJK D 0
	{
		if (target && target.health < 50 && !random(0, 4))
			SetStateLabel("Laugh");
		
		switch (random(0, 5))
		{
			case 0: break;
			case 1: SetStateLabel("Spit"); atkmode = 0; break;
			case 2: 
			case 3: SetStateLabel("Spit"); atkmode = 1; break;
			case 4: SetStateLabel("Spit"); atkmode = 2; break;
			case 5: SetStateLabel("ScreamAtPlayer"); break;
		}
	}
	Goto See;
  Spit:
	DAJK A 5 A_FaceTarget();
	DAJK G 0
	{
		if (!random(0, 1))
		{
			tics = random(5, 10);
			A_FaceTarget();
			A_StartSound("EternalPainElemental/Exert", CHAN_VOICE, CHANF_OVERLAP);
		}
	}
	DAJK GGG 5 A_FaceTarget();
	DAJK DE 5 A_FaceTarget();
	DAJK F 4
	{
		A_StartSound("EternalPainElemental/Spit", CHAN_VOICE, CHANF_OVERLAP);
		A_FaceTarget();
	}
	DAJK F 1
	{
		switch (atkmode)
		{
			case 0: A_PainAttack("DCY_FlamingCranium"); break;
			case 1: SetStateLabel("ThrowSoul"); break;
			case 2: SetStateLabel("SoulBarrage"); t2 = 2; ang = randompick(-60, 60); angt = ang / 60; break;
		}
	}
	DAJK ED 5 A_FaceTarget();
	Goto See;
  SoulBarrage:
	DAJK F 1
	{
		if (target)
		{
			A_FaceTarget();
			DCYMonster soul = DCYMonster(Spawn("DCY_BefoulerTurret", pos + (15, 0, 0)));
			
			if (soul)
			{
				soul.target = self.target;
				soul.species = species;
				soul.bTHRUSPECIES = true;
				soul.angle = angle;
				soul.Vel3DFromAngle(GetDefaultSpeed("DCY_BefoulerTurret"), soul.angle + ang, BulletSlope());
			}
		}
		t2--;
	}
	DAJK EDE 5 A_FaceTarget();
	DAJK F 4
	{
		ang -= angt * 60;
		if (t2 <= 0) SetStateLabel("See");
		else
		{
			A_StartSound("EternalPainElemental/Spit", CHAN_VOICE);
			A_FaceTarget();
		}
	}
	Loop;
  ThrowSoul:
	DAJ2 C 0 A_StartSound(ActiveSound, CHAN_VOICE, CHANF_OVERLAP);
	DAJ2 CCCCCCCCCCCCCCCCCCCCCCCCCCC 1
	{
		A_SpawnParticleEx(0xf5a442, particlefire, STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 40, 75, 0, -5 + frandom(-2.5, 2.5), 44 + frandom(-2.5, 2.5), frandom(-2.5, 2.5) + 25, velz: 1.5, accelz: 0.1175, fadestepf: 0, sizestep: -2.325);
		A_FaceTarget();
	}
	DAJ2 B 25
	{
		A_StartSound("EternalPainElemental/Toss", CHAN_WEAPON, attenuation: .75);
		A_SpawnProjectile("DCY_BefoulerSoul", 20);
	}
	DAJK A 10;
	Goto See;
  Pain:
	DAJK G 6;
	DAJK G 6
	{
		A_Pain();
		if (!random(0, 20)) SetStateLabel("Dodge");
	}
	Goto See;
  Death:
	DAJK G 6;
	DAJK G 6
	{
		if (health < -200)
			A_StartSound("EternalPainElemental/Death", CHAN_VOICE);
		else
			A_Scream();
	}
	DAJK HI 6;
	DAJK J 0 DCY_Gibs(false);
	DAJK JJKK 3 A_SpawnItemEx("DCY_Explosion_1", frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(10.0, 15.0), flags: SXF_NOCHECKPOSITION);
	DAJK L 6 A_PainDie("DCY_FlamingCranium");
	DAJK M 6;
	Stop;
  Raise:
	DAJK MLKJIH 8;
	Goto See;
  }
}

Class DCY_BefoulerSoul : DCY_ImpFireball
{
  Default
  {
  Speed 26;
  Damage 0;
  +NEVERFAST
  SeeSound "Gorenest/Scream";
  DeathSound "EXPLOD";
  DamageType "Fire";
  RenderStyle "Normal";
  Alpha 1;
  Scale .85;
  }
  
  States
  {
  Spawn:
	S7_L A 1
	{
		A_SpawnFlames("eb7134");
		A_SpawnParticleEx(0xf5a442, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 40, 75, 0, frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-2.5, 2.5), fadestepf: 0, sizestep: -6.325);
	}
	Loop;
  Death:
	MNAD A 1 Bright;
	NBKL D 2 Bright
	{
		A_Explode();
		bNoGravity = true;
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_QuakeEx(2, 2, 2, 20, 0, 450, "", QF_SCALEDOWN|QF_3D);
		A_Explode(60, 100, 1, 0, 15);
		Spawn("DCY_NapalmBigFire", pos);
		
		for (int i = 3; i > 0; i--)
		{
			let ember = Spawn("DCY_NapalmEmber", (pos.x, pos.y, pos.z));
			
			if (ember)
			{
				ember.vel.x = frandom(-12, 12);
				ember.vel.y = frandom(-12, 12);
				ember.vel.z = frandom(1, 10);
			}
		}
	}
	NBKL E 2 Bright
	{
		for (int i = 4; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1", frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-2.0, 2.0), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	NBKL FGHIJKLM 2 Bright;
	Stop;
  }
}

Class DCY_BefoulerTurret : DCY_FlamingCranium
{
  Default
  {
  -ISMONSTER
  -COUNTKILL
  +NOTELEPORT
  SeeSound "";
  Damage 6;
  Scale .65;
  Translation "128:230=%[0.00,0.00,0.00]:[1.15,1.15,1.15]", "48:79=[206,206,206]:[0,0,0]", "160:167=%[1.92,0.49,0.00]:[2.00,1.14,0.27]", "16:47=%[0.20,0.00,0.00]:[2.00,1.39,0.13]";
  }
  
  bool atk;
  
  override void Tick()
  {
	if (level.isFrozen()) return;
	
	DCY_SkullParent.Tick();
	
	A_SkullFlame("ff3c00");
	if (vel != oldvel && atk && health > 0)
	{
		A_Die();
		SetStateLabel("Death");
		health -= health;
		screamsoundtimer -= 128;
	}
  }
  
  States
  {
  Spawn:
  See:
	S0_L A 0
	{
		if (atk)
		{
			A_Die();
			SetStateLabel("Death");
			health -= health;
			screamsoundtimer -= 128;
		}
	}
	S0_L AAAAAA 5 A_FaceTarget();
	S0_L BBBB random(4, 20)
	{
		A_FaceTarget();
		A_SpawnProjectile("DCY_SoulFireball", 20, 0, frandom(-5, 5));
	}
	Goto Missile;
  Missile:
	S0_L AAAAAA 2 A_FaceTarget();
	S0_L B 1
	{
		A_StopSound(12);
		v = 0.7;
		screamsoundtimer = 128;
		A_StartSound("GoreNest/ShortScream", 12, CHANF_LOOPING, v);
		A_Weave(1, 1, 1, 1);
		A_SkullAttack();
		oldvel = vel;
		atk = true;
	}
	S0_L B 1
	{
		if (vel != oldvel)
		{
			A_Die();
			SetStateLabel("Death");
			screamsoundtimer -= 128;
		}
		
		if ((level.time % 2) == 0)
			A_Weave(1, 1, 1, 1);
	}
	Goto Missile+7;
  }
}

Class DCY_SoulFireball : DCY_ImpFireball
{
  Default
  {
	Scale 0.5;
	Damage 2;
	Speed 13;
	FastSpeed 18;
  }
  
  States
  {
  Spawn:
    BAL1 AABB 1 A_SpawnFlames("f5a442", 10, 11, 0, true, allsmoke: true, thrust: 1.2);
	Loop;
  }
}