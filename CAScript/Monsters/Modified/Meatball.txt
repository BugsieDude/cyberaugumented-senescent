Class DCY_CacoParent : DCYMonster
{
  Default
  {
	Health 400;
	Radius 31;
	Height 56;
	Mass 400;
	Speed 8;
	PainChance 128;
	-FLOORCLIP +FLOAT +NOGRAVITY
	SeeSound "caco/sight";
	PainSound "caco/pain";
	DeathSound "caco/death";
	ActiveSound "caco/active";
	Obituary "$OB_CACO";
	HitObituary "$OB_CACOHIT";
	Tag "$FN_CACO";
	Species "Cacodemons";
	DCYMonster.ScientificName "Tristique cibum";
	DCYMonster.FootstepSound "";
  }
  
  void A_HeadAttack()
  {
	let targ = target;
	if (targ)
	{
		if (CheckMeleeRange())
		{
			int damage = random[pr_headattack](1, 6) * 10;
			A_StartSound (AttackSound, CHAN_WEAPON);
			int newdam = target.DamageMobj (self, self, damage, "Melee");
			targ.TraceBleed (newdam > 0 ? newdam : damage, self);
		}
		else
		{
			// just replacing the fucking ball
			SpawnMissile (targ, "DCY_MeatballElecball");
		}
	}
  }
	
  States
  {
  Spawn:
	HEAD A 10 DCY_Look();
	Loop;
  Look:
	HEAD A 3 DCY_LookingForPlayer();
	"####" "#" 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" "#" 0 DCY_AlertSound();
	Goto See;
  See:
	HEAD A 3 DCY_Chase();
	Loop;
  Missile:
	HEAD B 5 A_FaceTarget();
	HEAD C 5 A_FaceTarget();
	HEAD D 5 BRIGHT A_HeadAttack();
	Goto See;
  Pain:
	HEAD E 3;
	HEAD E 3 A_Pain();
	HEAD F 6;
	Goto See;
  Death:
	HEAD G 8;
	HEAD H 8 A_Scream();
	HEAD I 8;
	HEAD J 8;
	HEAD K 8 A_NoBlocking();
	HEAD L -1 A_SetFloorClip();
	Stop;
  Raise:
	HEAD L 8 A_UnSetFloorClip();
	HEAD KJIHG 8;
	Goto See;
  }
}

Class DCY_FlyingMeatballOutOfTouch : DCY_CacoParent
{
  Default
  {
  BloodColor "Blue";
  Tag "Versatility";
  SeeSound "DCYVersatility/Sight";
  ActiveSound "DCYVersatility/Idle";
  PainSound "DCYVersatility/Pain";
  DeathSound "DCYVersatility/Death";
  } 
  
  States
  {
  Spawn:
	3GGS A 10 DCY_Look();
	Loop;
  Look:
	3GGS A 3 DCY_LookingForPlayer();
	"####" "#" 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" "#" 0 DCY_AlertSound();
	Goto See;
  See:
	3GGS A 3 DCY_Chase();
	Loop;
  Missile:
	3GGS B 5 A_FaceTarget();
	3GGS C 5 A_FaceTarget();
	3GGS D 5 BRIGHT A_HeadAttack();
	Goto See;
  Pain:
	3GGS E 3;
	3GGS E 3 A_Pain();
	3GGS F 6;
	Goto See;
  Death:
	3GGS G 8;
	3GGS H 8 A_Scream();
	3GGS I 8;
	3GGS J 8;
	3GGS K 8 A_NoBlocking();
	3GGS L -1 A_SetFloorClip();
	Stop;
  Raise:
	3GGS L 8 A_UnSetFloorClip();
	3GGS KJIHG 8;
	Goto See;
  }
}