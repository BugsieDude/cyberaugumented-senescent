Class DCY_PhasicRazer : DCY_HellRazer
{
  Default
  {
  Tag "\c[Purple]Phasic Razer\c-";
  Obituary "%o could not surpass the Phasic Razer.";
  Speed 10;
  FastSpeed 15;
  SeeSound "PhasicRazer/Sight";
  ActiveSound "PhasicRazer/Active";
  PainSound "PhasicRazer/Pain";
  DeathSound "PhasicRazer/Death";
  BloodColor "Purple";
  DropItem "Cell", 192;
  DropItem "Cell", 192;
  DropItem "Cell", 192;
  DropItem "Cell", 192;
  DropItem "Blursphere", 70;
  DropItem "DCY_Emphasis", 60;
  Health 177;
  +DONTHARMCLASS
  +DONTHARMSPECIES
  +DONTHARMCLASS
  +NOINFIGHTING
  +NOTARGET
  }
  
  int phase;
  
  void A_PhasicShot()
  {
	A_StartSound("LASERII", CHAN_WEAPON, pitch: frandom(1.2, 1.5));
	A_FaceTarget(2.5, 2.5);
	A_SpawnProjectile("DCY_PhasicRazerLaser", 32, 0, random(-2, 2), CMF_OFFSETPITCH|CMF_TRACKOWNER|CMF_AIMDIRECTION, random(-1, 1));
  }
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o got razed.",
		"%o got phased.",
		"Phazic Razers are like the fucking result when the entirety of all of fucking Plutonia and a pit full of spectres that corner you at every direction while you cant see them have a lovechild",
		"%o could not able to surpass the Phasic Razer."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  int railloop;
  
  States
  {
  Spawn:
    XRZR A 10 DCY_Look();
	Loop;
  Look:
	"####" AABBCCDD 4 DCY_LookingForPlayer();
	"####" "#" 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" E 10 DCY_AlertSound();
	Goto See;
  Alert:
	"####" "#" 0 DCY_AlertSound();
	Goto See;
  See:
    XRZR AAABBBCCCDDD 3 A_Chase();
	TNT1 A 0 A_Jump(94, "Phase", "Avoid");
	Loop;
  Avoid:
	XRZR A 10
	{
		A_Dodging(10);
		A_Chase(null, "Missile", CHF_DONTMOVE);
	}
	XRZR A 0 A_Stop();
	Goto See;
  Phase:
    XRZR E 1
	{
		bInvulnerable = true;
		bShootable = false;
		bSolid = false;
		A_StartSound("neophaseimp/teleport");
		A_FadeOut(0.2);
		phase = 0;
	}
    XRZR EEEE 1 A_FadeOut(0.2);
	Goto NormalPhase;
  NormalPhase:
    XRZR AABBCCDD 2
	{
		If(phase >= random(15, 20))
			SetStateLabel("PhaseEnd");
			
		for (int i = 3; i > 0; i--)
			A_Chase(null, null, CHF_NIGHTMAREFAST|CHF_NOPLAYACTIVE);
		A_SpawnItemEx("DCY_PhasicRazerTrail", zofs: 5, flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
		
		if (target && distance3D(target) < 168)
			Return A_Jump(125, "PhaseEnd");
			
		Return ResolveState(null);
	}
	XRZR D 0 { phase += 1; }
	Loop;
  PhaseEnd:
    XRZR E 1
	{
		A_FadeIn(0.2);
		A_StartSound("dune/active");
	}
    XRZR EEEE 1 A_FadeIn(0.2);
    XRZR E 0
	{
		bInvulnerable = false;
		bShootable = true;
		bSolid = true;
	}
    Goto See;
  Melee:
  Missile:
    TNT1 A 0
	{
		railloop = 0;
		missile = 0;
		
		If (target && Distance3D(target) < 256)
			Return ResolveState("CloseMissile");
		
		Return ResolveState(null);
	}
	Goto NormalMissile;
  CloseMissile:
	TNT1 A 0 A_Jump(128, "NormalMissile");
	Goto RazerBeam;
  RazerBeam:
    XRZR E 1
	{
		A_StartSound("PhasicRazer/Sight", CHAN_7);
		laser = 0;
	}
	XRZR EEEEEEEEE 1 A_FaceTarget();
	TNT1 A 0 A_StartSound("D4RazerBeam/Start", CHAN_AUTO, 0, 1, 0.9);
	Goto RazerLoop;
  RazerLoop:
	TNT1 A 0 A_StartSound("D4RazerBeam/Laser", CHAN_7, CHANF_LOOPING, 1, 0.9);
	XRZR F 1
	{
		if (laser >= 35)
			SetStateLabel("RazerBeamStop");
		
		A_FaceTarget(1.145, 1.145);
		laser += 1;
		A_CustomRailgun(random(3, 12), 0, "", "", RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT, 0, 70, null, 0, 0, 500, 2, 7, 0, "DCY_PhasicTrail", -2);
	}
    Goto RazerLoop+1;
  RazerBeamStop:
    XRZR E 5
	{
		A_StopSound(CHAN_7);
		A_StartSound("D4RazerBeam/Stop", CHAN_AUTO, 0, 1.0, 0.9);
	}
	Goto See;
  NormalMissile:
	TNT1 A 0 A_Jump(72, "Phase", "Railgun");
	TNT1 A 0 A_Jump(64, "LaserBarrage");
	Goto Laser;
  Laser:
    XRZR E 10 A_FaceTarget();
	XRZR F 4
	{
		A_FaceTarget();
		A_StartSound("LASERII", CHAN_WEAPON);
		A_SpawnProjectile("DCY_UmbraPlasma", 32, 0);
	}
	XRZR E 3
	{
		if (missile > 8)
			SetStateLabel("Decide");
		
		A_FaceTarget();
		missile++;
	}
	Goto Laser+1;
  Decide:
	TNT1 A 0 A_Jump(42, "Railgun");
	TNT1 A 0 A_Jump(34, "LaserBarrage");
	Goto See;
  Railgun:
    TNT1 A 0 A_StartSound("DSWTH", CHAN_WEAPON, 0, 1.0, 0.45);
    XRZR EEEEEEEEEEEEEEEEEE 1 A_FaceTarget;
	XRZR EEEEE 1;
	XRZR F 20
	{
		A_CustomRailgun(128, flags: RGF_SILENT|RGF_FULLBRIGHT, sparsity: 60, spawnclass: "DCY_PhasicRailLaser");
		A_StartSound("D4RAILGF", CHAN_6, 0, 1.0, 0.75);
		railloop++;
		
		if (railloop > 1)
			SetStateLabel("See");
	}
	Loop;
  LaserBarrage:
	XRZR E 0
	{
		A_Stop();
		A_StartSound("PhasicRazer/Sight", CHAN_VOICE, attenuation: 0.45);
	}
    XRZR EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1 A_FaceTarget();
	XRZR FEFEFEFEFEFEFEFEFEFEFEFE 2 A_PhasicShot();
	XRZR E 10;
	Goto See;
  Pain:
    TNT1 A 0 A_StopSound(CHAN_7);
	XRZR G 4;
    XRZR G 4 A_Pain();
	Goto See;
  Death:
  XDeath:
  Death.Fire:
	TNT1 A 0 A_StopSound(CHAN_7);
    TNT1 A 0 A_Jump(256, "Death1", "Death2");
	Goto Death1;
  Death1:
    XRZR I 1 { A_Flip(); fdeath = 1; }
	XRZR I 8 A_Scream();
	TNT1 A 0 A_Fall();
	XRZR JKL 8;
	XRZR M -1;
	Stop;
  Death2:
    XRZR N 1 { fdeath = 2; }
	XRZR N 8 A_Scream();
	TNT1 A 0 A_Fall();
	XRZR OPQ 8;
	XRZR R -1;
	Stop;
  Raise:
    XRZR M 0
	{
		if (fdeath = 1) SetStateLabel("Raise1");
		if (fdeath = 2) SetStateLabel("Raise2");
	}
	Goto Raise1;
  Raise1:
    XRZR MLKJI 8;
	TNT1 A 0 { fdeath = 0; A_SetScale(Scale.X, Scale.Y); }
	Goto See;
  Raise2:
    XRZR RQPON 8;
	TNT1 A 0 { fdeath = 0; }
	Goto See;
  }
}

Class DCY_PhasicRazerBeam : DCY_PowerRazerBeam { Default { Translation "0:255=%[0.00,0.00,0.00]:[1.43,0.85,2.00]"; Damage (1); MissileType "DCY_PhasicRazerBeamAura"; } }
Class DCY_PhasicRazerBeamAura : DCY_PowerRazerBeamLightning { Default { Translation "0:255=%[0.00,0.00,0.00]:[1.43,0.85,2.00]"; } }