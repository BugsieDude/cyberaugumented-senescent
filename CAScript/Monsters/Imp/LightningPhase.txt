Class DCY_LightningPhase : DCY_Impe
{
  Default
  {
  Health 200;
  Speed 9;
  +MISSILEEVENMORE;
  +QUICKTORETALIATE;
  +DONTHARMCLASS;
  +DONTHARMSPECIES;
  +NODROPOFF;
  DamageFactor "Electric", 0;
  BloodColor "Red";
  Translation "80:111=[208,208,208]:[10,10,10]", "1:3=[0,0,0]:[59,59,59]", "5:12=%[0.00,0.00,0.00]:[0.36,0.36,0.36]", "192:207=[64,255,64]:[0,43,0]", "240:247=[0,43,0]:[0,0,0]", "16:79=%[0.00,0.00,0.00]:[1.79,0.22,0.22]", "160:191=%[0.00,0.00,0.00]:[1.79,0.22,0.22]", "208:255=%[0.00,0.00,0.00]:[1.79,0.22,0.22]", "128:159=%[0.00,0.00,0.00]:[1.08,0.55,0.55]", "13:15=%[0.00,0.00,0.00]:[1.08,0.55,0.55]", "48:79=%[0.00,0.00,0.00]:[1.08,0.55,0.55]";
  SeeSound "LightningPhase/Sight";
  ActiveSound "LightningPhase/Active";
  PainSound "LightningPhase/Pain";
  DeathSound "LightningPhase/Death";
  Obituary "%o was all safe until a Lightning Phase sneaked upon %h.";
  HitObituary "%o was ripped and zapped by the Lightning Phase.";
  Tag "\c[j5]Lightning Phase\c-";
  MeleeSound "Doom4Imp/Slash";
  Scale 1.07;
  MeleeDamage 6;
  PainChance 100;
  BloodColor "852121";
  DCYMonster.ScientificName "Fortis ruptor";
  DCYMonster.FootstepSound "dcyknight/walk";
  }
  
  int phased;
  bool atkp;
  
  void A_LightningPhaseTrail()
  {
	if (!level.isFrozen() && DCY_EffectDistance(sfxdistance))
	{
		let trail = Spawn("DCY_ProjectileBaseTrail", (pos.x, pos.y, pos.z + 6));
		
		if (trail)
		{
			trail.frame = frame;
			trail.scale = scale;
			trail.angle = angle;
			trail.translation = translation;
			trail.sprite = GetSpriteIndex("3Y_3");
		}
	}
  }
  
  override void Tick()
  {
	super.Tick();
	if (phased && health > 0 && !isFrozen()) A_LightningPhaseTrail();
	if (phased) ft = "";
	else ft = sft;
  }
  
  void A_PhasedChase()
  {
	DCY_Chase(null, null, CHF_NOPLAYACTIVE);
	
	if (target && distance3D(target) < 128) { atkp = true; SetStateLabel("Unphase"); }
  }
  
  States
  {
  LoadSprites:
	3Y_3 ABCD 0;
  Spawn:
    LMEI A 10 DCY_Look();
	Loop;
  Look:
	LMEI AABBCCDD 3 DCY_LookingForPlayer();
	"####" "#" 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	"####" E 15 DCY_AlertSound();
	Goto See;
  See:
    LMEI A 0
	{ 
		if (phased)
			SetStateLabel("SeePhased");
	}
    LMEI AABBCCDD 3 DCY_Chase();
	Goto See+1;
  Lunge:
	LMEI E 7 
	{
		A_FaceTarget();
		phased = 0;
		return A_Jump(150, "Missile");
	}
    LMEI F 7 A_FaceTarget();
	LMEI G 0 A_CustomMeleeAttack(5 * random(1, 9), "Doom4Imp/Slash", "");
	LMEI GGGG 7
	{
		A_Recoil(random(-10, -13));
		A_CustomMeleeAttack(random(3, 4) * random(1, 9), "Doom4Imp/Slash", "");
	}
	LMEI G 0 A_Stop();
	TNT1 A 0 A_JumpIfCloser(85, "Melee");
	TNT1 A 0 A_Jump(150, "Missile");
	Goto Missile;
  Melee:
	LMEI E 6
	{
		A_SetTranslucent(1.0, 0);
		A_UnHideThing();
		phased = 0;
		A_FaceTarget();
	}
    LMEI F 6 A_FaceTarget();
	LMEI G 6
	{
		A_CustomMeleeAttack(4 * random(1, 10), "Doom4Imp/Slash", "");
		A_FaceTarget();
	}
	LMEI F 6;
	Goto See;
  Missile:
	LMEI E 0
	{
		phased = 0;
		A_UnHideThing();
		A_SetTranslucent(1.0, 0);
		
		If(target && Distance3D(target) < 200)
			SetStateLabel("Lunge");
		
		if (!random(0, 5)) SetStateLabel("Bouncer");
		if (!random(0, 10)) SetStateLabel("Discharge");
		A_FaceTarget();
		Return A_Jump(60, "Phase");
	}
	Goto NormalMissile;
  Bouncer:
	LMEI A 10 A_FaceTarget();
	LMEI A 0 A_StartSound(ActiveSound, CHAN_VOICE);
	LMEI EEEEEEEEEEEFFF 2
	{
		A_FaceTarget();
		if (DCY_EffectDistance(sfxdistance))
			A_SpawnItemEx("DCY_HexElec", 7, 25, 32, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE);
	}
	LMEI G 10
	{
		A_FaceTarget();
		A_SpawnProjectile("DCY_LightningPhaseBouncer", 32, 0, 0, CMF_OFFSETPITCH, pitch - 15);
	}
	Goto See;
  Phase:
	LMEI E 1 A_StartSound("LightningPhase/Teleport", CHAN_5);
	LMEI E 5 A_FaceTarget();
	LMEI EEEEEEEEE 1 A_FadeOut(0.1, 0);
	TNT1 A 0 { phased = 1; }
	Goto SeePhased;
  SeePhased:
	LMEI AAAABBBBCCCCDDDDAAAABBBBCCCCDDDD 1 A_PhasedChase();
	TNT1 A 0 A_Jump(50, "Unphase");
	LMEI AAAABBBBCCCCDDDDAAAABBBBCCCCDDDD 1 A_PhasedChase();
	Goto Unphase;
  Unphase:
	LMEI E 1 A_StartSound("LightningPhase/Teleport", CHAN_5);
	LMEI E 1 A_FaceTarget();
	LMEI EEEEEEEEE 1 A_FadeIn(0.1, 0);
	TNT1 A 0 { phased = 0; if (atkp) SetStateLabel("Lunge"); }
	Goto See;
  NormalMissile:
	LMEI EF 7 A_FaceTarget();
	LMEI GGG 13
	{
		A_FaceTarget();
		A_SpawnProjectile("DCY_LightningPhaseBall", 32, 0, random(-1, 1));
	}
	LMEI F 7 A_FaceTarget();
	Goto See;
  Discharge:
	LMEI A 10 { A_SetPainChance(10); A_FaceTarget(); }
	LMEI A 0 A_StartSound("CYBRLASC", CHAN_WEAPON);
	LMEI EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFF 2
	{
		A_FaceTarget(2.9, 2.9);
		if (DCY_EffectDistance(sfxdistance))
			A_SpawnItemEx("DCY_LightningPhaseElec", 7, 25, 32, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), flags: SXF_NOCHECKPOSITION);
	}
	LMEI G 7
	{
		A_FaceTarget(2.9, 2.9);
		A_Recoil(10);
		A_SetPainChance(100);
		A_StartSound("LIGTFIR1", CHAN_WEAPON);
		A_SpawnProjectile("DCY_LightningPhaseDischarge", 32, 0, random(-1, 1), CMF_AIMDIRECTION, pitch);
	}
	LMEI H 25;
	Goto See;
  Pain:
    LMEI H 4
	{
		phased = 0;
		A_UnHideThing();
		A_SetTranslucent(1.0, 0);
	}
	LMEI H 2 A_Pain();
	Goto See;
  Death:
    LMEI I 0;
    LMEI I 1
	{
		phased = 0;
		A_UnHideThing();
		A_SetTranslucent(1.0, 0);
	}
	LMEI I 6
	{
		A_UnSetSolid();
		A_Scream();
		A_NoBlocking();
	}
	LMEI JKLMNOPQR 6;
	LMEI S -1;
	Stop;
  XDeath:
	LMEG A 5;
	LMEG B 5 DCY_Gibs();
	LMEG C 5 A_NoBlocking();
	LMEG DEFG 5;
	LMEG H -1;
	Stop;
  Raise:
	LMEI RQPONMLKJIH 5;
	Goto See;
  }
}

Class DCY_LightningPhaseBall : DCY_ImpFireball
{
  Default
  {
  Damage 4;
  Speed 15.5;
  FastSpeed 18.5;
  Scale 1.3;
  +SEEKERMISSILE
  +ROLLSPRITE
  +NOEXTREMEDEATH
  Translation "0:255=%[0.00,0.00,0.00]:[0.45,2.00,0.45]";
  Obituary "%o was all safe until a Lightning Phase sneaked upon %h.";
  SeeSound "BALL001";
  DeathSound "FIR4IMPC";
  }
  States
  {
  Spawn:
	LMBB AAAABBBB 1 Bright
	{
		A_Weave(1, 1, 1, 1);
		A_SetRoll(frandom(0.00, 360.00));
		if (bSEEKERMISSILE) A_SeekerMissile(1, 5, SMF_PRECISE);
		if (random(0, 20) == 0) bSEEKERMISSILE = 0;
		A_SpawnItemEx("DCY_LightningPhaseBallTrail", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		if (DCY_EffectDistance(sfxdistance))
		{
			for (int i = 2; i > 0; i--) A_SpawnParticleEx(0x008028, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 70, frandom(1.00, 4.00), angle, frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), (Vel.x / 4.75), (Vel.y / 4.75), (Vel.z / 4.75), startalphaf: 1.0, fadestepf: 0, sizestep: -0.15);
			A_SpawnFlames("008028", 15, 15, 0, false, thrust: 2.25, ember: false);
		}
	}
	Loop;
  Death:
	LMBB C 7 Bright A_SpawnParticleEx(0x008028, TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT, 40, 40, frandom(0, 360), fadestepf: 0.124, sizestep: 3.25);
	LMBB DEFG 7 Bright;
	Stop;
  }
}

Class DCY_LightningPhaseDischarge : DCY_FastProjectile
{
  Default
  {
  Damage 2;
  Scale 0.5;
  Speed 40;
  +NEVERFAST
  +RIPPER
  -SEEKERMISSILE
  SeeSound "LIGT001";
  DeathSound "LIGT002";
  MissileType "DCY_RipperLaserTrail";
  DCY_FastProjectile.CSX true;
  DCY_FastProjectile.CSY true;
  DCY_FastProjectile.CT true;
  DCY_FastProjectile.CV true;
  DCY_LightningPhaseDischarge.Elec true;
  Translation "0:255=%[0.00,0.00,0.00]:[0.45,2.00,0.45]";
  Obituary "%o was all safe until a Lightning Phase sneaked upon %h.";
  RenderStyle "Add";
  }
  
  bool ist;
  property Elec : ist;
  
  States
  {
  Spawn:
	TNT1 A 1
	{
		A_SpawnItemEx("DCY_Arc", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 100);
		A_SpawnItemEx("DCY_ElecTrailBase", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_LightningPhaseTrail2", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_CastratorSpark", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 200);
		vel.x += frandom(-0.1, 0.1);
		vel.y += frandom(-0.1, 0.1);
		vel.z += frandom(-0.1, 0.1);
	}
	Loop;
  Death:
	TSAR A 1
	{
		A_SetRoll(frandom(0, 360));
		vel.x = 0;
		vel.y = 0;
		vel.z = 0;
		
		if (ist) A_SpawnItemEx("DCY_LightningExplode", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		
		for (int i = 4; i > 0; i--)
		{
			A_SpawnParticle(0x008028, SPF_FULLBRIGHT, random(10, 20), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-4.0, 4.0));
			A_SpawnItemEx("DCY_ElecDeathBase", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION);
		}
	}
	TSAR EFGHIJKLMNO 1
	{
		A_Explode(4, 100, damagetype: "lightning");
		A_SpawnItemEx("DCY_Arc", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 100);
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, 100);
	}
	TNT1 AAAA 3
	{
		A_SpawnItemEx("DCY_Arc", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 100);
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, 100);
	}
	Stop;
  }
}

Class DCY_LightningPhaseBallTrail : DCY_Effect
{
  Default
  {
  Alpha 0.755;
  Scale 1.0;
  RenderStyle "Add";
  Radius 1;
  Height 1;
  +NOCLIP
  +CLIENTSIDEONLY
  +NOINTERACTION
  +DONTSPLASH
  +ROLLSPRITE
  -SOLID
  }
  States
  {
  Spawn:
	LMBB AAAABBBBAA 1 Bright 
	{
		A_SetScale(Scale.X-0.1, Scale.Y-0.1);
		A_FadeOut(0.1);
	}
	Stop;
  }
}

Class DCY_LightningPhaseTrail2 : DCY_LightningPhaseBallTrail
{
  Default
  {
  Alpha 0.5;
  Scale 0.7;
  RenderStyle "Add";
  Radius 1;
  Height 1;
  +NOCLIP
  +CLIENTSIDEONLY
  +NOINTERACTION
  +DONTSPLASH
  +ROLLSPRITE
  -SOLID
  }
  States
  {
  Spawn:
	DLIT DEFGH 1 Bright 
	{
		if (Scale.x < 0) Destroy();
		A_SetScale(Scale.X-0.006, Scale.Y-0.006);
		A_FadeOut(0.005);
		roll = frandom(0, 360);
		A_Explode(randompick(2, 3), 50, damagetype: "Electric");
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 200);
	}
	Wait;
  }
}

Class DCY_LightningPhaseElec : DCY_LightningPhaseBallTrail
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[0.45,2.00,0.45]";
  Alpha 1.0;
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	roll = frandom(0, 360);
  }
  
  States
  {
  Spawn:
	P_FX CDEFGH 2;
	Stop;
  }
}

Class DCY_LightningPhaseBouncer : DCY_LightningPhaseBall
{
  Default
  {
  BounceCount 4;
  BounceType "Hexen";
  BounceSound "LightningPulse/Fire";
  SeeSound "LightningPulse/Fire";
  DeathSound "LightningBewm";
  BounceFactor 0.8;
  Gravity 0.2;
  Damage 7;
  Scale 1.2;
  -NOGRAVITY
  +SEEKERMISSILE
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	A_StartSound("LightningPulse/ProjectileLoop", 10, CHANF_LOOPING);
  }
  
  int t;
  bool d;
  
  States
  {
  Spawn:
	BL48 AABB 1
	{
		
		A_SpawnItemEx("DCY_ElecTrailBase", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 200);
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 50);
		
		if (tracer && CheckSight(tracer) && distance2D(tracer) < 100)
		{
			if (t < 40)
			{
				bNOGRAVITY = true;
				vel *= 0.01;
				bouncecount = 0;
				bouncefactor = 0;
				d = true;
			}
		}
		
		if (d)
		{
			switch (t)
			{
				case 30: A_StartSound("SPELL17", starttime: 0.6);
				case 45: A_ScaleVelocity(10); break;
				case 50: for (int i = 2; i > 0; i--) A_SeekerMissile(999, 999, SMF_PRECISE|SMF_LOOK);
				bBOUNCEONWALLS = false;
				bBOUNCEONFLOORS = false;
				bBOUNCEONCEILINGS = false;
				A_SpawnItemEx("DCY_OverdemoniacRing", xvel: vel.x, yvel: vel.y, zvel: vel.z, flags: SXF_ABSOLUTEVELOCITY|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION); break;
			}
			
			if (t > 45 && t < 55)
				A_ScaleVelocity(1.2);
			
			t++;
		}
	}
	Loop;
  Death:
    TNT1 A 10
    {
		A_Explode(20, 100);
		A_StopSound(CHAN_BODY);
		A_SpawnItemEx("DCY_LightningExplode", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		for (int i = random(15, 25); i > 0; i--) A_SpawnItemEx("DCY_ElecDeathbase", 0, 0, 0, frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	Stop;
  }
}