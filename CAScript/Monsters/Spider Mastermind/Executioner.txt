Class DCY_Executioner : DCY_TheGiantEnemySpider
{
  Default
  {
  Health 5500;
  Tag "\c[e2]Executioner\c-";
  Speed 8;
  FastSpeed 10;
  Translation "16:230=%[0.00,0.00,0.00]:[2.00,0.61,0.00]", "208:239=%[0.00,0.00,0.00]:[2.00,0.61,0.00]", "160:191=%[0.00,0.00,0.00]:[2.00,0.72,0.12]", "80:111=[255,255,255]:[0,0,0]", "232:235=[0,0,0]:[171,44,12]", "48:79=%[0.00,0.00,0.00]:[1.01,1.01,1.01]", "5:15=%[0.00,0.00,0.00]:[0.67,0.67,0.67]", "1:3=%[0.00,0.00,0.00]:[0.67,0.67,0.67]", "128:159=%[0.00,0.00,0.00]:[1.18,0.99,0.90]";
  BloodType "AndroidNeonFluid", "AndroidNeonFluid", "AndroidNeonFluid";
  BloodColor "ff5219";
  Obituary "%o messed with the Executioner and got the quietus.";
  SeeSound "PSSpider/Sight";
  ActiveSound "DCYLost/Active";
  PainSound "DCYLost/Pain";
  DeathSound "PSSpider/Death";
  DropItem "DCY_UltramodernEnergy", 128;
  DropItem "DCY_UltramodernEnergy", 128;
  DropItem "DCY_UltramodernEnergy", 128;
  DropItem "DCY_UltramodernEnergy", 128;
  -FLOAT
  -NOGRAVITY
  +MISSILEMORE
  +DONTFALL
  FloatSpeed 5;
  Scale 1.1;
  DCYMonster.GibType "DCY_GibletsAdd";
  }
  
  int missile;
  
  override void Tick()
  {
	Super.Tick();
	
	If (Health > 0 && !IsFrozen())
	{
		A_SpawnItemEx("DCY_DarkLightningFlare", frandom(55, 65), frandom(55, 65),74,0,0,frandom(-6,-8),0,128);
		A_SpawnItemEx("DCY_DarkLightningFlare", frandom(-55, -65), frandom(-55, -65),74,0,0,frandom(-6,-8),0,128);
		A_SpawnItemEx("DCY_DarkLightningFlare", frandom(-55, -65), frandom(55, 65),74,0,0,frandom(-6,-8),0,128);
		A_SpawnItemEx("DCY_DarkLightningFlare", frandom(55, 65), frandom(-55, -65),74,0,0,frandom(-6,-8),0,128);
	}
  }
  
  States
  {
  Spawn:
	I8HJ AB 3 DCY_Look();
	Loop;
  Look:
	I8HJ AB 3 DCY_LookingForPlayer();
	Loop;
  Alert:
	"####" "#" 1 DCY_AlertSound();
	Goto See;
  See:
	I8HJ A 0
	{
		bNoGravity = true;
		bFloat = true;
		bFloorClip = true;
	}
	I8HJ AB 3 A_Chase();
	Loop;
  Missile:
	I8HJ ABABPPP 3 A_FaceTarget();
	Goto MissileFire;
  MissileFire:
	I8HJ E 0 A_Jump(60, "Bewm");
	I8HJ E 2 A_FaceTarget();
	I8HJ F 2
	{
		A_SpawnProjectile("DCY_ExecutionerBeam", 25, -25, frandom(-6.0, 6.0), CMF_OFFSETPITCH, frandom(-3.0, 3.0));
		A_SpawnProjectile("DCY_ExecutionerBeam", 25, 25, frandom(-6.0, 6.0), CMF_OFFSETPITCH, frandom(-3.0, 3.0));
		A_FaceTarget();
		A_MonsterRefire(3, "See");
		Return A_Jump(7, "Bewm");
	}
	Goto MissileFire+1;
  Bewm:
	I8HJ P 5 A_FaceTarget();
	I8HJ P 0 A_StartSound("MM/Charge", pitch: 1.234);
	I8HJ NNNNNNNNNNNNNNNNNNNNN 1
	{
		if (DCY_EffectDistance(sfxdistance))
			A_SpawnItemEx("DCY_LightningPhaseElec", 10, 0, 50, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE);
		A_FaceTarget();
	}
	I8HJ O 4
	{
		A_StartSound("LIGT001", CHAN_WEAPON, 0, 1.0, 0.65);
		A_SpawnProjectile("DCY_ExecutionerLightning", 50, flags: CMF_OFFSETPITCH, pitch: pitch - 10);
	}
	I8HJ NPP 5;
	Goto See;
  Pain:
	I8HJ A 3;
	I8HJ B 3 A_Pain();
	Goto See;
  Death:
	I8HJ H 1;
	I8HJ H 10
	{
		bFloorClip = true;
		bFloat = false;
		A_Scream();
		A_Stop();
	}
	I8HJ IJ 6;
	I8HJ K 6
	{
		if (damagetype != "Massacre")
		{
			for (int i = 3; i > 0; i--) {
				DCY_Gibs(false);
				A_SpawnItemEx("DCY_AndroidExplosionBiggie", frandom(-85.0, 85.0), frandom(-85.0, 85.0), frandom(15.0, 55.0), frandom(-3.0, 3.0), frandom(-3.0, 3.0), frandom(-3.0, 3.0), random(0, 360), SXF_NOCHECKPOSITION);
			}
		}
	}
	I8HJ LM 4;
	TNT1 A 30 A_NoBlocking();
	TNT1 A -1 A_BossDeath();
	Stop;
  }
}

Class DCY_ExecutionerLightning : DCY_MeatballElecball
{
  Default
  {
  Radius 15;
  Height 30;
  DamageType "Electric";
  Speed 25;
  +NEVERFAST
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.61,0.00]";
  DamageFunction (50);
  SeeSound "DCYHex/Lightning";
  DeathSound "";
  +NODAMAGETHRUST
  -NOGRAVITY
  +PAINLESS
  Gravity .45;
  }
  
  int timer;
  
  States
  {
  Spawn:
	LFX1 STUVW 1
	{
		for (int i = 2; i > 0; i--)
		{
			A_SpawnItemEx((!random(0, 1)) ? "DCY_ElecTrailBase" : "DCY_ElecDeathBase", frandom(-40, 40), frandom(-40, 40), frandom(-40, 40), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 150);
			A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 70, 0, frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), startalphaf: 0.7, fadestepf: 0.015, sizestep: 0.55);
		}
	}
	Loop;
  Death:
	LFX1 STUVW 1
	{
		timer++;
		A_Explode((4), 100, XF_NOTMISSILE);
		
		for (int i = 2; i > 0; i--)
		{
			A_SpawnItemEx((!random(0, 1)) ? "DCY_ElecTrailBase" : "DCY_ElecDeathBase", frandom(-40, 40), frandom(-40, 40), frandom(-40, 40), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 150);
			A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 70, 0, frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), startalphaf: 0.7, fadestepf: 0.015, sizestep: 0.55);
		}
		
		switch (timer)
		{
			case 40:
			case 60:
			case 80:
				A_StartSound("Malwrath/HomingBall", CHAN_BODY, pitch: 1.345);
				for (int i = random(5, 10); i > 0; i--) A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 100, 0, frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), startalphaf: 1.0, fadestepf: 0.015, sizestep: 2.5);
				A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("C28YA0"), STYLE_ADD, SPF_FULLBRIGHT, 100, 450, startalphaf: 0.1, fadestepf: -0.2, sizestep: -45); break;
			case 110:
				A_RadiusThrust(6000, 600, RTF_NOIMPACTDAMAGE|RTF_NOTMISSILE);
				A_RadiusThrust(70, 110, RTF_NOTMISSILE|RTF_NOIMPACTDAMAGE|RTF_THRUSTZ);
				for (int i = 3; i > 0; i--) A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("C28YA0"), STYLE_ADD, SPF_FULLBRIGHT, 100, 100, startalphaf: 1, fadestepf: 0.1, sizestep: 45);
				A_QuakeEx(4, 4, 4, 50, 0, 2000, QF_RELATIVE|QF_SCALEDOWN);
				A_StartSound("Executioner/BallSpit", CHAN_BODY, attenuation: 0.65); break;
			case 250: Destroy(); break;
		}
		
		if (timer > 110)
		{
			A_Explode((6), 128, XF_NOTMISSILE);
			scale.x -= 0.005;
			scale.y -= 0.005;
			if (!(GetAge() % 5)) A_RadiusGive("DCY_ExecutionerSlowdownGiver", 256, RGF_PLAYERS|RGF_MONSTERS);
			if (!(getAge() % 3)) A_SpawnProjectile("DCY_ExSpark", 30, 0, frandom(0, 360), CMF_OFFSETPITCH, frandom(-10, -60));
			A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 140, 0, frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), startalphaf: 1.0, fadestepf: 0.04, sizestep: 15.5);
		}
	}
	Loop;
  }
}

Class DCY_ExSpark : DCY_Projectile
{
  Default
  {
  Speed 15;
  +NEVERFAST
  Damage 6;
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.61,0.00]";
  BounceType "Doom";
  Gravity .7;
  Damage 3;
  Scale .1;
  Radius 10;
  Height 10;
  -NOGRAVITY
  }
  
  int t;
  
  override void PostBeginPlay()
  {
	t = 1;
  }
  
  States
  {
  Spawn:
	LMBB AAAABBBB 1 Bright
	{
		A_Weave(1, 1, 1, 1);
		A_SetRoll(frandom(0.00, 360.00));
		if (DCY_EffectDistance(1200)) A_SpawnParticleEx(0xff5219, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 50, random(4, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.4, 0.4), frandom(-0.4, 0.4), frandom(-0.4, 0.4), fadestepf: 0, sizestep: -0.5);	
	}
	Loop;
  Death:
	LMBB AB 1 A_FadeOut(0.35);
	Stop;
  }
}

Class DCY_ExecutionerBeam : DCY_RehauledPlasma
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.61,0.00]";
  Damage 4;
  Speed 30.5;
  Scale 1.3;
  RenderStyle "Add";
  +BRIGHT
  +NEVERFAST
  +BLOODLESSIMPACT
  -BLOODSPLATTER
  SeeSound "DCYlaser";
  DeathSound "";
  }
  
  States
  {
  Spawn:
	THZ4 A 1
	{
		A_SpawnItemEx("DCY_ExecutionerBeamTrail", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		A_Weave(3, 0, frandom(-5.0, 5.0), 0);
	}
	Loop;
  Death:
	D8PJ E 2
	{
		A_FadeOut(0.1, 0);
		A_SetScale(1.0, 1.0);
		A_SpawnItemEx("DCY_ElecDeathBase", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION);
	}
	D8PJ FGHIJK 2 A_FadeOut(0.1, 0);
	Stop;
  }
}

Class DCY_ExecutionerSlowdownGiver : Inventory
{
  Default
  {
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  }
  
  override bool Use(bool pickup)
  {
	if (!owner) return false;
	if (owner is "PlayerPawn" && owner.health > 0) { owner.GiveInventory("DCY_ExecutionerSlowdown", 1); owner.A_StartSound("POWERGET", CHAN_ITEM, volume: .75, pitch: 2.123); }
	if (owner is "DCYMonster" && owner.bISMONSTER && owner.health > 0 && !(owner is "DCY_Executioner") && !owner.bBOSS) owner.GiveInventory("DCY_ExecutionerSlowdownEnemy", 1);
	return true;
  }
}

Class DCY_ExecutionerSlowdown : PowerSpeed
{
  Default
  {
  Powerup.Duration -3;
  Powerup.Color "4a2d23", 0.05;
  Speed 0.55;
  }
  
  override void DoEffect()
  {
	super.DoEffect();
	if (!(GetAge() % random(3, 6))) A_SpawnItemEx("DCY_ElecTrailBase", frandom(-owner.radius, owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 150);
  }
}

Class DCY_ExecutionerSlowdownEnemy : Powerup
{
  Default
  {
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Powerup.Duration -3;
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.61,0.00]";
  Scale 0.5;
  }
  
  override void DoEffect()
  {
	super.DoEffect();
	owner.A_SetTics(int(owner.tics / 0.5));
	if (!(GetAge() % random(3, 6))) A_SpawnItemEx("DCY_ElecTrailBase", frandom(-owner.radius, owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION, failchance: 150);
	owner.bMISSILEEVENMORE = true;
	owner.bQUICKTORETALIATE = true;
  }
}

Class DCY_ExecutionerBeamTrail : DCY_ProjectileBaseTrail { Default { Alpha 0.5; Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.00,0.00]"; } }