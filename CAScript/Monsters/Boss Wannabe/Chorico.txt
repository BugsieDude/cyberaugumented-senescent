Class DCY_ChoricoNepheloma : DCY_NavyTerminator
{
  bool teleporting;
  int teleloop;
  int exploding;
  int explodesound;
  int beamloop;
  
  void A_NephelomaTeleportSetup(bool tof)
  {	
	bThruSpecies = (!tof) ? true : false;
	bShootable = (!tof) ? false : true;
	bInvulnerable = (!tof) ? true : false;
	teleporting = (!tof) ? true : false;
	
	A_StartSound("GALCTELE", CHAN_BODY);
	Spawn("DCY_VagueFlare", (pos.x, pos.y, pos.z + 40));
	Spawn("DCY_NephelomaTele", (pos.x, pos.y, pos.z + 40));
  }
  
  void A_NephelomaLaser()
  {
	if(target)
	{
	  A_CustomRailgun(10, -28, "", "", RGF_SILENT|RGF_FULLBRIGHT, 3, 0, "DCY_NephelomaLaserPuff", sparsity: 90, spawnclass: "DCY_PhasicRailLaser", spawnofs_z: 8);
	  A_QuakeEx(2, 2, 2, 50, 0, 2000, "", QF_SCALEDOWN);
	  A_FaceTarget(0.30,0.30);
	}
  }
  
  Default
  {
  Health 8000;
  BloodColor "Purple";
  BloodType "DCY_SpiritBlood";
  Translation "80:111=%[0.00,0.00,0.00]:[0.35,0.35,0.35]", "1:3=%[0.00,0.00,0.00]:[0.35,0.35,0.35]", "5:12=%[0.00,0.00,0.00]:[0.35,0.35,0.35]", "13:79=%[0.00,0.00,0.00]:[1.54,0.76,2.00]", "160:255=%[0.00,0.00,0.00]:[1.54,0.76,2.00]", "128:159=%[0.00,0.00,0.00]:[1.54,0.76,2.00]";
  Tag "\c[k5]Cho\c[c6]rico\c- \c[j8]Nech\c[q0]elo\c[z7]ma\c-";
  SeeSound "ChoricoNepheloma/Sight";
  ActiveSound "ChoricoNepheloma/Active";
  PainSound "ChoricoNepheloma/Pain";
  TeleFogSourceType "DCY_BossTeleport";
  TeleFogDestType "DCY_BossTeleport";
  Monster;
  +NOTARGET
  +BOSS
  +BOSSDEATH
  +FLOORCLIP
  +QUICKTORETALIATE
  +MISSILEMORE 
  +NOICEDEATH
  +NOEXTREMEDEATH
  +DONTGIB
  +DONTRIP
  +NOTELEFRAG
  +NOTELESTOMP
  +DONTFALL
  +DONTMORPH
  +DONTSQUASH
  +FRIGHTENING
  +DONTHARMSPECIES
  +DONTHARMCLASS
  +NEVERRESPAWN
  +NOGRAVITY
  +FLOAT
  +NOFEAR
  -NOPAIN
  Speed 10;
  FloatSpeed 10;
  DamageFactor "Lunacy", 0.00;
  DCYMonster.ScientificName "Gehenna";
  +DCYMONSTER.DCYSUPERBOSS;
  DCYMonster.WD 3500;
  DCYMonster.CanAnnounce true;
  DCYMonster.AnnounceSound "DANGERN";
  DCYMonster.AnnounceColor "k5";
  DCYMonster.AnnounceMessage "Wormhole.";
  }
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o is fading away...",
		"%o got plunged into darkness.",
		"You will now succumb to darkness.",
		"You shouldn't have gone here, %o."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  int lasercooldown;
  
  override void Tick()
  {
    super.Tick();
	
	If (!IsFrozen() && !teleporting && !sv_effectchoker && DCY_EffectDistance(sfxdistance))
	{
		for (int i = 4; i > 0; i--)
			A_SpawnItemEx("DCY_NimbusJetFlare", frandom(-17.0, 17.0), frandom(-17.0, 17.0), frandom(48.0, 51.0), 0, 0, frandom(-3.5, -6.5), flags: SXF_NOCHECKPOSITION, 50);
	  
		A_SpawnItemEx("DCY_ChoricoJet", frandom(-17.0, 17.0), frandom(-17.0, 17.0), frandom(48.0, 51.0), 0, 0, frandom(-1.0, -2.5), flags: SXF_NOCHECKPOSITION, 80);
	}
	
	if (lasercooldown > 0) lasercooldown--;
  }
  
  bool ang;
  
  States
  {
  Spawn:
	CH0R AB 2 A_Look();
	Loop;
  See:
	CH0R AB 2
	{
		A_Chase();
		if (!random(0, 1)) Return A_Jump(1, "Teleporting", "Teleport2");
		Return Resolvestate(Null);
	}
	Loop;
  Teleporting:
    CH0R AB 1;
	CH0R A 2 A_NephelomaTeleportSetup(false);
	TNT1 A 1;
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander();
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander();
	TNT1 A 1;
	CH0R A 2 A_NephelomaTeleportSetup(true);
	Goto See;
  Teleport2Backup:
	TNT1 A 0 { bNoFear = false; bFrightened = true; }
	Goto Teleport2;
  Teleport2:
	CH0R AB 1;
	CH0R A 2
	{
		A_NephelomaTeleportSetup(false);
		bNoTarget = true;
		teleloop = random(0, 200);
	}
	TNT1 A 1;
	Goto Teleport2Loop;
  Teleport2Loop:
	TNT1 A 1
	{
		if (teleloop >= 300 || (target && distance3D(target) < 200))
			SetStateLabel("Teleport2End");
		
		teleloop++;
		
		for (int i = 4; i > 0; i--)
			A_Chase("Teleport2End", null, CHF_NOPLAYACTIVE);
	}
	Loop;
  Teleport2End:
	CH0R A 1
	{
		bNoFear = true;
		bFrightened = false;
		A_NephelomaTeleportSetup(true);
	}
	Goto See;
  Missile:
	CH0R G 0
	{
		if (lasercooldown > 0) SetStateLabel("See");
		else
		{
			switch (random(0, 29))
			{
				case 1: Return ResolveState("Minigun"); break;
				case 29: Return ResolveState("OrbitalLaser"); break;
			}
			switch (random(0, 13))
			{
				case 1: Return ResolveState("Minigun"); break;
				case 12: Return ResolveState("Pentagram"); break;
				case 13: Return ResolveState("Laser"); break;
			}
		}
		
		Return A_Jump(80, "Torpedos");
	}
	Goto Minigun;
  Torpedos:
	CH0R ABAB 4 A_FaceTarget();
	CH1R A 10 { ang = randompick(0, 1); A_FaceTarget(); }
	CH1R AAAA 14
	{
		ang = (!ang) ? true : false;
		A_SpawnProjectile("DCY_CTorpedo", 75, 0, (ang) ? -80 : 80, CMF_OFFSETPITCH, 0);
		A_FaceTarget();
	}
	Goto See;
  Minigun:
	CH0R G 1 A_FaceTarget();
	CH0R G 30
	{
		A_FaceTarget();
		A_StartSound("Minigun/Windup", CHAN_WEAPON, attenuation: 0.85, pitch: 0.55);
	}
	CH0R HI 3
	{
		A_SpawnProjectile("DCY_NephelomaTracer", 60, -10, frandom(-4.0, 4.0));
		A_FaceTarget();
		A_StartSound("PIS2FIRE", CHAN_WEAPON, attenuation: 0.45);
		Return A_MonsterRefire(80, "See");
	}
	Goto Minigun+2;
  Laser:
    TNT1 A 0 { beamloop = 0; }
	CH0R G 1 
	{
	A_FaceTarget();
	A_StartSound("ChoricoNepheloma/Active", CHAN_VOICE,volume: 0.45, attenuation: 0);
	A_StartSound("PlasmicLaser/Charge",CHAN_WEAPON,attenuation: 0);
	}
	CH0R G 1
	{
	    if(beamloop > 85) SetStateLabel("LaserStart");
		
		A_FaceTarget(0.85,0.85);
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), 80, 0, frandom(35, 55), frandom(-20, 20) - 17, frandom(-20, 20) + 36, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 2, fadestepf: 0.05, sizestep: 0.725);
			A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(4, 15), 0, frandom(0, 30), frandom(-20, 20) - 17, frandom(-5, 5) + 36, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 5, fadestepf: 0.05, sizestep: -0.225);
		}
	
		beamloop++;
	}
	Goto Laser+2;
  LaserStart:
	CH0R H 15
	{
	    beamloop = 0;
	    A_FaceTarget();
		A_StartSound("LaserSegment1",9,attenuation: 0);
	}
	CH0R H 1
	{
		A_Dodging(randompick(-5, 0, 5));
		A_StartSound("LaserSegment2",10,CHANF_LOOPING, attenuation: 0);
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), 80, 0, frandom(35, 55), frandom(-20, 20) - 17, frandom(-20, 20) + 36, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 2, fadestepf: 0.05, sizestep: 0.725);
			A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(4, 15), 0, frandom(0, 30), frandom(-20, 20) - 17, frandom(-5, 5) + 36, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 5, fadestepf: 0.05, sizestep: -0.225);
		}
		
		A_NephelomaLaser();
	}
	CH0R H 1 
	{
	if(beamloop > 120)
	  SetStateLabel("LaserEnd");
	
	if (DCY_EffectDistance(sfxdistance))
	{
		A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), 80, 0, frandom(35, 55), frandom(-20, 20) - 17, frandom(-20, 20) + 36, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 2, fadestepf: 0.05, sizestep: 0.725);
		A_SpawnParticleEx(0x6417ff, TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(4, 15), 0, frandom(0, 30), frandom(-20, 20) - 17, frandom(-5, 5) + 36, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 5, fadestepf: 0.05, sizestep: -0.225);
	}
		
	A_NephelomaLaser();
	beamloop++;
	}
	Goto LaserStart+2;
   LaserEnd:
	CH0R G 35 A_StopSound(10);
	CH0R G 1 A_Stop();
	Goto See;
  Pentagram:
	CH0R A 1 A_FaceTarget();
	CH0R A 10
	{
		A_FaceTarget();
		A_StartSound("ChoricoNepheloma/Active", CHAN_VOICE, attenuation: 0.14);
		A_StartSound("SPELL11", CHAN_WEAPON, attenuation: 0.85, pitch: 0.15, starttime: 0.2);
	}
	CH1R AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBB 1
	{
		A_SpawnItemEx("DCY_ChoricoChargeTrail", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME);
		A_FaceTarget();
		A_SpawnItemEx("DCY_ChoricoArc", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20) + 30, flags: SXF_NOCHECKPOSITION, failchance: 100);
	}
	CH1R C 10
	{
		A_SpawnItemEx("DCY_ChoricoChargeTrail2", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME);
		A_StartSound("CH0RPENF", CHAN_WEAPON, attenuation: 0.15, pitch: 1.3);
		A_SpawnProjectile("DCY_ChoricoPentagram", 30);
		A_FaceTarget();
	}
	CH1R B 30;
	CH0R G 1 A_Stop();
	Goto See;
  OrbitalLaser:
	CH1R A 50
	{
		
		if (lasercooldown > 0) SetStateLabel("See");
		else
		{
		bNOPAIN = true;
		A_StartSound("ChoricoNepheloma/Active", CHAN_VOICE, attenuation: 0.14);
		A_FaceTarget();
		}
	}
	CH1R B 1 A_StartSound("SPELL12", CHAN_BODY, attenuation: 0.5);
	CH1R BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 1
	{
		A_QuakeEx(2, 2, 2, 10, 0, 2000, "", QF_SCALEDOWN|QF_3D);
		A_SpawnItemEx("DCY_ChoricoChargeTrail", -0.5, zvel: 5, flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME);
		A_FaceTarget();
		lasercooldown = 1000;
		for (int i = 2; i > 0; i--) A_SpawnItemEx("DCY_ChoricoElec", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20) + 30, frandom(-5, 5), frandom(-5, 5), frandom(10, 20), flags: SXF_NOCHECKPOSITION, failchance: 100);
	}
	CH1R C 10
	{
		A_SpawnItemEx("DCY_ChoricoChargeTrail2", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME);
		A_StartSound("CH0RPENF", CHAN_WEAPON, attenuation: 0.15);
		A_SpawnProjectile("DCY_ChoricoLaser", 30);
		A_FaceTarget();
		bNOPAIN = false;
	}
	CH1R B 30;
	CH0R G 1 A_Stop();
	Goto See;
  Pain:
	CH0R L 3;
	CH0R L 3
	{
		A_Pain();
		Return A_Jump(50, "Teleport", "Teleport2Backup");
	}
	Goto See;
  Death:
	CH1R BBBDDDEEEDDD 1
	{
		switch (exploding) {
			case 1: A_StartSound("ChoricoNepheloma/Shatter", CHAN_VOICE, attenuation: 0); break;
			case 20: vel.z += 0.1; break;
			case 165:
				tics = 60;
				frame = 5;
				vel = (0, 0, 0);
				for (int i = random(40, 80); i > 0; i--)
					A_SpawnItemEx("DCY_ChoricoGlass", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5) + 40, frandom(-5, 5), frandom(-3, 5), frandom(8, 20), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
				for (int i = random(10, 20); i > 0; i--) A_SpawnItemEx("DCY_ChoricoExplosion", frandom(-8, 8) + 10, frandom(-8, 8), frandom(-8, 8) + 30, frandom(-5, 5), frandom(-5, 5), frandom(2, 5), flags: SXF_NOCHECKPOSITION, failchance: 100);
				break;
		}
		
		if (exploding < 155)
		{
			if (exploding >= 30) {
				A_SpawnItemEx("DCY_ChoricoExplosion", frandom(-8, 8) + 10, frandom(-8, 8), frandom(-8, 8) + 30, frandom(-5, 5), frandom(-5, 5), frandom(5, 10), flags: SXF_NOCHECKPOSITION, failchance: 100);
			}
			
			if (exploding >= 60) {
				A_SpawnItemEx("DCY_ElecDeathBase", frandom(-40, 40), frandom(-40, 40), frandom(10, 100), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), flags: SXF_NOCHECKPOSITION|SXF_USEBLOODCOLOR, failchance: 100);
			}
			
			A_SpawnItemEx("DCY_ElecDeathBase", frandom(-40, 40), frandom(-40, 40), frandom(10, 100), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), flags: SXF_NOCHECKPOSITION|SXF_USEBLOODCOLOR, failchance: int(exploding));
		}
		
		if (exploding >= 166)
		{
			A_StopSound(CHAN_BODY);
			A_StartSound("Archon/Explode", CHAN_6, attenuation: 0);
			A_SpawnItemEx("DCY_Explosion_1_Obliteration", zofs: 50, flags: SXF_NOCHECKPOSITION);
			Spawn("DCY_VagueFlare", (pos.x, pos.y, pos.z + 40));
			A_NoBlocking();
			Destroy();
		}
		
		A_SetAngle(Angle+30, SPF_INTERPOLATE);
		
		exploding++;
	}
	Loop;
  }
}

Class DCY_ChoricoElec : DCY_ElecDeathBase { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.00,1.01]"; Scale 2.0; } }
Class DCY_ChoricoExplosion : DCY_Explosion_1 { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.00,1.01]"; Scale 0.45; } }

Class DCY_ChoricoChargeTrail : DCY_ProjectileBaseTrail
{
  Default
  {
  RenderStyle "AddStencil";
  StencilColor "Purple";
  Scale 1.25;
  }
  
  States
  {
  Spawn:
	"####" "#" 2;
	Stop;
  }
}

Class DCY_ChoricoChargeTrail2 : DCY_ChoricoChargeTrail
{
  States
  {
  Spawn:
	"####" "##########" 1
	{
		A_FadeOut(0.1);
		A_SetScale(Scale.X + 0.25);
	}
	Stop;
  }
}

Class DCY_ChoricoPentagram : DoomImpBall
{
  Default
  {
  Speed 30;
  +WALLSPRITE
  +ROLLSPRITE
  +NEVERFAST
  +BRIGHT
  +RIPPER
  Radius 20;
  Height 30;
  Scale 0.275;
  DamageFunction 10;
  SeeSound "";
  DeathSound "";
  }
  
  States
  {
  Spawn:
	EKOX A 0 NoDelay A_StartSound("ChoricoNepheloma/PentagramLoop", CHAN_5, CHANF_LOOPING, attenuation: 0.1);
	EKOX A 1
	{
		A_SpawnItemEx("DCY_CNTrail", flags: SXF_TRANSFERROLL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
		A_SetRoll(Roll+4, SPF_INTERPOLATE);
		for (int i = 3; i > 0; i--)
			A_SpawnItemEx("DCY_ChoricoArc", frandom(-10, 10), frandom(-100, 100), frandom(-100, 100), flags: SXF_NOCHECKPOSITION, failchance: 100);
	}
	Loop;
  Death:
	TNT1 A 160
	{
		A_Explode(444, 200);
		A_QuakeEx(4, 4, 4, 80, 0, 3000, "", QF_SCALEDOWN|QF_3D, rollintensity: 2, rollwave: 0.2);
		
		for (int i = 12; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1_Obliteration", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20), frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(0, 360), SXF_NOCHECKPOSITION);
		
		A_StartSound("Eradicator/Explode", CHAN_BODY, attenuation: 0.35, pitch: 1.25);
		A_StopSound(CHAN_5);
	}
	Stop;
  }
}

Class DCY_ChoricoLaser : DCY_Projectile
{
  Default
  {
  YScale 512.256;
  XScale 10.5;
  Speed 10;
  RenderStyle "Add";
  DamageType "Lunacy";
  Alpha 1.0;
  +OLDRADIUSDMG
  +BRIGHT
  +NOCLIP
  +THRUACTORS
  +FLOORHUGGER
  +SEEKERMISSILE
  +FORCERADIUSDMG
  +FORCEYBILLBOARD
  +NOBLOCKMAP
  +BOUNCEONWALLS
  BounceFactor 1.0;
  BounceType "Hexen";
  Radius 45;
  Damage (50);
  Translation "0:255=%[0.17,0.00,0.35]:[1.79,0.57,2.00]";
  }
  
  int loop;
  
  override void PostBeginPlay()
  {
	super.Postbeginplay();
	A_StartSound("DCYMaykrBeam", attenuation: ATTN_NONE);
	A_StartSound("DCYMaykrBeamLoop", 10, CHANF_LOOPING, attenuation: 0.15);
	A_SpawnItemEx("DCY_AuteurBeam");
	A_Explode(105, 100, XF_NOTMISSILE, 0);
	loop = 650;
  }
  
  States
  {
  Spawn:
    L2ZO B 1
	{
		A_SetScale(frandom(10, 11.4), 512.256);
		A_SpawnItemEx("DCY_AuteurBeam", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE);
		A_QuakeEx(0, 0, 5, 30, 0, 2000, "", QF_SCALEDOWN|QF_3D);
		A_Explode(105, 100);
		A_SeekerMissile(1, 1);
		for (int i = 2; i > 0; i--) A_SpawnParticleEx(0x22105c, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 290, 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), fadestepf: 0.015, sizestep: 0.55);
		for (int i = 2; i > 0; i--) A_SpawnItemEx("DCY_ChoricoElec", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20), frandom(-5, 5), frandom(-5, 5), frandom(10, 20), flags: SXF_NOCHECKPOSITION, failchance: 100);
		loop--;
		if (loop <= 0) SetStateLabel("Fade");
	}
	Loop;
  Fade:
	L2ZO B 0 A_StartSound("DCYMaykrBeamEnd", 11, attenuation: 0.15);
	L2ZO BBBBBBBBBBBB 1
	{
		A_StopSound(CHAN_BODY);
		A_StopSound(10);
		A_FadeOut(0.1);
		A_Warp(AAPTR_MASTER, 0, 70, 70, Angle, WARPF_ABSOLUTEANGLE|WARPF_INTERPOLATE);
		A_SetAngle(Angle+13);
		A_SetScale(Scale.X-0.1, 256.256);
	}
	Stop;
  }
}

Class DCY_CNTrail : DCY_ProjectileBaseTrail { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.00,1.01]"; +ROLLSPRITE +WALLSPRITE } }
Class DCY_ChoricoArc : DCY_Arc { Default { Scale 1.2; Translation "0:255=%[0.00,0.00,0.00]:[1.22,0.80,2.00]"; } } 
Class DCY_ChoricoJet : DCY_Explosion_1_Smaller { Default { Translation "0:255=%[0.00,0.00,0.00]:[1.22,0.80,2.00]"; } } 
Class DCY_NephelomaTele : DCY_RZTele { Default { Translation "0:255=%[0.00,0.00,0.00]:[1.22,0.80,2.00]"; +NOTIMEFREEZE } } 
Class DCY_NephelomaLaserPuff : DCY_Explosion_1_Medium { Default { Translation "0:255=%[0.00,0.00,0.00]:[1.22,0.80,2.00]"; +NOTIMEFREEZE; +NOBLOCKMAP; +ALLOWPARTICLES; +ALWAYSPUFF; } }
Class DCY_CNFlare : DCY_ArbiterFlare { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.00,1.01]"; +ROLLSPRITE +WALLSPRITE } }

Class DCY_CTorpedo : DCY_ArbiterTorpedo
{
  Default
  {
  Speed 5;
  +SEEKERMISSILE
  Translation "0:255=%[0.00,0.00,0.00]:[0.60,0.60,0.60]", "168:191=%[0.07,0.00,0.43]:[1.01,0.00,2.00]", "16:47=%[0.05,0.00,0.27]:[1.02,0.00,2.00]", "208:235=%[0.00,0.00,0.00]:[1.01,0.00,2.00]", "248:249=%[0.00,0.00,0.00]:[1.02,0.00,2.00]";
  }
  
  States
  {
  Spawn:
	64MS A 1
	{
		A_SpawnItemEx("DCY_CNFlare");
		if (getAge() > 20 && getAge() < 50) { A_Tracer2(10); vel.x *= 3; vel.y *= 3; }
		if (getAge() == 15) { vel.x *= 3; vel.y *= 3; }
	}
	Loop;
  Death:
	TNT1 A 7
	{
		A_SetRenderStyle(1, STYLE_ADD);
		A_SpawnItemEx("DCY_VagueExplosion", flags: SXF_NOCHECKPOSITION);
		A_Explode(100, 200);
	}
	Stop;
  }
}

Class DCY_ChoricoGlass : DCY_Gib
{
  Default
  {
	BounceFactor 0.35;
	Mass 1;
	Gravity 1;
	+BRIGHT
  }
  
  override void Tick()
  {
	DCY_GoreBase.Tick();
	if (vel.z == 0 && (GetAge() > dcy_gibtime))
	{
		A_FadeOut(0.005);
		if (alpha <= 0) Destroy();
	}
  }
  
  override void PostBeginPlay()
  {
	DCY_GoreBase.PostBeginPlay();
	frame = random(0, 1);
	scale.x *= randompick(-1, 1);
	scale.y *= randompick(-1, 1);
	scale *= frandom(0.5, 1.75);
  }
  
  States
  {
  Spawn:
	CH2R # 1 { roll += xroll; }
	Loop;
  Death:
  Crash:
	CH2R # -1;
	Stop;
  }
}