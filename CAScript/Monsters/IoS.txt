Class DCY_IoSEye : BossEye
{
	Mixin DCY_Effects;
	
	sound st;
	
	Default
	{
	AttackSound "IoS/spit";
	}
	
	void DCY_BrainSpit(class<Actor> spawntype = null)
	{
		SpotState spstate = Level.GetSpotState();
		Actor targ;
		Actor spit;
		bool isdefault = false;

		// shoot a cube at current target
		targ = spstate.GetNextInList("BossTarget", G_SkillPropertyInt(SKILLP_EasyBossBrain));

		if (targ)
		{
			if (spawntype == null) 
			{
				spawntype = "SpawnShot";
				isdefault = true;
			}

			// spawn brain missile
			spit = SpawnMissile (targ, spawntype);
			if (DCY_EffectDistance(2000)) for (int i = 30; i > 0; i--) A_SpawnParticleEx(0xff0a0a, TexMan.CheckForTexture("graphics/particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, 250, frandom(0, 360), frandom(-20.0, 20.0), frandom(-20.0, 20.0), 32 + frandom(-20.0, 20.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), fadestepf: 0, sizestep: -2.35);

			if (spit)
			{
				spit.bNoInteraction = spit.bNoClip;
				spit.target = targ;
				spit.master = self;
				
				if (spit.Vel.xy == (0, 0)) spit.special2 = 0;
				else if (abs(spit.Vel.y) > abs(spit.Vel.x)) spit.special2 = int((targ.pos.y - pos.y) / spit.Vel.y);
				else spit.special2 = int((targ.pos.x - pos.x) / spit.Vel.x);
				
				spit.special2 += level.maptime;
				spit.bBossCube = true;
			}
			
			if (!isdefault) st = self.attacksound; else st = "ios/spit";
			A_StartSound(st, CHAN_WEAPON, CHANF_DEFAULT, 1.0, ATTN_NONE);
		}
	}
	
	States
	{
	See:
		SSWV A 181 A_StartSound("IoS/Sight", CHAN_VOICE, attenuation: 0);
		SSWV A 150 DCY_BrainSpit();
		Wait;
	}
}

Class DCY_IoSBrain : BossBrain
{
  bool ded;
  
  Default
  {
    PainSound "IoS/pain";
	DeathSound "IoS/death";
  }
  
  override void Tick()
  {
	super.Tick();
	if (level.isFrozen()) return;
	if (ded && !(getAge() % 15)) IoS_Explode();
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
  }
  
  void IoS_Explode()
  {
	for (double x = -350; x <= 350; x += random(8, 10))
	{
		actor explosion = actor.Spawn((!random(0, 1)) ? "DCY_Explosion_1_Biggie" : "DCY_Explosion_1", Vec2OffsetZ(x + ((random2[BrainExplode]() / 32.) / 5), randompick(-280, 280), (1 / 512.) + random[BrainExplode](0, 255) * 2));
		if (explosion) explosion.special1 = random[BrainExplode](0,3);
	}
  }
  
  void IoS_Removal()
  {
	let ti = ThinkerIterator.Create("Actor");
	Actor a;
	
	while (a = Actor(ti.Next()))
	{
		if (a is 'BossEye') a.Destroy();
		else if ((a is 'SpawnShot') || ((a.health > 0) && (a.bBossSpawned || a.bCountKill || a.bIsMonster))) { let effect = Spawn("DCY_IoSEffect", a.pos); a.DamageMobj(self, self, a.health, 'Massacre', DMG_FORCED); a.Destroy(); }
	}
  }
  
  States
  {
  Spawn:
	TNT1 A 0;
	#### # -1;
	Stop;
  Pain:
	#### # 36
	{
		A_QuakeEx(1, 1, 1, 20, 0, 65535, "", QF_SCALEDOWN|QF_3D, rollintensity: 0.1);
		A_StartSound(PainSound, CHAN_VOICE, attenuation: 0);
	}
	Goto Spawn;
  Death:
	#### A 120
	{
		ded = true;
		IoS_Explode();
		IoS_Removal();
		A_StartSound(DeathSound, CHAN_VOICE, attenuation: 0);
		A_QuakeEx(3, 3, 3, 50, 0, 65535, "", QF_SCALEDOWN|QF_3D, rollintensity: 1);
	}
	#### # -1 A_BrainDie;
	Stop;
  }
}

Class DCY_SpawnShot : SpawnShot
{ 
  Mixin DCY_Effects;
  
  Default
  {
	SeeSound("");
  }
  
  override void Tick()
  {
	super.Tick();
	if (level.isFrozen()) return;
	
	if (DCY_EffectDistance(1200))
	{
		A_SpawnParticleEx(0xff0000, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 80, 70, 0, frandom(-10.0, 10.0), frandom(-10.0, 10.0), frandom(-10, 10), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.5, 1.5), startalphaf: 0.185, fadestepf: 0.0025, sizestep: -0.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		if ((level.time % random(2, 5)) == 0) A_SpawnParticleEx(0xff0000, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, random(3, 6), frandom(0, 360), frandom(-10.0, 10.0), frandom(-10.0, 10.0), frandom(-10, 10), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, -0.1), startalphaf: 0.8, fadestepf: 0, sizestep: -0.15);
	}
	
	A_SpawnFly("DCY_IoSEffect");
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	A_StartSound("IoS/Cube", CHAN_BODY, CHANF_LOOPING, startTime: frandom(0, 1));
  }
  
  States
  {
  Spawn:
	B3_F ABCD 4;
	Loop;
  }
}

Class DCY_IoSEffect : Actor
{
  Mixin DCY_Effects;
  Default
  {
  -SOLID
  +NOINTERACTION
  Translation "0:255=%[0.13,0.00,0.00]:[2.00,0.39,0.39]";
  }
  
  override void PostBeginPlay()
  {
	A_StartSound("IoS/Spawn");
	
	if (DCY_EffectDistance(2000))
	{
		for (int i = 6; i > 0; i--)
		{
			A_SpawnItemEx("DCY_Explosion_1_Small", frandom(-1, 1), frandom(-1, 1), frandom(-1, 1) + 15, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 128);
			A_SpawnItemEx("DCY_IoSFlare", frandom(-1, 1), frandom(-1, 1), frandom(-1, 1) + 15, frandom(-7, 7), frandom(-7, 7), frandom(0.5, 10), frandom(0, 360), SXF_NOCHECKPOSITION);
		}
		
		for (int i = 14; i > 0; i--) A_SpawnParticleEx(0x360404, TexMan.CheckForTexture("graphics/particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, 90, frandom(0, 360), frandom(-20.0, 20.0), frandom(-20.0, 20.0), 10 + frandom(-4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(6.35, 12.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), fadestepf: 0, sizestep: -2.35);
	}
	
	Destroy();
  }
}

Class DCY_IoSFlare : DCY_Projectile
{
  Default
  {
  -SOLID
  +THRUACTORS
  Radius 0;
  Height 0;
  -NOGRAVITY
  Damage 0;
  }
  
  States
  {
  Spawn:
	TNT1 A 1
	{
		if (DCY_EffectDistance(900)) A_SpawnFlames("ff0000", 20, 13, thrust: 7);
		else Destroy();
	}
	Loop;
  Death:
	TNT1 A 0;
	Stop;
  }
}