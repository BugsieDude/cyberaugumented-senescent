Class DCY_KranioThanatou : DCY_Rev
{
  Default
  {
  Translation "0:255=%[0.24,0.09,0.00]:[2.00,1.57,0.65]", "1:15=%[0.00,0.00,0.00]:[0.49,0.49,0.49]", "4:4=[189,189,189]:[153,153,153]", "80:111=[190,190,190]:[10,10,10]", "128:159=%[0.00,0.00,0.00]:[0.49,0.49,0.49]", "236:239=%[0.00,0.00,0.00]:[0.49,0.49,0.49]", "0:0=%[0.00,0.00,0.00]:[0.00,0.00,0.00]";
  BloodColor "ff871f";
  BloodType "AndroidNeonFluid";
  Health 600;
  SeeSound "D4Revenant/Sight";
  ActiveSound "D4Revenant/Idle";
  PainSound "D4Revenant/Pain";
  DeathSound "D4Revenant/Death";
  Speed 12;
  FastSpeed 15;
  MeleeThreshold 100;
  Tag "\c[y4]Kranio Thanatou\c-";
  +MISSILEMORE
  +DONTHARMSPECIES
  Obituary "%o embraced Kranio Thanatou's insanity.";
  HitObituary "%o's face is now a burnt crisp.";
  DCYMonster.WalkFlames "DCY_YellowWalkFlames";
  }
  
  double direction;
  int missile;
  bool dash;
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	direction = randompick(14, -14);
  }
  
  void A_KranioChase()
  {
	DCY_Chase();
	
	if (random(0, 200) == 0) dash = true;
		
	if (dash)
	{
		tics = 2;
		A_Chase(null, null);
		A_SpawnItemEx("DCY_GFTrail", zofs: 5, flags: SXF_TRANSFERSPRITEFRAME|SXF_NOCHECKPOSITION);
		A_WalkFlame();
		
		if (random(0, 70) == 0)
			dash = false;
	}
	
	if (!dash && random(0, 2) == 0) A_WalkFlame();
	
	if (random(0, 265) == 0)
		A_Dodging(10);
	if (random(0, 265) == 3 && vel.z == 0)
	{
		A_Dodging(5);
		A_Hop(7);
	}
  }
  
  States
  {
  Spawn:
	KRAV A 10 DCY_Look();
	Loop;
  Look:
	#### AABBCCDDEEFF 3 DCY_LookingForPlayer();
	#### # 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	#### J 10 DCY_AlertSound();
	Goto See;
  See:
	KRAV AABBCCDDEEFF 3 A_KranioChase();
	Loop;
  Melee:
	KRAV G 5
	{
		A_Recoil(-8);
		A_SkelWhoosh();
	}
	KRAV H 5 A_FaceTarget();
	KRAV I 6 A_SkelFist();
	Goto See;
  Missile:
	KRAV A 10 A_FaceTarget();
	KRAV J 1
	{
		if (health < 300)
		{
			if (random(0, 3) == 0)
			{
				missile = 20;
				A_StartSound(SeeSound, CHAN_VOICE);
				SetStateLabel("Barrage");
			}
		}
		
		if (!random(0, 2))
		{
			A_Hop(10);
			A_Dodging(7);
		}
	}
	KRAV JJJJ 6
	{
		direction = direction * -1;
		A_SpawnProjectile("DCY_GFRocket", 58, direction, frandom(-2, 2));
		A_FaceTarget();
	}
	KRAV K 10;
	Goto See;
  Barrage:
	KRAV K 1 A_StartSound("Kranio/RocketCharge", CHAN_WEAPON, attenuation: 0.5);
	KRAV KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK 1 A_FaceTarget();
	Goto BarrageLoop;
  BarrageLoop:
	KRAV J 3
	{
		direction = -direction;
		
		A_SpawnProjectile("DCY_GFMicroRocket", 58, direction, frandom(-5, 5), CMF_OFFSETPITCH, pitch + frandom(-2, 2));
		A_FaceTarget();
		
		missile--;
		if (missile <= 0)
			SetStateLabel("See");
	}
	Loop;
  Pain:
	KRAV L 4;
	KRAV L 4 A_Pain();
	Goto See;
  Death:
	KRAV L 5;
	KRAV M 5 A_ScreamAndUnblock();
	KRAV NO 4;
	KRAV P -1;
	Stop;
  Raise:
	KRAV PONML 6;
	Goto See;
  }
}

Class DCY_GFTrail : DCY_HexodenicanTrail2
{
  Default
  {
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.00]:[0.80,0.42,0.00]";
  Scale 1.0;
  }
}

Class DCY_GFRocket : DCY_HomingMissile
{
  Default
  {
  Translation "80:111=%[0.00,0.00,0.00]:[0.75,0.75,0.75]", "16:47=%[0.00,0.00,0.00]:[2.00,1.57,0.65]", "160:255=%[0.00,0.00,0.00]:[2.00,1.57,0.65]";
  Speed 16;
  FastSpeed 21;
  DamageType "Fire";
  -ROCKETTRAIL
  }
  
  int o, t, r, f;
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	o = random(0, 4);
	t = random(0, 4);
	r = random(0, 2);
	f = random(0, 2);
  }
  
  States
  {
  Spawn:
	HMIS A 0 NoDelay A_StartSound("skeleton/seeker", CHAN_6, CHANF_LOOPING, pitch: 1.375);
	HMIS A 2 Bright
	{
		if (DCY_EffectDistance(sfxdistance)) A_SpawnFlames("ff871f", 20, 30, 0, true, frandom(-2.5, 2.5), thrust: 4);
		A_Weave(o, t, r, f);
		A_Tracer2(2);
	}
	Goto Spawn+1;
  Death:
	MISL B 0 Bright;
  	TNT1 A 1 Bright
	{
		A_Scream();
		A_StopSound(CHAN_6);
		A_QuakeEx(2, 2, 2, 17, 0, 250, "none", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 500);
		A_SetTranslucent(1.0, 1);
		A_SpawnItemEx("DCY_Explosion_1", 0, 0, 0, random(-3, 3), random(-3, 3), random(-3, 3), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1", 0, 0, 0, random(-3, 3), random(-3, 3), random(-3, 3), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	TNT1 A 17;
	Stop;
  }
}

Class DCY_GFMicroRocket : DCY_FastProjectile
{
  Default
  {
  Translation "80:111=%[0.00,0.00,0.00]:[0.75,0.75,0.75]", "16:47=%[0.00,0.00,0.00]:[2.00,1.57,0.65]", "160:255=%[0.00,0.00,0.00]:[2.00,1.57,0.65]";
  Speed 30;
  FastSpeed 40;
  DamageType "Fire";
  -ROCKETTRAIL
  Damage 4;
  Scale 1.1;
  MissileType "DCY_GFSmonk";
  MissileHeight 6;
  SeeSound "dcyskeleton/attack";
  DeathSound "dcyskeleton/tracex";
  }
  
  States
  {
  Spawn:
	SMOL A 1
	{
		if (DCY_EffectDistance(sfxdistance)) A_SpawnFlames("ffc44f", 10, 26, 0, false, frandom(-1.5, 1.5));
		
		vel.x += frandom(-1, 1);
		vel.y += frandom(-1, 1);
		vel.z += frandom(-1, 1);
	}
	Loop;
  Death:
  	TNT1 A 1 Bright
	{
		A_Scream();
		A_StopSound(CHAN_6);
		A_QuakeEx(2, 2, 2, 17, 0, 250, "none", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 500);
		A_SetTranslucent(1.0, 1);
		A_SpawnItemEx("DCY_Explosion_1_Small", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	TNT1 A 17;
	Stop;
  }
}