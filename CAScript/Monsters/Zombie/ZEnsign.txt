Class DCY_ZEnsign : DCY_Zombe
{
  Default
  {
  Health 300;
  Speed 9;
  FastSpeed 13;
  DropItem "Shotgun";
  DropItem "DCY_Palisade", 150;
  DropItem "Medikit", 150;
  DropItem "Chaingun", 128;
  DropItem "PlasmaRifle", 50;
  DropItem "DCY_Emphasis", 20;
  +QUICKTORETALIATE;
  +NEVERRESPAWN;
  +NOTARGET;
  +DONTGIB;
  +NODROPOFF;
  SeeSound "ZEnsign/Sight";
  ActiveSound "ZEnsign/Active";
  PainSound "ZEnsign/Pain";
  DeathSound "ZEnsign/Death";
  AttackSound "";
  Tag "\c[i7]Z-Ensign\c-";
  Obituary "%o wasn't good enough to handle a Z-Ensign.";
  Translation "128:159=%[0.00,0.00,0.00]:[0.65,0.39,0.39]", "80:111=%[0.00,0.00,0.00]:[0.65,0.65,0.65]", "1:3=%[0.00,0.00,0.00]:[0.65,0.65,0.65]", "128:143=[143,104,97]:[0,0,0]", "144:151=[106,77,72]:[0,0,0]", "48:79=%[0.00,0.00,0.00]:[0.85,0.61,0.57]", "16:47=%[0.28,0.04,0.00]:[2.00,0.80,0.00]";
  }
  
  protected int weaponslot;
  int missile;
  
  void A_ZEnsignASG()
  {
	A_StartSound("Underline/Fire", CHAN_WEAPON);
	
	for (int i = 5; i > 0; i--)
		A_SpawnProjectile("DCY_Zombie2Tracer", 30, 3, frandom(-1.1, 1.1), CMF_TRACKOWNER|CMF_OFFSETPITCH, random(-1, 1));
	
	A_FaceTarget();
  }
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o wasn't good enough to handle a Z-Ensign.",
		"%o got outsmarted.",
		"You shouldn't have gone here.",
		"Death has gotten the best of you.",
		"Z-Ensign superiority",
		"Quietus."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  void A_EnsignChase()
  {
	A_Chase();
	
	if (random(0, 30) == 0)
	{
		A_Dodging(10);
		A_Hop(random(4, 5));
	}
  }
  
  state A_EnsignChoose(stateLabel s1, stateLabel s2, stateLabel s3)
  {
	switch(weaponslot)
	{
		case 1: return ResolveState(s1); break;
		case 2: return ResolveState(s2); break;
		case 3: return ResolveState(s3); break;
	}
	
	return ResolveState(null);
  }
  
  States
  {
  Spawn:
	UU5_ A 0 NoDelay { weaponslot = random(1, 3); }
    UU5_ A 0 A_EnsignChoose("Spawn1", "Spawn2", "Spawn3");
	Goto Spawn1;
  Spawn1:
    UU5_ A 10 DCY_Look();
	Loop;
  Spawn2:
    UU6_ A 10 DCY_Look();
	Loop;
  Spawn3:
    UU7_ A 10 DCY_Look();
	Loop;
  Look:
	#### AAABBBCCCDDD 2
	{
		DCY_LookingForPlayer();
		
		if (random(0, 15) == 0)
			SetStateLabel("Stand");
	}
	#### A 0 A_CheckSight("Look");
	Goto Alert;
  Alert:
	#### # 0 DCY_AlertSound();
	Goto See;
  Stand:
	#### AAAAAAAAAAAAAAAAAAAAAA 1 A_Chase(null, "Alert", CHF_NOPLAYACTIVE|CHF_DONTMOVE);
	#### A 0 A_CheckSight("Look");
	Goto Alert;
  See:
    #### AABBCCDD 2 A_EnsignChase();
	Loop;
  Missile:
    #### # 1 A_EnsignChoose("Missile1", "Missile2", "Missile3");
	Goto Missile1;
  Missile1:
	UU5_ E 5 A_FaceTarget();
	TNT1 A 0 A_Jump(100, "Missile1NoJumpDodge");
    UU5_ E 5
	{
		if (random(0, 2) == 0 && vel.z == 0)
		{
			A_Dodging(9);
			A_Hop(4);
		}
	}
	UU5_ F 5
	{
		for (int i = 7; i > 0; i--)
			A_SpawnProjectile("DCY_ZombieTracer", 30, 3, frandom(-1.5, 1.5), CMF_TRACKOWNER|CMF_OFFSETPITCH, random(-1, 1));
		
		A_FaceTarget();
		A_StartSound("Shotgun/Fire", CHAN_WEAPON);
	}
	UU5_ E 15 A_FaceTarget();
	UU5_ A 0
	{
		if (random(0, 2) == 1)
			SetStateLabel("GiveRandomToken");
	}
	Goto See;
  Missile2:
	UU6_ E 10
	{
		missile = random(9, 10);
		A_FaceTarget();
	}
	UU6_ F 2 { missile--; A_ZEnsignASG(); }
	UU6_ E 6
	{
		if (random(0, 8) == 1 && vel.z == 0)
		{
			A_Dodging(9);
			A_Hop(4);
		}
		
		A_FaceTarget();
		
		if (missile <= 0)
		{
			if (random(0, 2) == 1)
				SetStateLabel("GiveRandomToken");
			
			SetStateLabel("See");
		}
	}
	Goto Missile2+1;
  Missile3:
	UU7_ A 10 A_FaceTarget();
	UU7_ E 0
	{
		A_StartSound("DSWTH", CHAN_WEAPON, 0, 1.0, 0.45);
		
		if (random(0, 2) == 1 && vel.z == 0)
		{
			A_Dodging(9);
			A_Hop(4);
		}
		
		A_FaceTarget();
	}
    UU7_ EEEEEEEEEEEEEEEEEEEEE 1 A_FaceTarget(1, 1);
	UU7_ E 5 A_FaceTarget(1, 1);
	UU7_ F 8
	{
		A_StartSound("D4RAILGF", CHAN_WEAPON, 0, 1.0, 0.45);
		A_CustomRailgun(128, flags: RGF_SILENT|RGF_FULLBRIGHT, sparsity: 30, spawnclass: "DCY_OverdemoniacLaser");
		A_FaceTarget(1, 1);
	}
	UU7_ E 40;
	UU7_ A 0
	{
		if (random(0, 2) == 1)
			SetStateLabel("GiveRandomToken");
	}
	Goto See;
  GiveRandomToken:
    #### # 1
	{
		if (weaponslot == 1)
			weaponslot = randompick(2, 3);
		else if (weaponslot == 2)
			weaponslot = randompick(1, 3);
		else if (weaponslot == 3)
			weaponslot = randompick(1, 2);
			
		A_EnsignChoose("ZSG", "ZMG", "ZRG");
	}
	Goto See;
  ZSG:
	UU5_ A 10;
	Goto See;
  ZMG:
	UU6_ A 10;
	Goto See;
  ZRG:
	UU7_ A 10;
	Goto See;
  Pain:
    #### G 4;
	#### G 4
	{
		if (random(0, 5) == 1)
		{
			if (vel.z == 0)
				A_Hop(random(4, 5));
			
			A_Dodging(9);
			SetStateLabel("See");
		}
		
		A_Pain();
	}
	Goto See;
  Death:
    #### H 6;
	#### I 6 A_StartSound("ZEnsign/Death", CHAN_VOICE, 0, 1, 0.45);
	#### J 6 A_NoBlocking();
	#### K 6;
	#### L -1;
	Stop;
  Raise:
    #### KJIH 5;
	Goto See;
  }
}