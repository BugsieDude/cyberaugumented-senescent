Class DCY_AvernusGuard : DCY_Cybie
{
  Default
  {
  Scale 0.6;
  Translation "0:255=%[0.00,0.00,0.00]:[0.65,0.65,0.65]", "168:179=[255,255,255]:[255,179,64]", "180:186=[255,179,64]:[225,0,0]", "187:191=[225,0,0]:[21,0,0]", "16:27=[255,255,255]:[255,179,64]", "28:37=[255,179,64]:[225,0,0]", "38:47=[225,0,0]:[21,0,0]";
  Health 3000;
  BloodType "AndroidNeonFluid", "AndroidNeonFluid", "AndroidNeonFluid";
  BloodColor "ad3002";
  DCYMonster.GibType "DCY_GibletsLava";
  Tag "Avernus Guard";
  SeeSound "DHG/Yell";
  ActiveSound "";
  PainSound "DHG/Pain";
  DeathSound "DHG/Death";
  +MISSILEEVENMORE
  +QUICKTORETALIATE
  +NOICEDEATH
  +DONTGIB
  DamageFactor "Fire", 0.3;
  StencilColor "ad3002";
  DCYMonster.ScientificName "Torrens igneus";
  }
  
  bool down;
  double spinduration, t, a;
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"%o got pulverized into burnt paste.",
		"%o experienced the infernal gust.",
		"The Avernus Guard has done %o abhorrently."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
  
  void A_GuardFootstep(bool look = 0)
  {
	A_StartSound("DHG/Step", CHAN_BODY);
	if (look) DCY_LookingForPlayer(); else A_Chase();
  }
  
  void A_GuardianChase()
  {
	A_Chase();
	
	if (target && CheckSight(target))
	{
		A_FaceTarget(7, 7);
		A_Recoil(-0.5);
		
		if (!random(0, 30))
		{
			tics = 20;
			A_Dodging(20);
			A_StartSound("DHG/Dodge", CHAN_BODY);
			A_FaceTarget();
		}
	}
  }
  
  void A_GuardianLob()
  {
	let lob = Spawn("DCY_AvernusGuardianBall", pos + (0, 0, 36));
		
	if (lob)
	{
		lob.bNOGRAVITY = false;
		lob.target = self;
		lob.angle = angle;
		int ZDiff = int(lob.target.Pos.Z + lob.target.Height / 2 - Pos.Z - 36);
		lob.Vel.Z += (ZDiff + Distance2D(lob.target)) / TICRATE * lob.GetGravity() / 2;
		lob.Vel3DFromAngle(GetDefaultSpeed("DCY_AvernusGuardianBall"), lob.angle, BulletSlope() - frandom(30, 40));
	}
  }
  
  States
  {
  Spawn:
	VSTL Q 10 DCY_Look;
	Loop;
  Look:
    VSTL ABBCC 5 DCY_LookingForPlayer();
    VSTL D 4 A_GuardFootstep(1);
    VSTL D 3 DCY_LookingForPlayer();
	VSTL E 10 A_QuakeEx(1, 1, 2, 20, 0, 400, "", QF_SCALEDOWN|QF_3D);
	VSTL EEFFGG 5 DCY_LookingForPlayer();
    VSTL H 4 A_GuardFootstep(1);
	VSTL H 3 DCY_LookingForPlayer();
	VSTL A 10 A_QuakeEx(1, 1, 2, 20, 0, 400, "", QF_SCALEDOWN|QF_3D);
	Loop;
  Alert:
  Roar:
	VSTL Q 10 A_FaceTarget();
	VSTL QRS 5 A_FaceTarget();
	VSTL T 5 { A_FaceTarget(); DCY_AlertSound(); }
	VSTL UUUUUUUUUUUUVVVVVVVVVVVVVV 1
	{
		A_FaceTarget();
		A_QuakeEx(6, 0, 0, 30, 0, 1000, "", QF_SCALEDOWN|QF_RELATIVE|QF_3D, rollintensity: 0.5, rollwave: 0.5);
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 100, 0, frandom(-40, 40), frandom(-20, 20), 36 + frandom(-20, 20) + 27, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 2, startalphaf: 0.2, fadestepf: 0.0075, sizestep: 2.525);
			A_SpawnParticleEx(0xf2511f, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(3, 10), 0, frandom(0, 15), frandom(-20, 20), frandom(-30, 30) + 27, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 5, fadestepf: 0.05, sizestep: -0.225);
		}
	}
	Goto See;
  See:
    VSTL ABBCC 3 A_GuardianChase();
    VSTL D 3 A_GuardFootstep();
    VSTL D 3 A_GuardianChase();
	VSTL E 3 A_QuakeEx(1, 1, 2, 20, 0, 400, "", QF_SCALEDOWN|QF_3D);
	VSTL EEFFGG 3 A_GuardianChase();
    VSTL H 3 A_GuardFootstep();
	VSTL H 3 A_GuardianChase();
	VSTL A 3 A_QuakeEx(1, 1, 2, 20, 0, 400, "", QF_SCALEDOWN|QF_3D);
	Loop;
  Missile:
	VSTL Q 0
	{
		A_FaceTarget();
		if ((target && Distance3d(target) < 200) && !random(0, 1)) SetStateLabel("Lunge");
		if ((target && Distance3d(target) < 500) && !random(0, 3) && !(target.pos.z > self.pos.z)) SetStateLabel("D4GuardSpin");
	}
	VSTL Q 0
	{
		switch (random(0, 1))
		{
			case 0: Return ResolveState("D3GuardianShockwave"); break;
			case 1: Return ResolveState("Choice"); break;
		}
		
		Return ResolveState(null);
	}
	Goto See;
  Choice:
	VSTL Q 0
	{
		switch (random(0, 1))
		{
			case 0: Return ResolveState("D4GuardBall"); break;
			case 1: Return ResolveState("D4Dodge"); break;
		}
		
		Return ResolveState(null);
	}
	Goto See;
  D4Dodge:
	VSTL A 10 A_FaceTarget();
	VSTL Q 10
	{
		A_FaceTarget();
		a = angle + Normalize180(randompick(-1, 1) * 90);
		t = 0;
	}
	VSTL Q 1 { A_FaceTarget(); Vel3DFromAngle(10, a, 0); A_StartSound("DHG/Dodge", CHAN_BODY); }
	VSTL Q 1
	{
		Vel3DFromAngle(10, a, 0);
		A_FaceTarget();
		A_SpawnItemEx("DCY_HexodenicanTrail2", zofs: 6, flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSTENCILCOL);
		
		if (!(t % 7)) A_GuardianLob();
		if (t >= 40) SetStateLabel("See");
		t++;
	}
	Goto D4Dodge+3;
  D4GuardSpin:
	VSTL QZ 10 A_FaceTarget();
	VSTL V 0 { bNOPAIN = true; A_StartSound("DHG/spinning", CHAN_6, attenuation: 0.75); }
	VSTL V 1
	{
		A_Recoil(-0.1);
		angle += spinduration / 5;
		
		A_SoundPitch(CHAN_6, ((spinduration / 100) / 2) + 0.5);
		A_SpawnItemEx("DCY_HexodenicanTrail2", zofs: 6, flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSTENCILCOL);
		
		if (spinduration > 100)
		{
			A_StopSound(CHAN_6);
			A_StartSound("DHG/spinning", CHAN_BODY, attenuation: 0.75);
			A_FaceTarget();
			SetStateLabel("SpinLoop");
		}
		
		spinduration += 2;
	}
	Goto D4GuardSpin+3;
  SpinLoop:
	STS_ ABCDEFGH 1
	{
		if (DCY_EffectDistance(sfxdistance)) 
		{
			for (int i = 0; i < 360; i += random(1, 70))
				A_SpawnParticleEx(0x3b0f04, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_RELATIVE|SPF_FULLBRIGHT, random(10, 40), 80, i, frandom(20, 32), 0, frandom(12, 24), frandom(1, 3), 2, 0, 0.2, fadestepf: -0.1, sizestep: 3);
			
			A_SpawnItemEx("DCY_WalkFlames", frandom(-40, 40), frandom(-40, 40), flags: SXF_NOCHECKPOSITION, failchance: 128);
			A_SpawnItemEx("DCY_HexodenicanTrail2", zofs: 6, flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSTENCILCOL);
		}
		
		A_Recoil(-1.35);
		A_FaceTarget(7, 7);
		A_Explode(30, 100, XF_NOTMISSILE);
		
		if (spinduration <= 0) SetStateLabel("SpinDone"); else spinduration--;
	}
	Loop;
  SpinDone:
	VSTL ZQ 10 { bNOPAIN = false; A_FaceTarget(); }
	Goto See;
  D3GuardianShockwave:
	VSTL Q 8
	{
		if (target.pos.z > self.pos.z) SetStateLabel("D4GuardBall");
		else if (health < 1500 && !random(0, 4)) SetStateLabel("MadShockwave");
		A_FaceTarget();
	}
	VSTL Q 1 A_StartSound("DHG/Charge", 11, pitch: frandom(0.7, 1.2));
	VSTL QRS 4 A_FaceTarget();
	VSTL SSSSSSSSSSSSSSSSSSSSSSSSSSSSS 1
	{
		A_FaceTarget();
		if (DCY_EffectDistance(sfxdistance) && !(level.time % 2)) A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 200, 0, frandom(-40, 40), frandom(-40, 40), 36 + frandom(-20, 20), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 3.5), accelz: 0.31, startalphaf: 0.5, fadestepf: 0.012, sizestep: -2.525);
	}
	VSTL S 10
	{
		A_StartSound("DHG/Shockwave", 12, attenuation: 0.75);
		A_StartSound("DHG/ShockwaveX", CHAN_BODY, volume: 0.75, attenuation: 1.2);
		A_FaceTarget();
		for (int i = 0; i < 360; i += 20) A_SpawnProjectile("DCY_AvernusGuardianBall", 10, 0, i, CMF_AIMDIRECTION, 0);
		for (int i = 20; i > 0; i--)
			if (DCY_EffectDistance(sfxdistance)) A_SpawnParticleEx(0xff5e00, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 150, 0, frandom(-40, 40), frandom(-40, 40), 36 + frandom(-20, 20), frandom(-5.5, 05.5), frandom(-5.5, 5.5), frandom(0, 5.5), accelx: frandom(-0.1, 0.1), accely: frandom(-0.1, 0.1), accelz: 0.31, startalphaf: 0.5, fadestepf: 0.05, sizestep: -0.525);
	}
	VSTL SRQ 6 A_FaceTarget();
	Goto See;
  MadShockwave:
	VSTL QRS 7 A_FaceTarget();
	VSTL T 7 { A_FaceTarget(); A_StartSound(SeeSound, CHAN_VOICE, attenuation: 0.9); t = 0; down = false; }
	VST_ A 0 A_Hop(16);
	Goto MadShockwaveLungeLoop;
  MadShockwaveLungeLoop:
	VST_ A 1
	{
		if (vel.z == 0 && down)
			SetStateLabel("MadShockwaveD");
		if (vel.z == 0 && !down)
			down = true;
		
		A_FaceTarget();
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 100, 0, frandom(-40, 40), frandom(-20, 20), 36 + frandom(-20, 20) + 27, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 1, startalphaf: 0.2, fadestepf: 0.0075, sizestep: 2.525);
			A_SpawnParticleEx(0xf2511f, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(3, 10), 0, frandom(0, 15), frandom(-20, 20), frandom(-30, 30) + 27, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 3, fadestepf: 0.05, sizestep: -0.225);
		}
		
		A_SpawnItemEx("DCY_HexodenicanTrail2", flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSTENCILCOL);
	}
	Loop;
  MadShockwaveD:
	VST_ B 1
	{
		if (!t)
		{
			vel.x = vel.x / 6;
			vel.y = vel.y / 6;
			A_PoundEffect(gspeed: 128);
			A_StartSound("Earthpound", CHAN_5, pitch: 0.7);
			A_StartSound("DHG/GroundPound", CHAN_BODY, attenuation: 0.6);
			
			for (int i = 0; i < 360; i += random(10, 30))
			if (DCY_EffectDistance(sfxdistance))
			{
				A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_RELATIVE, random(90, 95), 128, i, zoff: 5, velx: frandom(1, 3) * 6, vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), accelz: 0.01, startalphaf: 0.35, fadestepf: 0.0075, sizestep: -4);
				A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_RELATIVE, random(90, 95), 180, i, zoff: 5, velx: frandom(1, 3) * 12, vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), accelz: 0.01, startalphaf: 0.35, fadestepf: 0.0075, sizestep: -4);
			}
			
			A_QuakeEx(2, 2, 4, 50, 0, 2000, "none", QF_RELATIVE|QF_SCALEDOWN|QF_3D, falloff: 500);
			A_Explode(150, 150, XF_NOTMISSILE, damagetype: "Bruiser");
			A_RadiusThrust(6000, 300, RTF_NOTMISSILE);
		}
		
		t++;
		
		if (!(t % 10)) for (int i = 0; i < 360; i += 30) A_SpawnProjectile("DCY_AvernusGuardianBall", 10, 0, i + t, CMF_AIMDIRECTION, 0);
		if (t > 100) SetStateLabel("See");
	}
	Loop;
  D4GuardBall:
	VSTL QRS 5 A_FaceTarget();
	VSTL Z 5 { A_FaceTarget(); A_StartSound("DHG/RandomGrunt", CHAN_VOICE, attenuation: 0.9); A_StartSound("DHG/ProjectileCharge", CHAN_WEAPON, attenuation: 0.9); }
	VSTL ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ 1
	{
		A_FaceTarget();
		t += 0.01;
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 80, 0, frandom(-40, 40), frandom(-20, 20), 36 + frandom(-20, 20) + 27, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 1, startalphaf: 0.2, fadestepf: 0.0075, sizestep: 2.525);
			A_SpawnParticleEx(0xf2511f, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(3, 13), 0, frandom(0, 15), frandom(-20, 20), frandom(-30, 30) + 27, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 2, fadestepf: 0.05, sizestep: -0.225);
		}
	}
	VSTL U 10
	{
		A_StartSound("DHG/Ball", CHAN_WEAPON);
		A_SpawnProjectile("DCY_AvernusBall", 30);
		A_FaceTarget();
		t = 0;
	}
	VSTL WXYZ 8 A_FaceTarget();
	Goto See;
  Lunge:
	VSTL QRS 5 A_FaceTarget();
	VSTL T 5 { A_FaceTarget(); A_StartSound("DHG/RandomGrunt", CHAN_VOICE, attenuation: 0.9); }
	VSTL VVVVVVVVVVVVVVVVVVV 1
	{
		down = false;
		A_FaceTarget();
		A_QuakeEx(6, 0, 0, 30, 0, 1000, "", QF_SCALEDOWN|QF_RELATIVE|QF_3D, rollintensity: 0.5, rollwave: 0.5);
		
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 100, 0, frandom(-40, 40), frandom(-20, 20), 36 + frandom(-20, 20) + 27, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 1, startalphaf: 0.2, fadestepf: 0.0075, sizestep: 2.525);
			A_SpawnParticleEx(0xf2511f, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(3, 10), 0, frandom(0, 15), frandom(-20, 20), frandom(-30, 30) + 27, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 3, fadestepf: 0.05, sizestep: -0.225);
		}
	}
	VSTL V 0
	{
		int jumpheight;
		int recoilrate;
		
		if (target)
		{
			recoilrate = (target.pos.z < self.pos.z - 10) ? -10 : -(Distance3D(target) / 10);
			jumpheight = (target.pos.z < self.pos.z - 10) ? 10 : ((target.pos.z - self.pos.z) / 9.5) + 10;
		}
		
		A_Recoil((recoilrate < -16) ? -16 : recoilrate);
		A_Hop((jumpheight > 20) ? 20 : jumpheight);
	}
	Goto LungeLoop;
  LungeLoop:
	VST_ A 1
	{
		if (vel.z == 0 && down)
			SetStateLabel("SLAM");
		if (vel.z == 0 && !down)
			down = true;
		
		A_Recoil(-0.1);
		A_SpawnItemEx("DCY_HexodenicanTrail2", flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSTENCILCOL);
	}
	Loop;
  SLAM:
	VST_ B 40
	{
		vel.x = vel.x / 6;
		vel.y = vel.y / 6;
		A_PoundEffect(gspeed: 128);
		A_StartSound("DHG/ShockwaveX", CHAN_5);
		A_StartSound("DHG/GroundPound", CHAN_BODY, attenuation: 0.6);
		
		for (int i = 0; i < 360; i += random(10, 30))
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_RELATIVE, random(90, 95), 70, i, zoff: 5, velx: frandom(1, 3), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), accelz: 0.01, startalphaf: 0.35, fadestepf: 0.0075, sizestep: -4);
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_RELATIVE, random(90, 95), 60, i, zoff: 5, velx: frandom(1, 3) * 3, vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), accelz: 0.01, startalphaf: 0.35, fadestepf: 0.0075, sizestep: -4);
		}
		
		A_QuakeEx(2, 2, 4, 50, 0, 2000, "none", QF_RELATIVE|QF_SCALEDOWN|QF_3D, falloff: 500);
		A_Explode(150, 150, XF_NOTMISSILE, damagetype: "Bruiser");
		A_RadiusThrust(6000, 300, RTF_NOTMISSILE);
	}
	Goto See;
  Pain:
	VSTL S 4;
	VSTL S 4 A_Pain();
	Goto See;
  Death:
	VSTL Z 10 A_FaceTarget();
	VSTL T 5 A_Scream();
	VSTL UUUUUUUUUUU 2
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnParticleEx(0x872100, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, 100, 0, frandom(-40, 40), frandom(-20, 20), 36 + frandom(-20, 20) + 27, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), accelx: 1, startalphaf: 0.2, fadestepf: 0.0075, sizestep: 2.525);
			A_SpawnParticleEx(0xf2511f, TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(20, 45), random(3, 10), 0, frandom(0, 15), frandom(-20, 20), frandom(-30, 30) + 27, frandom(0, 5), frandom(-4, 4), frandom(-4, 4), accelx: 2, fadestepf: 0.05, sizestep: -0.225);
			
			let trail = Spawn("De_Blood_BigSplat", pos + (0, 0, 40), NO_REPLACE);
	
			if (trail)
			{
				trail.vel.x = frandom(-2, 2);
				trail.vel.y = frandom(-2, 2);
				trail.vel.z = frandom(-2, 2);
				trail.gravity = gravity / 4;
				trail.scale *= 2;
				trail.A_SetRenderStyle(1, STYLE_ADD);
				trail.translation = bloodtranslation;
				trail.bBRIGHT = true;
			}
		}
	}
	VSTL U 20
	{
		A_StartSound("misc/bubblegore", 15, pitch: frandom(2, 1.5));
		A_StartSound("dcyfatso/gore", 14, pitch: frandom(2, 1.5));
		actor x = Spawn("DCY_Explosion_1", pos + (0, 0, 40), NO_REPLACE);
		A_QuakeEx(2, 2, 2, 50, 0, 400, "", QF_SCALEDOWN|QF_3D);
		if (DCY_EffectDistance(sfxdistance))
		{
			for (int i = 20; i > 0; i--)
			{
				let trail = Spawn("De_Blood_BigSplat", pos + (0, 0, 40), NO_REPLACE);
		
				if (trail)
				{
					trail.vel.x = frandom(-5, 5);
					trail.vel.y = frandom(-5, 5);
					trail.vel.z = frandom(-3, 10);
					trail.gravity = 1;
					trail.scale *= 3;
					trail.A_SetRenderStyle(5, STYLE_ADD);
					trail.translation = bloodtranslation;
					trail.bBRIGHT = true;
				}
			}
		}
	}
	VSTK ABC 5;
	VSTK D 5 A_NoBlocking();
	VSTK E 5;
	VSTK F 50;
	VSTK F -1 A_BossDeath2();
	Stop;
  }
}

Class DCY_AvernusGuardianBall : DCY_ImpFireball
{
  Default
  {
  DamageFunction 40;
  RenderStyle "Add";
  DamageType "Fire";
  +BRIGHT;
  Speed 24;
  FastSpeed 30;
  Scale 1.5;
  DeathSound "DCYLavaImpact";
  Translation "0:255=%[0.20,0.00,0.00]:[2.00,1.43,1.01]";
  }
  
  States
  {
  Spawn:
	NBKL AABBCC 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnFlames("ff622e", 20, 32, 0, true, thrust: 4);
			A_SpawnFlames("de3700", 15, 45, 0, false, thrust: 4);
			A_SpawnParticleEx(0xde3700, Texman.CheckforTexture("Graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.0, 3.0), frandom(-3.0, 3.0), frandom(1.5, 7.4), accelz: -0.55);
		}
	}
	Loop;
  Death:
	SMOL F 2
	{
		A_SetScale(2);
		A_SpawnItemEx("DCY_Explosion_1", flags: SXF_NOCHECKPOSITION);
		
		for (int i = 25; i > 0; i--)
			A_SpawnParticleEx(0xde3700, Texman.CheckforTexture("Graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-9.5, 9.5), frandom(-9.5, 9.5), frandom(-9.5, 9.5), frandom(-6.0, 6.0), frandom(-6.0, 6.0), frandom(1.5, 7.4), accelz: -0.55);
	}
	SMOL GHIJL 2;
	Stop;
  }
}

Class DCY_AvernusBall : DCY_AvernusGuardianBall
{
  Default
  {
  DamageFunction 60;
  SeeSound "DHG/Ball";
  DeathSound "DHG/BallImpact";
  Scale 3.0;
  Radius 25;
  Height 30;
  Translation "0:255=%[0.20,0.00,0.00]:[2.00,0.50,0.00]";
  }
  
  States
  {
  Spawn:
	NBKL AABBCC 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnFlames("ff622e", 20, 80, 0, true, thrust: 2);
			A_SpawnParticleEx(0x401b11, Texman.CheckforTexture("B22MA0"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(100, 200), frandom(0, 360), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-1, 1), frandom(-1, 1), frandom(-1, 1));
			A_SpawnParticleEx(0xde3700, Texman.CheckforTexture("Graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.0, 3.0), frandom(-3.0, 3.0), frandom(1.5, 7.4), accelz: -0.55);
		}
	}
	Loop;
  Death:
	NBKL A 0
	{
		actor x = spawn("DCY_Explosion_1", pos); if (x) x.scale *= 1.5;
		A_RadiusThrust(6000, 200, RTF_NOTMISSILE|RTF_NOIMPACTDAMAGE);
		if (DCY_EffectDistance(sfxdistance))
		{
			for (int i = 20; i > 0; i--)
			{
				let trail = Spawn("De_Blood_BigSplat", pos, NO_REPLACE);
		
				if (trail)
				{
					trail.angle = frandom(0, 360);
					trail.vel.x = frandom(-10, 10);
					trail.vel.y = frandom(-10, 10);
					trail.vel.z = frandom(-3, 12);
					trail.gravity = 1;
					trail.scale *= 3;
					trail.A_SetRenderStyle(5, STYLE_ADD);
					trail.translation = translation;
					trail.bBRIGHT = true;
				}
			}
		}
	}
	Stop;
  }
}