Class DCY_RehauledPlasmaRifle : Weapon Replaces PlasmaRifle
{
  Default
  {
	Tag "UAC - Plasma Rifle";
	Weapon.AmmoGive 40;
	Weapon.AmmoUse 1;
	Weapon.BobStyle "Alpha";
	Weapon.BobRangeX 0.45;
	Weapon.BobRangeY 0.25;
	Weapon.BobSpeed 1.45;
	Inventory.PickupMessage "You picked up the Plasma Rifle! Let's make some barbecue.";
	Weapon.SelectionOrder 100;
	Weapon.SlotNumber 6;
	Weapon.AmmoType "Cell";
	Obituary "%o got fried into blue dust by $k's Plasma Rifle.";
	Inventory.PickupSound "dcy/plasmariflepickup";
  }
  
  action void A_Plasmatic()
  {
	invoker.DepleteAmmo(invoker.bAltFire, true);
	
	if (invoker.modnum == 2)
	{
		A_StartSound("Rifle/LaserAlt", CHAN_WEAPON, 0, 0.75, ATTN_NORM);
		A_WeaponOffset(frandom(-4.0, 4.0), frandom(31.0, 35.0), WOF_INTERPOLATE);	
		let missile = A_FireProjectile("DCY_CleavingLaser", 0, 0);    
        
        if (missile)
            missile.vel += vel / 2;
			
		A_GunFlash();
	}
	if (invoker.modnum == 1)
	{
		A_StartSound("RPLSFIR", CHAN_WEAPON, 0, 0.75, ATTN_NORM, frandom(0.9755, 1.0175));
		A_WeaponOffset(frandom(-5.0, 5.0), frandom(31.0, 37.0), WOF_INTERPOLATE);
		A_FireProjectile("DCY_EmissionTracer", frandom(-0.55, 0.55), 0);
		A_GunFlash();
	}
	if (invoker.modnum == 0 && countinv("DCY_EmphasisPower"))
	{
		invoker.DepleteAmmo(invoker.bAltFire, true);
		A_StartSound("Rifle/Laser2", CHAN_WEAPON, 0, 0.75, ATTN_NORM);
		A_WeaponOffset(frandom(-5.0, 5.0), frandom(31.0, 37.0), WOF_INTERPOLATE);
		A_FireProjectile("DCY_TrigLaser", 0, 0);
		A_FireProjectile("DCY_TrigLaser2", 0, 0);
		A_FireProjectile("DCY_TrigLaser3", 0, 0);
		A_GunFlash();
	}
	If(invoker.modnum == 0 && !countinv("DCY_EmphasisPower"))
	{
		A_StartSound("weapons/plasmaf", CHAN_WEAPON, 0, 0.4, ATTN_NORM, frandom(0.9955, 1.0155));
		A_WeaponOffset(frandom(-2.0, 2.0), frandom(31.0, 34.0), WOF_INTERPOLATE);
		A_FireProjectile("DCY_RehauledPlasma", frandom(-0.3, 0.3), 0);
		A_GunFlash();
	}
  }
  
  action void A_PlasmaMod()
  {
	if (invoker.modnum > 1)
		invoker.modnum = 0;
	else
		invoker.modnum += 1;
  }
  
  action void A_PlasmaModSound()
  {
	If(invoker.modnum == 0)
		A_StartSound("RPLSSELC", CHAN_6, CHANF_DEFAULT, 1.0);
	Else
		A_StartSound("RPLSDESL", CHAN_6, CHANF_DEFAULT, 1.0);
  }
  
  int modnum;
  
  action void A_PlasmaRefire()
  {
	if(!countinv("DCY_EmphasisPower"))
		A_Refire("FireLoop");
	else
		A_Refire("GreenFireLoop");
  }
	
  States
  {
  Spawn:
	PLS_ Z -1;
	Stop;
  Select:
	PLG_ WXY 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	PLG_ YXW 1 A_WeaponOffset(0, 32);
	TNT1 A 0 A_Lower();
	Wait;
  Ready:
	PLG_ A 1 A_WeaponReady(WRF_ALLOWZOOM);
	Loop;
  Fire:
	PLG_ BCD 1
	{
		If(invoker.modnum == 1)
			Return ResolveState("RedFire");
		If(invoker.modnum == 2)
			Return ResolveState("YellowFire");
		If(invoker.modnum == 0 && countinv("DCY_EmphasisPower"))
			Return ResolveState("GreenFire");
			
		Return ResolveState(null);
	}
	Goto FireLoop;
  FireLoop:
	PLG_ E 0;
	PLG_ E 1 Bright A_Plasmatic();
	PLG_ FG 1 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	PLG_ E 0 A_PlasmaRefire();
	Goto FireDone;
  FireDone:
	PLG_ HI 1 Bright A_PlasmaRefire();
	Goto Ready;
  RedFire:
	PLG_ BCJ 1;
	Goto RedFireLoop;
  RedFireLoop:
	PLG_ K 0;
	PLG_ K 1 Bright A_Plasmatic();
	PLG_ LMNJ 1 Bright
	{
		A_WeaponOffset(frandom(-1.0, 1.0), frandom(31.0, 32.0), WOF_INTERPOLATE);
		A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	}
	PLG_ J 0 A_Refire("RedFireLoop");
	Goto RedFireDone;
  RedFireDone:
	PLG_ NO 1 Bright A_Refire("RedFireLoop");
	Goto Ready;
  YellowFire:
	PLG_ BCP 1;
	Goto YellowFireLoop;
  YellowFireLoop:
	PLG_ Q 0;
	PLG_ Q 1 Bright A_Plasmatic();
	PLG_ RSTU 1 Bright
	{
		A_WeaponOffset(frandom(-2.0, 2.0), frandom(30.0, 33.0), WOF_INTERPOLATE);
		A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	}
	PLG_ Q 0 A_Refire("YellowFireLoop");
	Goto YellowFireDone;
  YellowFireDone:
	PLG_ TU 1 Bright A_Refire("YellowFireLoop");
	Goto Ready;
  GreenFire:
	PLG_ BCD 1;
	Goto GreenFireLoop;
  GreenFireLoop:
	PLG_ E 0;
	PLG_ E 1 Bright A_Plasmatic();
	PLG_ FGHVCD 1 Bright
	{
		A_WeaponOffset(frandom(-2.0, 2.0), frandom(31.0, 34.0), WOF_INTERPOLATE);
		A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	}
	PLG_ D 0 A_PlasmaRefire();
	Goto GreenFireDone;
  GreenFireDone:
	PLG_ BA 1 Bright A_PlasmaRefire();
	Goto Ready;
  Zoom:
	PLG_ A 1;
	PLG_ U 1 A_PlasmaModSound();
	PLG_ UUUUTTTTTTTTTTTTUUUU 1 A_WeaponOffset(frandom(-1.2, 1.2), frandom(31.2, 32.2), WOF_INTERPOLATE);
	PLG_ U 1 A_WeaponOffset(0, 32);
	PLG_ U 1 A_PlasmaMod();
	Goto Ready;
  Flash:
	TNT1 A 2 Bright A_Light1();
	Goto LightDone;
  }
}

Class DCY_EmissionTracer : DCY_MechaZombiePlasma
{
  Default
  {
  Damage 5;
  SeeSound "RPLSFIR";
  DeathSound "RPLSPIM";
  DamageType "Neonic";
  Speed 130;
  +NEVERFAST
  +RANDOMIZE
  Scale .2275;
  }
  
  States
  {
  Spawn:
	TRAC F 1;
	Loop;
  Death:
	TNT1 A 1;
	TNT1 A 1
	{
		A_Explode(25, 200, XF_NOTMISSILE, 1);
		A_QuakeEx(2, 2, 2, 20, 0, 100, flags: QF_SCALEDOWN);
		A_SpawnItemEx("DCY_EmissionSphere", flags: SXF_NOCHECKPOSITION);
		
		for (int i = 10; i > 0; i--)
			A_SpawnItemEx("DCY_RedAndroidPuffSpark", 0, 0, 0, frandom(4.0, 14.5), 0, Pitch+frandom(2.0, 8.0)+frandom(3.0, -3.0), frandom(-50.0, 50.0)+180, SXF_NOCHECKPOSITION, 28);
	}
	Stop;
  }
}