Class DCY_TheBFG9000 : BFG9000 Replaces BFG9000
{
  Default
  {
	Weapon.SlotNumber 7;
	Inventory.PickupMessage "You got the BFG-9000! Also known as the 'Big Fucking Gun'. Are you ready to throw a party?!";
	+WEAPON.BFG;
	Tag "B.F.G. 9000";
	Weapon.BobStyle "Alpha";
	Weapon.BobRangeX 0.45;
	Weapon.BobRangeY 0.25;
	Weapon.BobSpeed 1.45;
	Weapon.UpSound "BFG10000Proto/UP";
	Inventory.PickupSound "BFG10000Proto/UP";
  }

  action void A_BFG()
  {
	A_QuakeEx(3, 3, 3, 34, 0, 200, "", QF_SCALEDOWN, falloff: 400);
	A_FireProjectile("DCY_BFGSpheroid", 0, 0);
	invoker.DepleteAmmo(invoker.bAltFire, true);
	A_GunFlash();
	A_StartSound("DCYBFGX/FIRE", CHAN_6, CHANF_DEFAULT, 0.75, ATTN_IDLE);
  }
  
  States
  {
  Spawn:
	BIG_ U -1;
	Stop;
  Ready:
	BFG_ A 1 Bright A_WeaponReady();
	Loop;
  Select:
	BIG_ XYZ 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	BIG_ ZYX 1 A_WeaponOffset(0, 32);
	TNT1 A 0 A_Lower();
	Wait;
  Fire:
	BFG_ ABC 1 Bright;
	BFG_ D 1 Bright A_StartSound("DCYBFGX/CHARGE", CHAN_6, CHANF_DEFAULT, 0.35, ATTN_IDLE, 1.15);
	BFG_ EFGHI 2 Bright;
	BFG_ A 1 Bright A_StartSound("DCYBFG/Fire", CHAN_WEAPON, CHANF_DEFAULT, 0.6, ATTN_IDLE, frandom(0.85, 0.895));
	BFF_ BCDEFGHI 2 Bright A_WeaponOffset(frandom(1.75, -1.75), frandom(32.75, 32.15), WOF_INTERPOLATE);
	BIG_ A 1 Bright A_BFG();
	BIG_ BCDEFGHIJ 1 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	BIG_ J 0 Bright A_Refire();
	Goto Ready;
  Flash:
	TNT1 A 1;
	TNT1 A 10 A_Light1();
	TNT1 A 5 A_Light2();
	Goto LightDone;
  }
}

Class DCY_TheBFG10000 : Weapon
{
  Default
  {
	Radius 20;
	Height 20;
	Weapon.Selectionorder 2800;
	Weapon.AmmoUse1 1;
	Weapon.AmmoGive 40;
	Weapon.AmmoType1 "DCY_ProtoCell";
	Weapon.BobStyle "Alpha";
	Weapon.BobRangeX 0.45;
	Weapon.BobRangeY 0.25;
	Weapon.BobSpeed 1.45;
	Weapon.Kickback 100;
	Weapon.SlotNumber 7;
	Inventory.Pickupmessage "Aquired the Liquidation! It says what it's written on the tin. It liquidates everywhing whenever you feel like it.";
	Weapon.UpSound "BFG10000Proto/UP";
	Inventory.PickupSound "BFG10000Proto/UP";
	Tag "Liquidation";
	Obituary "All of %o's remains was blasted by %k's Liquidation.";
	+WEAPON.BFG;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NOAUTOAIM;
	+WEAPON.AMMO_OPTIONAL;
	//Decal BFGLightning;
  }
  
  action void A_LiquidationCharge()
  {
	A_StartSound("BFG10000Proto/Charge", CHAN_WEAPON, 0, 0.85);
	A_QuakeEx(1, 1, 1, 10, 0, 200, "", QF_SCALEDOWN);
	A_WeaponOffset(frandompick(-1.0, -2.0, 2.0, 1.0), frandom(32.0, 35.0), WOF_INTERPOLATE);
  }
  
  action void A_LiquidationShake()
  {
	A_QuakeEx(1, 1, 1, 10, 0, 200, "", QF_SCALEDOWN);
	A_WeaponOffset(frandompick(-1.0, -2.0, 2.0, 1.0), frandom(32.0, 35.0), WOF_INTERPOLATE);
  }
  
  action void A_LiquidationShake2()
  {
	A_QuakeEx(2, 2, 2, 10, 0, 200, "", QF_SCALEDOWN);
	A_WeaponOffset(frandompick(-4.0, -2.0, 2.0, 4.0), frandom(36.0, 42.0), WOF_INTERPOLATE);
	A_WeaponOffset(0, frandom(1.0, 1.25), WOF_ADD);
  }
  
  action void A_LiquidationShake3()
  {
	A_QuakeEx(3, 3, 3, 10, 0, 200, "", QF_SCALEDOWN);
	A_WeaponOffset(frandompick(-5.0, -4.0, 2.0, -2.0, 4.0, 5.0), frandom(43.0, 47.0), WOF_INTERPOLATE);
	A_WeaponOffset(0, frandom(1.0, 1.25), WOF_ADD);
  }
  
  States
  {
  Spawn:
    BFG2 ABCB 2 Bright;
    Loop;
  Ready:
	BG2G A 0 Bright;
	BG2G A 0 Bright A_JumpIfNoAmmo("HoldNoAmmo");
    BG2G A 1 Bright
	{
		A_StartSound("BFG10000Proto/Idle", CHAN_5, CHANF_LOOPING);
		A_WeaponReady();
	}
	BG2G A 0 Bright A_JumpIfNoAmmo("HoldNoAmmo");
	BG2G BCDCBABCDCB 1 Bright
	{
		A_JumpIfNoAmmo("ReadyNoAmmo");
		A_WeaponReady();
	}
    Loop;
  ReadyAgain:
    BG2G QPO 3;
	Goto Ready;
  ReadyNoAmmo:
	BG2G Q 0;
	BG2G Q 0 A_JumpIfInventory("DCY_ProtoCell", 15, "ReadyAgain");
    BG2G Q 1
	{
		A_StopSound(CHAN_5);
		A_JumpIfInventory("DCY_ProtoCell", 15, "ReadyAgain");
		A_WeaponReady(WRF_NOFIRE);
	}
	Loop;
  Deselect:
	BG2G Q 1
	{
		A_Lower(26);
		A_StopSound(CHAN_5);
		A_StopSound(CHAN_WEAPON);
		A_StopSound(CHAN_7);
	}
	BG2G Q 1 A_Lower(26);
	Wait;
  Select:
	BG2G Q 1 A_Raise(26);
    Loop;
  HoldNoAmmo:
    BG2G Q 1
	{
		A_StopSound(CHAN_WEAPON);
		A_StopSound(CHAN_7);
		A_WeaponReady();
	}
    Goto ReadyNoAmmo;
  Flash:
    TNT1 A 1 Bright A_Light1();
    TNT1 A 2 bright A_Light2();
    Goto LightDone;
  Fire:
	BG2G A 0 Bright;
	BG2G A 1 Bright
	{
		A_StopSound(CHAN_5);
		A_JumpIfInventory("DCY_ProtoCell", 5, "FireAgain");
		A_JumpIfNoAmmo("ReadyNoAmmo");
	}
	BG2G A 1 Bright A_LiquidationCharge();
	BG2G BCDABCD 1 BRIGHT A_LiquidationShake();
	BG2G EEEEEFFFFF 1 Bright A_LiquidationShake2();
	BG2G GGGHHHIIJJ 1 Bright A_LiquidationShake3();
	BG2G J 0 Bright
	{
		A_QuakeEx(7, 7, 7, 12, 0, 300, "", QF_RELATIVE|QF_SCALEDOWN, rollintensity: 2.0, rollwave: 3.0);
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_StopSound(CHAN_WEAPON);
		A_StartSound("BFG10kLaser/Fire", CHAN_5, CHANF_DEFAULT, 1.0, 0.5);
		A_StartSound("BFG10kLaser/Fire", CHAN_6, CHANF_DEFAULT, 0.75, 0.5, 0.7);
		A_SetBlend("White", 0.85, 20, "Green");
	}
	BG2G KNKNKNKNKNKNKNKNKNKNKNKNKNKKNKNKNK 1 Bright
	{
	  If(!CountInv("DCY_ProtoCell"))
	  {
		Return ResolveState("HoldNoAmmo");
	  }
	  Else
	  {
		A_RailAttack(100, 0, 0, "", "", RGF_SILENT|RGF_FULLBRIGHT, pufftype: "DCY_BFG10kLaserPuff", sparsity: 64, spawnclass: "DCY_BFG10kLASERTrail");
		A_WeaponOffset(frandom(-5.0, 5.0), frandom(47.0, 50.0), WOF_INTERPOLATE);
		invoker.DepleteAmmo(invoker.bAltFire, true);
		A_QuakeEx(2, 2, 2, 20, 0, 300, "", QF_RELATIVE|QF_SCALEDOWN, rollintensity: 1.0, rollwave: 2.0);
		A_GunFlash();
		Return ResolveState(null);
	  }
	}
	Goto Hold;
  Hold:
	BG2G K 0;
	BG2G NK 1 Bright
	{
	  If(!CountInv("DCY_ProtoCell"))
	  {
		Return ResolveState("HoldNoAmmo");
	  }
	  Else
	  {
		A_RailAttack(100, 0, 0, "", "", RGF_SILENT|RGF_FULLBRIGHT, pufftype: "DCY_BFG10kLaserPuff", sparsity: 64, spawnclass: "DCY_BFG10kLASERTrail");
		A_WeaponOffset(frandom(-5.0, 5.0), frandom(47.0, 50.0), WOF_INTERPOLATE);
		invoker.DepleteAmmo(invoker.bAltFire, true);
		A_QuakeEx(2, 2, 2, 20, 0, 300, "", QF_RELATIVE|QF_SCALEDOWN, rollintensity: 1.0, rollwave: 2.0);
		A_GunFlash();
		A_JumpIfNoAmmo("HoldNoAmmo");
		A_StartSound("BFG10kLaser/Hold", CHAN_WEAPON, CHANF_LOOPING, 1.0, 1.0);
		A_StartSound("BFG10kLaser/Hold", CHAN_7, CHANF_LOOPING, 0.45, 0.5, 0.75, 0.00);
		Return ResolveState(null);
	  }
	}
	BG2G N 0 A_Refire("Hold");
	BG2G N 1 Bright;
	Goto CooldownSupreme;
  CooldownSupreme:
	BG2G O 2
	{
		A_StartSound("BFG10kLaser/Stop", CHAN_6, CHANF_DEFAULT, 1.0, 0.5);
		A_WeaponOffset(0.1, 48, WOF_INTERPOLATE);
		A_JumpIfNoAmmo("HoldNoAmmo");
	}
	BG2G O 2 Bright
	{
		A_SetMugshotState("Normal");
		A_StopSound(CHAN_WEAPON);
		A_StopSound(CHAN_7);
		A_WeaponOffset(0, -3.0, WOF_ADD|WOF_INTERPOLATE);
		A_JumpIfNoAmmo("ReadyNoAmmo");
	}
	BG2G OOPPPPQQQQQQQPPOO 2 Bright
	{
		A_SetMugshotState("Normal");
		A_WeaponReady(WRF_NOFIRE|WRF_NOSECONDARY|WRF_NOPRIMARY);
		A_WeaponOffset(0, -1.0, WOF_ADD|WOF_INTERPOLATE);
		A_JumpIfNoAmmo("ReadyNoAmmo");
	}
	Goto Ready;
  }
}

Class DCY_SmallBFG10kBoom : BulletPuff
{
  Default
  {
	  Radius 0;
	  Height 0;
	  Scale 0.76;
	  Alpha 1.0;
	  VSpeed 0;
	  +ALWAYSPUFF;
	  RenderStyle "Add";
	  +ROLLSPRITE;
	  +FLATSPRITE;
	  Translation "0:255=%[0.00,0.00,0.00]:[1.48,1.98,1.12]";
	  +BRIGHT;
  }
  States
  {
  Spawn:
	SUPH A 0 NoDelay
	{
		A_SetRoll(Roll+random(0, 360));
		A_SetAngle(Angle+random(0, 360));
		A_SetPitch(Pitch+random(0, 360));
		
		for (int i = 3; i > 0; i--)
		{
			A_SpawnItemEx("DCY_BFG10kLaserPuffSpark", 0, 0, 0, frandom(10.0, 20.5), 0, frandom(2.0, 13.0)+frandom(5.0, -5.0), frandom(-360.0, 360.0)+frandom(-180.0, 180.0), SXF_NOCHECKPOSITION, 28);
			A_SpawnItemEx("DCY_BFG10kLaserPuffSpark", 0, 0, 0, frandom(10.0, 20.5), 0, frandom(2.0, 13.0)+frandom(5.0, -5.0), frandom(-360.0, 360.0)+frandom(-180.0, 180.0), SXF_NOCHECKPOSITION, 60);
		}
		
		A_Explode(random(5, 10), 100, XF_NOTMISSILE);
	}
	SUPH ACEGIKMOPQR 1;
	Stop;
  }
}

//Sirius Crisis Roscoe
Class DCY_SiriusCrisis : Weapon
{
  Default
  {
	Tag "Sirius Crisis Roscoe";
	Inventory.PickupMessage "Your great hands handle the \c[Sapphire]Sirius Crisis Roscoe\cL.";
	Obituary "%o cannot even handle the power of the $k's \c[Sapphire]Sirius Crisis Roscoe\cL.";
	Weapon.BobStyle "Alpha";
	Weapon.BobRangeX 0.45;
	Weapon.BobRangeY 0.25;
	Weapon.BobSpeed 1.0;
	Weapon.AmmoType "DCY_UltramodernEnergy";
	Weapon.AmmoGive 45;
	Weapon.AmmoUse 45;
	Weapon.AmmoUse2 400;
	Weapon.Kickback 150;
	Weapon.SlotNumber 7;
	Weapon.UpSound "SiriusBFG/Up";
	Inventory.PickupSound "SiriusBFG/Pickup";
	+WEAPON.BFG;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NOAUTOAIM;
  }
  
  action void A_SiriusBlast()
  {
	A_SetBlend("Cyan", 0.5, 20, "Blue");
	A_GunFlash();
	A_StartSound("SiriusBFG/Fire", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.5);
	A_FireProjectile("DCY_SiriusBFGBall", 0, 0);
	invoker.DepleteAmmo(invoker.bAltFire, true);
	A_QuakeEx(4, 4, 4, 40, 0, 600, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(2, 2, 2, 50, 0, 600, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(1, 1, 1, 60, 0, 600, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(1, 1, 1, 55, 0, 600, "", QF_SCALEDOWN, rollintensity: frandom(0.35, 0.45), rollwave: frandom(-0.65, 0.65));
  }
  
  action void A_SiriusLaser()
  {
	A_SetBlend("Cyan", 0.5, 10 + (invoker.chargemeter / 5), "Blue");
	A_GunFlash();
	
	if (invoker.chargemeter > 0)
		A_FireProjectile("DCY_SiriusLaser", 0, 0);
	
	invoker.DepleteAmmo(invoker.bAltFire, true);
  }
  
  float shakemeter;
  float chargemeter;
  
  States
  {
  Spawn:
    BFG8 A -1 Bright;
	Stop;
  Select:
    SRB0 A 1 Bright A_Raise(20);
	Loop;
  Deselect:
    SRB0 A 1 Bright
	{
		A_StopSound(CHAN_5);
		A_Lower(20);
	}
	Loop;
  Ready:
    SRB0 ABCB 1 Bright
	{
		A_StartSound("BFG10000Proto/Idle", CHAN_5, CHANF_LOOPING, 0.65);
		A_WeaponReady();
	}
	Loop;
  Fire:
	SRB0 A 10 Bright { A_StopSound(CHAN_5); invoker.chargemeter = 0; A_StartSound("MECHGRAB", CHAN_6); }
	Goto FHold;
  FHold:
	SRB0 C 1 Bright
	{
		A_WeaponOffset(frandom(-1.0, 1.0) * (invoker.chargemeter / 15), 32 + (frandom(-1.0, 1.0) * (invoker.chargemeter / 15)), WOF_INTERPOLATE);
		A_RailAttack(false, 0, 0, "", "Cyan", RGF_FULLBRIGHT|RGF_SILENT|RGF_NOPIERCING|RGF_NORANDOMPUFFZ, frandom(-5, 5), duration: 20, sparsity: 5, driftspeed: frandom(-2, 2));
		A_RailAttack(false, 0, 0, flags: RGF_FULLBRIGHT|RGF_SILENT|RGF_NOPIERCING|RGF_NORANDOMPUFFZ, sparsity: 20, spawnclass: "DCY_SiriusTrack");
		A_StartSound("DIVLOOP", CHAN_5, CHANF_LOOPING);
		
		if (invoker.chargemeter < 20)
			invoker.chargemeter += 0.1;
	}
	SRB0 A 0
	{
		if (invoker.chargemeter < 20)
			A_Refire("FHold");
	}
	Goto HoldEnd;
  HoldEnd:
	SRB0 E 0 { A_StartSound("Eradicator/Laser", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.5, 1.253 - (invoker.chargemeter / 23)); A_StopSound(CHAN_5); }
	SRB0 EF 1;
	SRB0 G 2
	{
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_SiriusLaser();
		invoker.chargemeter = 0;
	}
	SRB0 HIJKL 2 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	SRB0 MNO 2 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	SRB0 AAAAABBBCCBB 1 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	Goto Ready;
  Superfire:
    SRB0 A 1 Bright { A_StopSound(CHAN_5); A_QuakeEx(3, 3, 3, 45, 0, 500, "", QF_RELATIVE|QF_SCALEUP); invoker.shakemeter = 0; A_StartSound("SiriusBFG/Charge", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.645); }
	SRB0 BCBABCBABCBABCBABCDEF 1 Bright
	{
		A_WeaponOffset(frandom(-2.0, 2.0) * invoker.shakemeter, 32 + frandom(-2.0, 2.0) * invoker.shakemeter, WOF_INTERPOLATE);
		invoker.shakemeter += 0.35;
	}
	SRB0 G 3 Bright
	{
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_SiriusBlast();
	}
	SRB0 HIJKL 3 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	SRB0 MNO 3 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	SRB0 AAAAABBBCCBB 1 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY);
	Goto Ready;
  Flash:
    TNT1 A 0;
	TNT1 A 3 A_Light1();
	TNT1 A 5 A_Light2();
	TNT1 A 4 A_Light0();
	Goto LightDone;
  }
}

Class DCY_SiriusLaser : DCY_TracerPlayer
{
  Default
  {
	Damage 10;
	Radius 10;
	Height 10;
	Scale .6;
	Translation "0:255=%[0.00,0.00,0.00]:[1.06,1.66,1.83]";
	DeathSound "";
	+BRIGHT;
	+FORCERADIUSDMG;
  }
  
  States
  {
  Spawn:
	TRAC E 1 A_Explode(10, 30);
	Loop;
  Death:
  XDeath:
	TNT1 A 10
	{
		let ring = Spawn("DCY_OverdemoniacPuff", pos);
		
		if (ring)
		{
			ring.translation = translation;
			ring.scale *= 3;
		}
		
		for (int i = 15; i > 0; i--)
			A_SpawnItemEx("DCY_SiriusSmoke3", frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(0, 360), SXF_NOCHECKPOSITION);
		
		A_QuakeEx(4, 4, 4, 40, 0, 900, "", QF_SCALEDOWN);
		A_Explode(300, 350);
	}
	TNT1 AAAAAAAA 4
	{
		A_Explode(300, 350);
		for (int i = 2; i > 0; i--)
			A_SpawnItemEx("DCY_SiriusSmoke3", frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(-3, 3), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	Stop;
  }
}

Class DCY_SiriusBFGBall : CacodemonBall
{
  Default
  {
	  Damage 10;
	  Radius 35;
	  Height 35;
	  Speed 3;
	  DamageType "Player";
	  RenderStyle "Add";
	  Alpha 0.85;
	  Scale 1;
	  SeeSound "";
	  DeathSound "SiriusBFG/Explode";
	  +RIPPER;
	  +NEVERFAST;
	  +EXTREMEDEATH;
	  +FORCEXYBILLBOARD;
	  +BRIGHT;
	  +FORCERADIUSDMG;
	  Translation "0:255=%[1.02,1.85,1.99]:[0.00,0.00,0.34]";
  }
  
  int deathloop;
  int sspeed;
  
  void A_SiriusTrail()
  {
	A_SpawnItemEx("DCY_SiriusSmoke", xvel: frandom(-2, 2), yvel: frandom(-2, 2), zvel: frandom(-2, 2), flags: SXF_NOCHECKPOSITION);
	A_SpawnItemEx("DCY_SiriusArc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_NOCHECKPOSITION, 200);
	
	if (sspeed > 64 && sspeed < 128)
			vel += vel.unit() * 0.875;
		
	sspeed++;
  }
  
  void SiriusGoBoom()
  {
	for (int i = 2; i > 0; i--)
	{
		A_SpawnItemEx("DCY_SiriusSmoke2", random(-50, 50), random(-50, 50), random(-50, 50), random(-20, 20), random(-20, 20), random(-20, 20), random(0, 360), SXF_NOCHECKPOSITION, 200);
	}
	
	A_SpawnItemEx("DCY_SiriusBFGTrailAlpha", flags: SXF_NOCHECKPOSITION);
	A_Explode(80, 300, 0, True);
  }
  
  void SiriusGoKaboom()
  {
	for (int i = 0; i < 4; i++)
		A_StartSound("SiriusBFG/DeathStart", i, CHANF_DEFAULT, 1.0, 0.45);
	
	A_QuakeEx(8, 8, 8, 90, 0, 1400, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(6, 6, 6, 100, 0, 1800, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(3, 3, 3, 125, 0, 2222, "", QF_RELATIVE|QF_SCALEDOWN);
	A_QuakeEx(1, 1, 1, 105, 0, 2000, "", QF_SCALEDOWN, 0, 0, 0, 0, 0, frandom(0.7, 1.0), frandom(-0.65, 0.65));
	
	A_Explode(700, 400, 0, True);
	A_Explode(350, 800, 0, True);
	A_Explode(200, 1200, 0, True);
	A_Explode(100, 2255, 0, True);
  }
  
  States
  {
  Spawn:
    TNT1 A 0;
	BVDP A 1
	{
		A_SiriusTrail();
		A_StartSound("SiriusBFG/Loop", CHAN_5, CHANF_LOOPING, 1.0);
	}
	BVDP ABBCC 1 A_SiriusTrail();
	Loop;
  Death:
	BVDP A 1
	{
		SiriusGoBoom();
		A_StopSound(CHAN_5);
		A_StartSound("SiriusBFG/DeathWait", CHAN_BODY, 0, 1.0, 0.5);
		A_SpawnItemEx("DCY_SiriusBFGSphereTrail",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	}
	BDVP AAABBBBBBBBCCCCCCCCC 2 SiriusGoBoom();
	Goto DeathStart;
  DeathStart:
	TNT1 A 0;
	TNT1 A 1 SiriusGoKaboom();
	TNT1 AAAAAA 1
	{
		A_Explode(80, 2000, 0, True);
		A_SpawnItemEx("DCY_SiriusBFGRing", flags: SXF_NOCHECKPOSITION, failchance: 80);
		
		for (int i = 8; i > 0; i--)
			A_SpawnItemEx("DCY_SiriusSmoke2", frandom(-50, 50), frandom(-50, 50), frandom(-50, 50), frandom(-150, 150), frandom(-150, 150), frandom(-150, 150), frandom(0, 360), SXF_NOCHECKPOSITION, 160);
	}
	TNT1 A 1
	{
		A_SpawnItemEx("DCY_SiriusBFGSphere2", flags: SXF_NOCHECKPOSITION);
		A_Explode(80, 2000, 0, True);
		A_Explode(700, 400, 0, True);
		A_Explode(350, 800, 0, True);
		A_Explode(200, 1200, 0, True);
		A_Explode(100, 2255, 0, True);
		A_SpawnItemEx("DCY_SiriusBFGRing", flags: SXF_NOCHECKPOSITION, failchance: 80);
		
		for (int i = 8; i > 0; i--)
			A_SpawnItemEx("DCY_SiriusSmoke2", frandom(-50, 50), frandom(-50, 50), frandom(-50, 50), frandom(-150, 150), frandom(-150, 150), frandom(-150, 150), frandom(0, 360), SXF_NOCHECKPOSITION, 160);
		
	}
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_SpawnItemEx("DCY_SiriusBFGRing", flags: SXF_NOCHECKPOSITION, failchance: 80);
		
		for (int i = 8; i > 0; i--)
			A_SpawnItemEx("DCY_SiriusSmoke2", frandom(-50, 50), frandom(-50, 50), frandom(-50, 50), frandom(-150, 150), frandom(-150, 150), frandom(-150, 150), frandom(0, 360), SXF_NOCHECKPOSITION, 160);
		
		A_Explode(80, 4959, 0, True);
	}
	TNT1 A 125;
	Stop;
  }
}

Class DCY_SiriusBFGTrail : Actor
{
  Default
  {
	Radius 0;
	Height 0;
	RenderStyle "Add";
	Scale 0.4;
	Alpha 0.1825;
	+NOCLIP;
	+NOINTERACTION;
	+FORCEXYBILLBOARD;
	+THRUSPECIES;
	+THRUGHOST;
	+THRUACTORS;
	+DONTSPLASH;
	+MTHRUSPECIES;
	+BRIGHT;
  }
  States
  {
  Spawn:
    SIRL A 0;
	SIRL A 0 A_JumpIf(Scale.X <=0.0000000000000001, "Stahp");
	SIRL A 0 A_JumpIf(Alpha <=0.0000000000000001, "Stahp");
	SIRL A 0 A_SetScale(Scale.X-0.0055, Scale.Y-0.0055);
	SIRL A 1 A_FadeOut(0.015215, 0);
	Loop;
  Stahp:
    TNT1 A 1;
	Stop;
  }
}

Class DCY_SiriusBFGTrailAlpha : DCY_SiriusBFGTrail
{
  Default
  {
	Alpha 0.1;
  }
}

Class DCY_SiriusBFGTrail2 : DCY_SiriusBFGTrail
{
  Default
  {
	Scale 0.01;
	+ROLLSPRITE
	+FLATSPRITE
  }
  
  States
  {
  Spawn:
	EF3_ K 0 NoDelay
	{
		A_SetRoll(frandom(0, 360));
		A_SetPitch(frandom(0, 360));
		A_SetAngle(frandom(0, 360));
	}
    SIRL A 0;
	SIRL A 0 A_JumpIf(Scale.X <=0.0000000000000001, "Stahp");
	SIRL A 0 A_JumpIf(Alpha <=0.0000000000000001, "Stahp");
	SIRL A 0 A_SetScale(Scale.X-0.00025, Scale.Y-0.00025);
	SIRL A 0 A_ChangeVelocity(0, 0, -2);
	SIRL A 1 A_FadeOut(0.0205, 0);
	Loop;
  }
}

Class DCY_SiriusArc : DCY_Arc
{
  Default
  {
	Scale 1.3;
	Translation "0:255=%[0.00,0.00,0.00]:[0.62,1.31,2.00]";
  }
}

Class DCY_SiriusBFGSphereTrail : DCY_SiriusBFGTrail
{
  Default
  {
	Scale 10;
	Alpha 0.00;
  }
  
  float num;
  float num2;
  float zalpha;
  
  States
  {
  Spawn:
	PKCH AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_SetScale(Scale.X - (0.05 + num));
		A_SetAngle(Angle + (5 + (num * 10)), SPF_INTERPOLATE);
		
		if (alpha < 2)
			A_FadeIn(0.1);
		
		num += 0.0025;
		zalpha = 2;
	}
	PKCH A 1 { num = 3; }
	PKCH AAAAAAAAAAAA 1
	{
		num -= 0.25;
		
		A_SetScale(Scale.X + num);
		A_SetAngle(Angle + 15, SPF_INTERPOLATE);
	}
	PKCH AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		zalpha -= 0.05;
		
		if (num > 0.1)
			num -= 0.05;
		
		A_SetRenderStyle(zalpha, STYLE_ADD);
		A_SetScale(Scale.X + num);
		A_SetAngle(Angle + (15 - num2), SPF_INTERPOLATE);
		
		num2 += 0.25;
	}
	Stop;
  }
}

Class DCY_SiriusBFGSphere2 : DCY_SiriusBFGSphereTrail
{
  Default
  {
  Scale 0.01;
  Alpha 1.0;
  }
  
  States
  {
  Spawn:
	PKCH A 1 NoDelay { num = 3; zalpha = 1; }
	PKCH AAAAAAAAAAAA 1
	{
		num -= 0.185;
		
		A_SetScale(Scale.X + num);
		A_SetAngle(Angle + 15, SPF_INTERPOLATE);
	}
	PKCH AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		zalpha -= 0.025;
		
		if (num > 0.1)
			num -= 0.05;
		
		A_SetRenderStyle(zalpha, STYLE_ADD);
		A_SetScale(Scale.X + num);
		A_SetAngle(Angle + (15 - num2), SPF_INTERPOLATE);
		
		num2 += 0.25;
	}
	Stop;
  }
}

Class DCY_SiriusSmoke : DCY_SiriusBFGTrail
{
  Default
  {
	Scale 1;
	Alpha 0.85;
	+ROLLSPRITE
	+SOLID
	BounceFactor 1.0;
	BounceType "Hexen";
  }
  
  override void tick()
  {
	super.tick();
	A_Explode(3, 200, damagetype: "Player");
  }
  
  States
  {
  Spawn:
	SE1Z A 0 NoDelay A_SetRoll(frandom(0, 360));
	SE1Z A 15;
	SE1Z AAAAAAAAAA 1 A_FadeOut(0.1);
	Stop;
  }
}

Class DCY_SiriusSmokeBig : DCY_SiriusSmoke
{
  Default
  {
  Scale 3;
  Alpha 0.65;
  Alpha 0.25;
  }
  
  override void tick()
  {
	super.tick();
  }
  
  States
  {
  Spawn:
	SE1Z A 0 NoDelay A_SetRoll(frandom(0, 360));
	SE1Z A 15;
	SE1Z AAAAAAAAAAAAAAAAAAAA 1 A_FadeOut(0.015);
	Stop;
  }
}

Class DCY_SiriusSmoke3 : DCY_SiriusBFGTrail
{
  Default
  {
  Scale 2.25;
  Alpha 0.45;
  +ROLLSPRITE
  +FORCERADIUSDMG
  +SOLID
  +NOGRAVITY
  RenderStyle "Add";
  BounceFactor 1.0;
  BounceType "Hexen";
  }
  
  override void tick()
  {
	super.tick();
	A_Explode(4, 150, damagetype: "Player");
  }
  
  States
  {
  Spawn:
	SE1Z A 0 NoDelay A_SetRoll(frandom(0, 360));
	SE1Z A 15;
	SE1Z AAAAAAAAAAAAAAAAAAAA 2 A_FadeOut(0.015);
	Stop;
  }
}

Class DCY_SiriusSmoke2 : DCY_SiriusSmoke
{
  Default
  {
  -NOCLIP;
  +SOLID;
  BounceFactor 1.0;
  BounceType "Hexen";
  }
  
  States
  {
  Spawn:
	TNT1 AAAAAA 1 A_SpawnItemEx("DCY_SiriusSmokeBig", frandom(-15, 15), frandom(-15, 15), frandom(-15, 15), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2));
	Stop;
  }
}

Class DCY_SiriusBFGRing : DCY_SiriusBFGTrail
{
  Default
  {
	Scale 0;
	Alpha 0.85;
	+ROLLSPRITE
	+FLATSPRITE
  }
  
  States
  {
  Spawn:
	EF3_ K 0 NoDelay
	{
		A_SetRoll(frandom(0, 360));
		A_SetPitch(frandom(0, 360));
		A_SetAngle(frandom(0, 360));
	}
    EF3_ K 1
	{
		if (Scale.X > 3)
		{
			if (Alpha < 0.00)
				Destroy();
			
			A_FadeOut(0.1);
		}
		
		A_SetScale(Scale.X + 1);
	}
	Goto Spawn+1;
  }
}

//Deracinator
Class DCY_Deracinator : Weapon
{
  Default
  {
	Tag "Deracinator - The Obliterator";
	Inventory.PickupSound "SiriusBFG/Pickup";
	Inventory.PickupMessage "The Deracinator! This galactical weapon can make a REAL confetti party.";
	Obituary "%o is no more.";
	Weapon.AmmoType "DCY_UltramodernEnergy";
	Weapon.AmmoGive 40;
	Weapon.AmmoUse 20;
	Weapon.Kickback 150;
	Weapon.BobStyle "Alpha";
	Weapon.BobRangeX 0.45;
	Weapon.BobRangeY 0.25;
	Weapon.BobSpeed 1.45;
	Weapon.SlotNumber 7;
	Weapon.UpSound "ObliterationBFG/Raise";
	Inventory.PickupSound "ObliterationBFG/Raise";
	+WEAPON.BFG;
	+WEAPON.NOAUTOAIM;
	+WEAPON.AMMO_OPTIONAL;
  }
  
  States
  {
  Spawn:
	NBXG A -1 Bright;
	Stop;
  Select:
	N8BG X 0 A_JumpIfNoAmmo("NoAmmoSel");
	Goto SelectL;
  SelectL:
    N8BG XYZ 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	N8BG X 0 A_JumpIfNoAmmo("NoAmmoDesel");
	Goto DeselectL;
  DeselectL:
    N8BG ZYX 1
	{
		A_StopSound(CHAN_6);
		A_WeaponOffset(0, 32);
	}
	TNT1 A 0 A_Lower();
	Wait;
  Ready:
    N7BG A 0 Bright;
	N7BG A 0 Bright A_JumpIfNoAmmo("NoAmmoReady");
	Goto ReadyL;
  ReadyL:
	N7BG A 0 Bright;
	N7BG A 0 Bright A_StartSound("ObliterationBFG/Idle", CHAN_6, CHANF_DEFAULT|CHANF_LOOPING, 1.0, 0.75);
    N7BG AABBCCDD 1 Bright A_WeaponReady();
	Loop;
  NoAmmoSel:
    N7BG P 0 A_JumpIfInventory("DCY_UltramodernEnergy", 1, "SelectL");
	N8BG ABC 1 A_WeaponReady(WRF_NOFIRE);
	Goto NoAmmoReady;
  NoAmmoDesel:
    N7BG P 0 A_JumpIfInventory("DCY_UltramodernEnergy", 1, "DeselectL");
	N8BG CBA 1
	{
		A_StopSound(CHAN_6);
		A_WeaponOffset(0, 32);
	}
	TNT1 A 0 A_Lower();
	Wait;
  NoAmmoReady:
	N7BG P 0;
	N7BG P 0 A_JumpIfInventory("DCY_UltramodernEnergy", 1, "ReadyL");
	N7BG P 1 A_WeaponReady(WRF_NOPRIMARY);
	Loop;
  Fire:
    N7BG A 0 A_Jump(128, "Sound1", "Sound2", "Sound3");
	Goto Sound1;
  Sound1:
	N7BG A 0 //Best BFG Sound IMO
	{
		A_StopSound(CHAN_6);
		A_StartSound("OBLTFIRE", CHAN_7, 0, 0.6, 0.5);
	}
	Goto FireNow;
  Sound2:
	N7BG A 0
	{
		A_StopSound(CHAN_6);
		A_StartSound("OBLTFIR2", CHAN_7, 0, 0.6, 0.5);
	}
	Goto FireNow;
  Sound3:
	N7BG A 0
	{
		A_StopSound(CHAN_6);
		A_StartSound("OBLTFIR3", CHAN_7, 0, 0.6, 0.5);
	}
	Goto FireNow;
  FireNow:
	N7BG QRSTUVWX 1 Bright A_QuakeEx(1, 1, 1, 14, 0, 400, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1000);
	N7BG QRSTUVWX 1 Bright A_QuakeEx(2, 2, 2, 14, 0, 400, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1000);
	N7BG E 2 Bright;
	N7BG F 1 Bright;
	N7BG F 1 Bright
	{
		A_SetBlend("Purple", 0.65, 20);
		A_GunFlash();
		A_QuakeEx(4, 4, 4, 128, 0, 800, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1900);
		A_FireProjectile("DCY_ObliterationBFGProjectile", 0, 0);
		invoker.DepleteAmmo(invoker.bAltFire, true);
	}
	N7BG GHIJ 2 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	N7BG KLMNOP 3 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	N7BG P 4 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	N7BG P 3 Bright A_Refire();
	Goto Ready;
  }
}

Class DCY_ObliterationBFGProjectile : FastProjectile
{
  Default
  {
  Speed 145.5;
  Damage 500;
  Obituary "%o exploded in a galactical way by $k's Obliteration-BFG.";
  DeathSound "BFGX/Explode";
  RenderStyle "Add";
  Alpha 0.5;
  Radius 20;
  Height 20;
  Translation "0:255=%[0.00,0.00,0.00]:[1.64,0.77,2.00]";
  MissileType "DCY_ObliterationBFGEffect";
  MissileHeight 5;
  Projectile;
  +EXTREMEDEATH;
  +DONTREFLECT;
  +DONTHARMCLASS;
  +FORCERADIUSDMG;
  +BRIGHT;
  DamageType "Cosmical";
  }
  
  States
  {
  Spawn:
	TRAC C 1
	{
		A_SpawnItemEx("DCY_ObliterationBFGEffect2", random(-10, 10), random(-2, 2), random(-2, 2), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		A_Explode(80, 50, 0, 1, 10);
	}
	Loop;
  Death:
	TNT1 A 0 A_Explode(900, 900, 0, 0, random(10, 20));
	TNT1 A 0
	{
		A_QuakeEx(8, 8, 8, 20, 0, 350, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 600);
		A_QuakeEx(6, 6, 6, 25, 0, 600, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 900);
		A_QuakeEx(4, 4, 4, 32, 0, 850, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1250);
		A_QuakeEx(2, 2, 2, 38, 0, 1100, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1550);
		A_QuakeEx(1, 1, 1, 45, 0, 1350, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 2050);
		A_QuakeEx(1, 1, 1, 35, 0, 1650, "", QF_SCALEDOWN, 0, 0, 0, 2000, 0, 0.7, frandom(0.7, -0.7));
		A_SpawnItemEx("DCY_ObliterationExplosion", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Obliteration", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_Explode(120, 800, 0, 0);
	Stop;
  }
}

Class DCY_ObliterationBFGProjectileBlu : DCY_ObliterationBFGProjectile
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[0.39,0.95,2.00]";
  MissileType "DCY_ObliterationBFGEffectBlu";
  }
  States
  {
  Spawn:
    TRAC E 0;
	TRAC E 0 A_SpawnItemEx("DCY_ObliterationBFGEffect2Blu", random(-10, 10), random(-2, 2), random(-2, 2), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	TRAC E 0 A_Explode(80, 50, 0, 1, 10);
	TRAC E 1;
	Loop;
  Death:
    TNT1 A 0;
	TNT1 A 0 A_Explode(500, 900, 0, 0, random(10, 20));
	TNT1 A 0
	{
		A_QuakeEx(8, 8, 8, 20, 0, 350, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 600);
		A_QuakeEx(6, 6, 6, 25, 0, 600, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 900);
		A_QuakeEx(4, 4, 4, 32, 0, 850, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1250);
		A_QuakeEx(2, 2, 2, 38, 0, 1100, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 1550);
		A_QuakeEx(1, 1, 1, 45, 0, 1350, "", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 2050);
		A_QuakeEx(1, 1, 1, 35, 0, 1650, "", QF_SCALEDOWN, 0, 0, 0, 2000, 0, 0.7, frandom(0.7, -0.7));
		A_SpawnItemEx("DCY_ObliterationExplosionBlu", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_AndroidExplosionBiggie", random(-30, 30), random(-30, 30), random(15, 40), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), random(0, 360), SXF_NOCHECKPOSITION);
	}
	TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_Explode(50, 800, 0, 0);
	Stop;
  }
}

Class DCY_ObliterationExplosion : Actor
{
  Default
  {
  Radius 0;
  Height 0;
  Speed 0;
  Damage (0);
  RenderStyle "Add";
  Scale 1.0;
  Alpha 0.675;
  Translation "119:127=[115,0,230]:[0,0,0]", "112:118=[176,98,255]:[128,0,255]", "160:167=[190,125,255]:[64,0,128]", "208:231=%[0.00,0.00,0.00]:[1.47,0.94,2.00]";
  Projectile;
  +NOCLIP;
  +NOGRAVITY;
  +BRIGHT;
  +THRUACTORS;
  -SOLID;
  +FORCEXYBILLBOARD;
  }
  
  States
  {
  Spawn:
    D_E1 C 0;
	D_E1 C 1 A_SetScale(1.35, 1.35);
	D_E1 C 1 A_SetScale(1.60, 1.60);
	D_E1 C 1 A_SetScale(1.95, 1.65);
	D_E1 C 1 A_SetScale(2.25, 2.25);
	D_E1 C 1 A_SetScale(2.40, 2.45);
	D_E1 C 1 A_SetScale(2.75, 2.75);
	D_E1 C 1 A_SetScale(3.00, 3.00);
	D_E1 C 1 A_SetScale(3.30, 3.30);
	D_E1 C 1 A_SetScale(3.70, 3.70);
    D_E1 C 1 A_SetScale(3.95, 3.95);
	D_E1 C 1 A_SetScale(4.00, 4.00);
	D_E1 C 1 A_SetScale(4.15, 4.15);
	D_E1 C 1 A_SetScale(4.35, 4.35);
	D_E1 C 1 A_SetScale(4.45, 4.45);
	D_E1 C 1 A_SetScale(4.55, 4.45);
	D_E1 C 1 A_SetScale(4.60, 4.60);
	D_E1 C 1 A_SetScale(4.62, 4.62);
	D_E1 C 1 A_SetScale(4.68, 4.58);
	D_E1 C 1 A_SetScale(4.74, 4.52);
	D_E1 C 1 A_SetScale(4.84, 4.45);
	D_E1 C 1 A_SetScale(4.98, 4.30);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(5.10, 4.10);
	D_E1 C 1 A_SetScale(5.30, 3.80);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(5.60, 3.50);
	D_E1 C 1 A_SetScale(5.90, 3.25);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(6.20, 2.90);
	D_E1 C 1 A_SetScale(6.60, 2.55);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(7.00, 2.15);
	D_E1 C 1 A_SetScale(7.30, 1.55);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(7.60, 1.0);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(8.20, 0.25);
	D_E1 C 0 A_FadeOut(0.035, 0);
	D_E1 C 1 A_SetScale(8.90, 0.05);
	D_E1 C 1 A_SetScale(9.20, 0.025);
	D_E1 C 1 A_SetScale(9.90, 0.0025);
	D_E1 C 1 A_SetScale(10.50, 0.0005);
	Stop;
  }
}

Class DCY_ObliterationExplosionBlu : DCY_ObliterationExplosion { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.39,0.95,2.00]"; } }

Class DCY_ObliterationBFGEffect : Actor
{
  Default
  {
  Alpha 0.1;
  Scale 1.0;
  RenderStyle "Add";
  Radius 0;
  Height 0;
  Damage (0);
  Speed 0;
  Projectile;
  +NOCLIP;
  +NOGRAVITY;
  +THRUACTORS;
  +NOBLOCKMAP;
  -SOLID;
  +FORCEXYBILLBOARD;
  +BRIGHT
  }
  
  States
  {
  Spawn:
    EF1_ F 0;
	EF1_ F 0 A_JumpIf(Alpha <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_JumpIf(Scale.X <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_JumpIf(Scale.Y <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_FadeOut(0.025, 0);
	EF1_ F 0 A_SetScale(Scale.X-0.01, Scale.Y-0.01);
	EF1_ F 1;
	Loop;
  Stahp:
	TNT1 A 2;
	Stop;
  }
}

Class DCY_ObliterationBFGEffect2 : DCY_ObliterationBFGEffect
{
  Default
  {
  Alpha 1.0;
  Scale 0.25;
  }
  
  States
  {
  Spawn:
    EF1_ F 0;
	EF1_ F 0 A_JumpIf(Alpha <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_JumpIf(Scale.X <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_JumpIf(Scale.Y <= 0.0000000000000001, "Stahp");
	EF1_ F 0 A_FadeOut(0.0010, 0);
	EF1_ F 0 A_ChangeVelocity(frandom(-0.4, 0.4), frandom(-0.4, 0.4), frandom(-0.4, 0.4), CVF_RELATIVE);
	EF1_ F 0 A_SetScale(Scale.X-0.05, Scale.Y-0.05);
	EF1_ F 1;
	Loop;
  Stahp:
	TNT1 A 2;
	Stop;
  }
}

Class DCY_ObliterationBFGEffectBlu : DCY_ObliterationBFGEffect
{
  States
  {
  Spawn:
    EF1_ C 0;
	EF1_ C 0 A_JumpIf(Alpha <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_JumpIf(Scale.X <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_JumpIf(Scale.Y <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_FadeOut(0.025, 0);
	EF1_ C 0 A_SetScale(Scale.X-0.01, Scale.Y-0.01);
	EF1_ C 1;
	Loop;
  Stahp:
	TNT1 A 2;
	Stop;
  }
}
Class DCY_ObliterationBFGEffect2Blu : DCY_ObliterationBFGEffect2
{
  States
  {
  Spawn:
    EF1_ C 0;
	EF1_ C 0 A_JumpIf(Alpha <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_JumpIf(Scale.X <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_JumpIf(Scale.Y <= 0.0000000000000001, "Stahp");
	EF1_ C 0 A_FadeOut(0.0010, 0);
	EF1_ C 0 A_ChangeVelocity(frandom(-0.4, 0.4), frandom(-0.4, 0.4), frandom(-0.4, 0.4), CVF_RELATIVE);
	EF1_ C 0 A_SetScale(Scale.X-0.05, Scale.Y-0.05);
	EF1_ C 1;
	Loop;
  Stahp:
	TNT1 A 2;
	Stop;
  }
}

//Venerated Truncheon
Class DCY_VeneratedTruncheon : Weapon
{
  Default
  {
  Tag "Venerated Truncheon";
  Inventory.PickupMessage "Now, you hold the seraph-powered \c[White]Venerated Truncheon\cL. Where did this even come from anyways??";
  Obituary "%o was incinerated in a sacred death by %k's Venerated Truncheon.";
  Weapon.AmmoType "DCY_Eminence";
  Weapon.AmmoGive 100;
  Weapon.AmmoUse 0;
  Weapon.Kickback 50;
  Weapon.SlotNumber 8;
  Weapon.BobStyle "Alpha";
  Weapon.BobRangeX 0.45;
  Weapon.BobRangeY 0.25;
  Weapon.BobSpeed 1.45;
  Weapon.UpSound "VeneratedTruncheon/Up";
  Inventory.PickupSound "VeneratedTruncheon/Pickup";
  +WEAPON.BFG;
  +WEAPON.NOAUTOFIRE;
  +WEAPON.NOAUTOAIM;
  +FLOORCLIP;
  +FLOATBOB;
  }
  
  action void A_TruncheonBeam()
  {
	A_FireProjectile("DCY_VeneratedLaserBeam", frandom(-10.0, 10.0), 0);
	A_QuakeEx(3, 3, 3, 15, 0, 1000, "", QF_SCALEDOWN, falloff: 1600);
	invoker.DepleteAmmo(invoker.bAltFire, true);
	A_WeaponOffset(frandom(-2.5, 2.5), frandom(32.5, 35.5), WOF_INTERPOLATE);
  }
  
  int venerated;
  
  States
  {
  Spawn:
    LTBR A 0 A_Jump(2, "Ambient");
    LTBR AAAAAAAAAA 1;
	Loop;
  Ambient:
	LTBR A 0 A_StartSound("HOLYSTF1", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.35);
	Goto Spawn;
  Select:
	LTBS ABC 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	LTBS CBA 1 A_WeaponOffset(0, 32);
	TNT1 A 0 A_Lower();
	Wait;
  Ready:
    LTBR BCDE 2 A_WeaponReady(WRF_ALLOWRELOAD);
	Loop;
  Reload:
	LTBR B 0
	{
		A_SetBlend("White", 0.5, 10);
		A_StartSound("VeneratedTruncheon/Switch", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.75);
		if(invoker.venerated == 0)
			Return ResolveState("Reload2");
		else if(invoker.venerated == 1)
			Return ResolveState("Reload1");
		Return ResolveState("Null");
	}
	Goto Reload2;
  Reload1:
	LTBR B 0
	{
		invoker.venerated = 0;
		DCY_notHudMessageHandler.WaggleMsg("SMALLFONT", "Venerated Beam", (240, 150), (480, 360), color: Font.CR_WHITE, time: (0.3, 2, 1), speed: 0.25, strength: 1.0, frequency: 1.0, id: 78);
	}
	LTBR BONMMN 4 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOFIRE|WRF_NOSWITCH);
	Goto Ready;
  Reload2:
	LTBR B 0
	{
		invoker.venerated = 1;
		DCY_notHudMessageHandler.WaggleMsg("SMALLFONT", "Divine Sun", (240, 150), (480, 360), color: Font.CR_WHITE, time: (0.3, 2, 1), speed: 0.25, strength: 1.0, frequency: 1.0, id: 78);
	}
	LTBR BONMMN 4 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOFIRE|WRF_NOSWITCH);
	Goto Ready;
  Fire:
	LTBR B 0
	{
		if(invoker.venerated == 0)
			Return ResolveState("Fire1");
		else if(invoker.venerated == 1)
			Return ResolveState("Fire2");
		Return ResolveState("Null");
	}
	Goto Fire1;
  Fire1:
	LTBR F 4 A_StartSound("VeneratedTruncheon/LaserCharge", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.5);
    LTBR GH 4;
	LTBR H 0 A_SetBlend("White", 0.75, 15);
	LTBR H 0 A_QuakeEx(3, 3, 3, 20, 0, 800, "", QF_SCALEUP, 0, 0, 0, 1500);
	LTBR P 0 A_StartSound("VeneratedTruncheon/Ball/Fire", CHAN_5, CHANF_DEFAULT, 1.0, 0.45);
	Goto Hold1;
  Hold1:
	LTBR P 1 A_TruncheonBeam();
	LTBR P 0 A_Refire("Hold2");
	Goto StopFiring;
  Hold2:
	LTBR P 1 A_TruncheonBeam();
	LTBR P 0 A_Refire("Hold3");
	Goto StopFiring;
  Hold3:
	LTBR Q 1 A_TruncheonBeam();
	LTBR Q 0 A_Refire("Hold4");
	Goto StopFiring;
  Hold4:
	LTBR Q 1 A_TruncheonBeam();
	LTBR Q 0 A_Refire("Hold5");
	Goto StopFiring;
  Hold5:
	LTBR H 1 A_TruncheonBeam();
	LTBR H 0 A_Refire("Hold6");
	Goto StopFiring;
  Hold6:
	LTBR H 1 A_TruncheonBeam();
	LTBR H 0 A_Refire("Hold7");
	Goto StopFiring;
  Hold7:
	LTBR I 1 A_TruncheonBeam();
	LTBR Q 0 A_Refire("Hold8");
	Goto StopFiring;
  Hold8:
	LTBR I 1 A_TruncheonBeam();
	LTBR Q 0 A_Refire("Hold1");
	Goto StopFiring;
  StopFiring:
    LTBR G 0;
	LTBR G 0 A_StartSound("VeneratedTruncheon/LaserSpawn", CHAN_WEAPON, CHANF_DEFAULT, 1.0, 0.5);
    LTBR GFEDC 4 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	Goto Ready;
  Fire2:
    LTBR F 0;
    LTBR FGHIJ 4;
	LTBR K 5
	{
		A_SetBlend("White", 0.75, 15);
		A_Quake(4, 15, 0, 600, "");
		A_Quake(2, 18, 0, 800, "");
		A_Quake(1, 21, 0, 1000, "");
		A_GunFlash();
		A_StartSound("VeneratedTruncheon/Ball/Fire", CHAN_5, CHANF_DEFAULT, 1.0, 0.45);
		A_FireProjectile("DCY_VeneratedSpheroid", 0, 0);
		invoker.DepleteAmmo(Invoker.AltFire, true);
	}
	LTBR KLMNOR 5;
	Goto Ready;
  Flash:
    TNT1 A 0;
	TNT1 A 1 A_Light1();
	TNT1 A 3 A_Light2();
	TNT1 A 2 A_Light0();
	Goto LightDone;
  }
}

Class DCY_VeneratedLaserBeam : FastProjectile
{
  Default
  {
  Damage 15;
  Radius 12;
  Height 12;
  Speed 222;
  DamageType "Holy";
  RenderStyle "Add";
  XScale 0.6;
  YScale 0.45;
  SeeSound "VeneratedTruncheon/LaserShoot";
  DeathSound "NeonicLaser/Fire";
  Translation "0:255=%[0.00,0.00,0.00]:[1.01,1.01,1.01]";
  +BRIGHT;
  +RIPPER;
  +FORCERADIUSDMG;
  +NOEXTREMEDEATH;
  +DONTRIP;
  }
  States
  {
  Spawn:
	TRAC B 1
	{
		for (int i = 2; i > 0; i--)
			A_SpawnParticle(0xffffff, SPF_FULLBRIGHT|SPF_RELATIVE, random(10, 35), random(10, 15), frandom(0, 360), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), sizestep: -0.625);
	}
	Loop;
  Death:
	TNT1 A 1
	{
		A_Explode(100, 100, 0, 1);
		A_SpawnItemEx("DCY_WFlame", flags: SXF_TRANSFERTRANSLATION);
		
		for (int i = 12; i > 0; i--)
			A_SpawnParticle(0xffffff, SPF_FULLBRIGHT, random(40, 55), 10, frandom(0, 360), frandom(-7.5, 7.5), frandom(-7.5, 7.5), frandom(-7.5, 7.5), frandom(-6.0, 6.0), frandom(-6.0, 6.0), frandom(0.5, 11.4), accelz: -0.85, fadestepf: 0, sizestep: -0.425);
	}
	Stop;
  }
}

Class DCY_VeneratedLaserTrail : Actor
{
  Default
  {
  Radius 0;
  Height 0;
  Alpha 0.1;
  RenderStyle "Add";
  Scale 0.5;
  +THRUACTORS;
  +NOINTERACTION;
  +NOCLIP;
  +BRIGHT;
  }
  States
  {
  Spawn:
    EF2_ B 0;
	EF2_ B 0 A_JumpIf(Scale.X <= 0.0000000001, "Stahp");
	EF2_ B 0 A_JumpIf(Alpha <= 0.0000000001, "Stahp");
	EF2_ B 0 A_SetScale(Scale.X-0.005, Scale.X-0.005);
	EF2_ B 1 A_FadeOut(0.0025, 0);
	Loop;
  Stahp:
    TNT1 A 2;
	Stop;
  }
}

Class DCY_VeneratedLaserTrail2 : DCY_VeneratedLaserTrail
{
  Default
  {
  Alpha 0.8;
  Scale 0.15;
  }
  States
  {
  Spawn:
    EF2_ B 0;
	EF2_ B 0 A_JumpIf(Scale.X <= 0.0000000001, "Stahp");
	EF2_ B 0 A_JumpIf(Alpha <= 0.0000000001, "Stahp");
	EF2_ B 0 A_SetScale(Scale.X-0.035, Scale.X-0.035);
	EF2_ B 0 A_ChangeVelocity(0, 0, -2);
	EF2_ B 1 A_FadeOut(0.005, 0);
	Loop;
  }
}

Class DCY_VeneratedLaserTrail3 : DCY_VeneratedLaserTrail
{
  Default
  {
  Alpha 0.01;
  Scale 1.0;
  }
  States
  {
  Spawn:
    EF1_ A 0;
	EF1_ A 0 A_JumpIf(Scale.X <= 0.0000000001, "Stahp");
	EF1_ A 0 A_JumpIf(Alpha <= 0.0000000001, "Stahp");
	EF1_ A 0 A_SetScale(Scale.X-0.05, Scale.X-0.05);
	TNT1 A 0 A_ChangeVelocity(random(-2, 2), random(-2, 2), random(-2, 2));
	EF1_ A 1 A_FadeOut(0.0005, 0);
	Loop;
  Stahp:
    TNT1 A 2;
	Stop;
  }
}

Class DCY_VeneratedSpheroid : CacodemonBall
{
  Default
  {
  SeeSound "VeneratedTruncheon/Ball/Fire";
  DeathSound "VeneratedTruncheon/Ball/Explode";
  Damage 100;
  BounceType "Hexen";
  BounceCount 14;
  BounceFactor 1.0;
  WallBounceFactor 1.0;
  Radius 55;
  Height 55;
  Speed 35.5;
  DamageType "Holy";
  Translation "0:255=%[0.00,0.00,0.00]:[1.74,1.74,1.74]";
  +RIPPER;
  +NOEXTREMEDEATH;
  +CANBOUNCEWATER;
  +BOUNCEONWALLS;
  +BOUNCEONCEILINGS;
  +FORCERADIUSDMG;
  +NEVERFAST;
  +BRIGHT;
  }
  
  void A_VTrail()
  {
	for (int i = 23; i > 0; i--)
	{
		A_SpawnItemEx("DCY_VeneratedLaserTrail3", random(-45, 45), random(-45, 45), random(-45, 45), random(-5, 5), random(-5, 5), random(5, 9), random(0, 360), SXF_NOCHECKPOSITION, 30);
	}
		
	for (int i = 7; i > 0; i--)
	{
		A_SpawnItemEx("DCY_VeneratedSpheroidTrail", random(-28, 18), random(-28, 28), random(-28, 28), 0, 0, 0, random(0, 360), SXF_NOCHECKPOSITION, 30);
	}
  }
  
  void A_VXplode()
  {
	for (int i = 23; i > 0; i--)
	{
		A_SpawnItemEx("DCY_VeneratedLaserTrail2", random(-18, 18), random(-18, 18), random(-18, 18), random(-5, 5), random(-5, 5), random(5, 9), random(0, 360), SXF_NOCHECKPOSITION, 30);
	}
	
	A_Explode(5000, 500, XF_NOTMISSILE, 1);
	A_Explode(2500, 1000, XF_NOTMISSILE, 1);
	A_Explode(500, 2000, XF_NOTMISSILE, 1);
	A_Explode(100, 3000, XF_NOTMISSILE, 1);
	A_StopSound(CHAN_5);
	A_QuakeEx(4, 4, 4, 100, 0, 555, "", QF_SCALEDOWN, falloff: 1111, rollintensity: 0.5, rollwave: frandom(-0.5, 0.5));
  }
  
  States
  {
  Spawn:
	TNT1 A 0 NoDelay A_StartSound("VeneratedTruncheon/Ball/Idle", CHAN_5, CHANF_LOOPING|CHANF_DEFAULT, 1.0, 0.6);
	TNT1 AAA 1
	{
		A_VTrail();
		A_VTrail();
	}
	Goto Spawn+1;
  Death:
    TNT1 A 0 A_VXplode();
	YT9D AAABBBCCCDDDEEE 1
	{
		A_SpawnItemEx("DCY_VeneratedSpheroidExplode", 0, 0, 0, random(-36, 36), random(-36, 36), random(-36, 36), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_VeneratedSpheroidExplode", 0, 0, 0, random(-36, 36), random(-36, 36), random(-36, 36), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_VeneratedSpheroidExplode", 0, 0, 0, random(-36, 36), random(-36, 36), random(-36, 36), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_VeneratedSpheroidExplode", 0, 0, 0, random(-36, 36), random(-36, 36), random(-36, 36), random(0, 360), SXF_NOCHECKPOSITION);
	}
	Stop;
  }
}

Class DCY_VeneratedSpheroidTrail : DCY_VeneratedLaserTrail
{
  Default
  {
  Scale 1.5;
  Alpha 0.15;
  }
  States
  {
  Spawn:
    TNT1 A 0;
	TNT1 A 0 A_Jump(192, "Spawn1", "Spawn2", "Spawn3", "Spawn4", "Spawn5");
	TNT1 A 0 A_Jump(192, "Spawn0", "Spawn1", "Spawn2", "Spawn3", "Spawn4", "Spawn5");
	Goto Spawn0;
  Spawn0:
    TNT1 A 0;
	AVTE ABCDEFABCD 1 A_FadeOut(0.025, 0);
	Stop;
  Spawn1:
    TNT1 A 0;
	AVTE DCBAFEDCBA 1 A_FadeOut(0.025, 0);
	Stop;
  Spawn2:
    TNT1 A 0;
	AVTE CDEFABCDEF 1 A_FadeOut(0.025, 0);
	Stop;
  Spawn3:
    TNT1 A 0;
	AVTE EFABCDEFAB 1 A_FadeOut(0.025, 0);
	Stop;
  Spawn4:
    TNT1 A 0;
	AVTE DEFABCDEFA 1 A_FadeOut(0.025, 0);
	Stop;
  Spawn5:
    TNT1 A 0;
	AVTE BCEFABCDEF 1 A_FadeOut(0.025, 0);
	Stop;
  }
}

Class DCY_VeneratedSpheroidExplode : DCY_VeneratedLaserTrail
{
  Default
  {
  Scale 2.0;
  Alpha 0.25;
  Translation "0:255=%[0.00,0.00,0.00]:[1.51,1.51,1.51]";
  }
  States
  {
  Spawn:
    SFE1 ABCDEF 5 A_FadeOut(0.15, 0);
	Stop;
  }
}