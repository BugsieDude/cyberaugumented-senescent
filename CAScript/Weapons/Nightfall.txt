Class DCY_Minigun : DCY_Weapon
{
  Default
  {
	Weapon.SelectionOrder 700;
	Tag "Nightfall Augumented";
	Inventory.PickupSound "dcy/rocketpickup";
	Inventory.PickupMessage "You got the Nightfall! It's about to get chaotic in there. Is it? I don't know.";
	Weapon.SlotNumber 4;
	+FLOORCLIP;
	+DONTGIB;
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 20;
	Weapon.AmmoType "Clip";
	Weapon.SelectionOrder 600;
  }
  
  bool laser;
  
  action void A_Minigun()
  {
	invoker.DepleteAmmo(invoker.bAltFire, true);
	A_GunFlash();
	
	if (invoker.laser)
	{
		A_FireProjectile(CountInv("DCY_EmphasisPower") ? "DCY_Blastawave" : "DCY_MechaZombiePlasma2", frandom(-1.2, 1.2), 0);
		A_StartSound(CountInv("DCY_EmphasisPower") ? "Minigun/EmphasisLoop" : "Android/Laser", CHAN_5, CHANF_DEFAULT, 1.0, startTime: CountInv("DCY_EmphasisPower") ? frandom(0, 0.1) : 0);
		A_WeaponOffset(CountInv("DCY_EmphasisPower") ? frandom(-3.0, 3.0) : frandom(-4.0, 4.0), CountInv("DCY_EmphasisPower") ? frandom(31.0, 36.0) : frandom(31.0, 38.0), 0);
	}
	else
	{
		A_StartSound("Minigun/Loop", CHAN_WEAPON, CHANF_LOOPING, volume: 0.65);
		A_QuakeEx(1, 1, 1, 20, 0, 100, "none", QF_SCALEDOWN, falloff: 200);
		A_FireBullets(0.75, 0.75, 1, 10, "DCY_Effect", FBF_NORANDOM, 8192, "DCY_TracerPlayer", 0);
		A_WeaponOffset(frandom(-3.0, 3.0), frandom(31.0, 36.0));
	}
	
	A_WeaponReady(WRF_NOFIRE);
  }
  
  States
  {
  Spawn:
	CH_G Z -1;
	Stop;
  Select:
	CHG_ WXY 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	CHG_ Y 0;
	CHG_ Y 0 A_StopSound(CHAN_WEAPON);
	CHG_ YXW 1 A_WeaponOffset(0, 32);
	TNT1 A 0 A_Lower;
	Wait;
  Ready:
	CHG_ A 1 A_WeaponReady(WRF_ALLOWZOOM);
	Loop;
  /*Fire:
	CHG_ A 0 A_StartSound("Minigun/WindUp", CHAN_WEAPON, volume: 0.75);
	CHG_ AAABBBCCDDAABCD 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	Goto Fire1;*/
  Fire:
	CHG_ F 0;
	CHG_ F 1 Bright
	{
		If(invoker.laser)
			Return ResolveState("LaserFire");
			
		A_Minigun();
		Return ResolveState(null);
	}
	CHG_ H 1 Bright
	{
		A_WeaponOffset(frandom(-4.0, 4.0), frandom(31.0, 36.0));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ H 0 Bright A_Refire("Fire2");
	Goto FireDone;
  Fire2:
	CHG_ E 0;
	CHG_ E 1 Bright A_Minigun();
	CHG_ G 1 Bright
	{
		A_WeaponOffset(frandom(-4.0, 4.0), frandom(31.0, 36.0));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ G 0 Bright A_Refire("Fire");
	Goto FireDone;
  LaserFire:
	CHG_ I 0;
	CHG_ I 1 Bright A_Minigun();
	CHG_ JK 1 Bright
	{
		A_WeaponOffset(frandom(-1.35, 1.35), frandom(31.5, 34.5));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ L 0 Bright A_Refire("LaserFire2");
	Goto FireDone;
  LaserFire2:
	CHG_ L 1 Bright A_Minigun();
	CHG_ IJ 1 Bright
	{
		A_WeaponOffset(frandom(-1.35, 1.35), frandom(31.5, 34.5));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ J 0 Bright A_Refire("LaserFire3");
	Goto FireDone;
  LaserFire3:
	CHG_ K 1 Bright A_Minigun();
	CHG_ LI 1 Bright
	{
		A_WeaponOffset(frandom(-1.35, 1.35), frandom(31.5, 34.5));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ I 0 Bright A_Refire("LaserFire4");
	Goto FireDone;
  LaserFire4:
	CHG_ J 1 Bright A_Minigun();
	CHG_ KL 1 Bright
	{
		A_WeaponOffset(frandom(-1.35, 1.35), frandom(31.5, 34.5));
		A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
	}
	CHG_ L 0 Bright A_Refire("LaserFire");
	Goto FireDone;
  FireDone:
	CHG_ A 1
	{
		A_StopSound(CHAN_WEAPON);
		
		if (!CountInv("DCY_RadiationMitrailleuseInv"))
			A_StartSound("Minigun/WindDown", CHAN_WEAPON, volume: 0.75, pitch: 1.1, startTime: 0.1);
		
		A_WeaponReady();
	}
	CHG_ BCDAABBCCDDAAABBBCCCCDDDDAAAAABBBBBCCCCCCCCDDDDDDDDA 1 A_WeaponReady(WRF_ALLOWZOOM);
	Goto Ready;
  Zoom:
	CHG_ A 1;
	CHG_ AABBC 1
	{
		A_WeaponOffset(0, 0.5, WOF_INTERPOLATE|WOF_ADD);
		A_StartSound("WEPRED2", CHAN_6, 0, 1.0);
	}
	CHG_ D 5;
	CHG_ DDDDD 1 A_WeaponOffset(0, -0.5, WOF_INTERPOLATE|WOF_ADD);
	CHG_ A 2 { invoker.laser = !invoker.laser; }
	Goto Ready;
  Flash:
	TNT1 A 1 A_Light1();
	Goto LightDone;
  }
}

Class DCY_RadiationMitrailleuseInv : Inventory { Default { Inventory.Amount 1; Inventory.MaxAmount 1; +INVENTORY.UNDROPPABLE; +INVENTORY.UNTOSSABLE; } }