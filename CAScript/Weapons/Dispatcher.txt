Class DCY_RehauledPlasmaRifle : DCY_Weapon
{
  Default
  {
	Tag "Dispatcher of Delusions - Mk.2 Corps Z10";
	Weapon.AmmoGive 40;
	Weapon.AmmoUse 1;
	Inventory.PickupMessage "You picked up the Dispatcher of Delusions! Let's make some barbecue.";
	Weapon.SelectionOrder 100;
	Weapon.SlotNumber 6;
	Weapon.AmmoType "Cell";
	Obituary "%o got fried into blue-colored dust by $k's Dispatcher of Delusions.";
	Inventory.PickupSound "dcy/plasmariflepickup";
  }
  
  action void A_Plasmatic()
  {
	if (player == null) return;
	
	Weapon weap = player.ReadyWeapon;
	if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
	{
		if (!weap.DepleteAmmo (weap.bAltFire, true, 1)) return;
		
		State flash = weap.FindState('Flash');
		if (flash != null) player.SetSafeFlash(weap, flash, random[FirePlasma]()&1);
		
	}
	
	A_WeaponOffset(frandom(-2.5, 2.5), frandom(31, 36), WOF_INTERPOLATE);
	SpawnPlayerMissile("DCY_RehauledPlasma");
  }
  
  States
  {
  Spawn:
	PLS_ Z -1;
	Stop;
  Select:
	PLG_ WXY 1 A_WeaponReady(WRF_NOFIRE);
	Goto Ready;
  Deselect:
	PLG_ YXW 1 A_WeaponOffset(0, 32);
	TNT1 A 0 A_Lower();
	Wait;
  Ready:
	PLG_ A 1 A_WeaponReady();
	Loop;
  Fire:
	PLG_ BCD 1;
	Goto FireLoop;
  FireLoop:
	PLG_ E 1 Bright A_Plasmatic();
	PLG_ FG 1 Bright A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY|WRF_NOBOB);
	PLG_ E 0 A_Refire("FireLoop");
	Goto FireDone;
  FireDone:
	PLG_ HI 1 Bright A_Refire("FireLoop");
	Goto Ready;
  Flash:
	TNT1 A 2 Bright A_Light1();
	Goto LightDone;
  }
}

Class DCY_EmissionTracer : DCY_MechaZombiePlasma
{
  Default
  {
  Damage 5;
  SeeSound "RPLSFIR";
  DeathSound "RPLSPIM";
  DamageType "Neonic";
  Speed 100;
  +NEVERFAST
  +RANDOMIZE
  Scale .3275;
  }
  
  States
  {
  Spawn:
	TRAC F 1;
	Loop;
  Death:
  XDeath:
	TNT1 A 1;
	TNT1 A 1
	{
		A_Explode(25, 200, XF_NOTMISSILE, 1);
		A_QuakeEx(2, 2, 2, 20, 0, 100, flags: QF_SCALEDOWN);
		A_SpawnItemEx("DCY_EmissionSphere", flags: SXF_NOCHECKPOSITION);
		
		for (int i = 10; i > 0; i--)
			A_SpawnItemEx("DCY_RedAndroidPuffSpark", 0, 0, 0, frandom(4.0, 14.5), 0, Pitch+frandom(2.0, 8.0)+frandom(3.0, -3.0), frandom(-50.0, 50.0)+180, SXF_NOCHECKPOSITION, 28);
	}
	Stop;
  }
}