Class DCY_HeirloomSlowdown : Inventory
{
  default
  {
  +INVENTORY.AUTOACTIVATE
  }
  
  state slowstate;
  double defSpeed;
  override void AttachToOwner(actor other) {
    if (!other.bISMONSTER) {
      return;
	}
    super.AttachToOwner(other);
    if (owner)
      defSpeed = owner.speed; //record their speed
    speed *= 0.5;
  }
  override void DoEffect() {
    super.DoEffect();
    for (int i = 7; i >= 0; i--) //lower pitch of the 7 primary sound channels
      owner.A_SoundPitch(i,0.8);
    if (owner.CurState != slowstate) { //make sure you only change their animation speed once
      owner.A_SetTics(owner.tics*1.5);
      slowstate = Owner.CurState;
    }
  }
  override void DetachFromOwner() {
    if (owner)
      owner.speed = defSpeed; //restore speed
    super.DetachFromOwner();
  }
}