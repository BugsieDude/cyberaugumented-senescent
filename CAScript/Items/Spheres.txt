Class DCY_UltrapissSoulSphere : Health
{
  Default
  {
  +FLOATBOB
  +BRIGHT
  +COUNTITEM
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.FANCYPICKUPSOUND
  Inventory.PickupSound "SoulSphere/PickedUp";
  Inventory.PickupMessage "\c[Blue]Soulsphere\c-! (200+ Health)";
  RenderStyle "Add";
  Inventory.Amount 100;
  Inventory.MaxAmount 200;
  Inventory.PickupFlash "DCY_SoulSphereRingThing";
  }
  
  States
  {
  Spawn:
	SOUL AABBCCDD 1 Bright A_SpawnItemEx("DCY_SoulSphereAura", random(-1, 1), random(-1, 1), random(19, 23), random(-1, 1), random(-1, 1), random(-1, 1), 0, SXF_NOCHECKPOSITION);
	Loop;
  }
  
  override bool Use(bool pickup)
  {
	Owner.GiveBody(100,200);
	Owner.A_SetBlend("Blue", 0.5, 20);
	return true;
  }
}

Class DCY_UltrapissMegaSphere : CustomInventory
{
  Default
  {
  +FLOATBOB
  +BRIGHT
  +COUNTITEM
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.FANCYPICKUPSOUND
  Inventory.Amount 200;
  Inventory.MaxAmount 200;
  Inventory.PickupSound "Doom4/Megasphere";
  Inventory.PickupMessage "\c[Yellow]Megasphere\c-! (200+ Health and Armor)";
  RenderStyle "Add";
  Inventory.Icon "MEGAA0";
  Inventory.PickupFlash "DCY_MegaSphereRingThing";
  }
  
  States
  {
  Spawn:
	MEGA AABBCCDD 1 Bright A_SpawnItemEx("DCY_MegaSphereAura", random(-1, 1), random(-1, 1), random(19, 23), random(-1, 1), random(-1, 1), random(-1, 1), 0, SXF_NOCHECKPOSITION);
	Loop;
  Pickup:
	MEGA A 0
	{
		A_GiveInventory("BlueArmorforMegasphere");
		A_GiveInventory("MegasphereHealth");
		A_SetBlend("White", 0.5, 20, "Yellow");
	}
	Stop;
  }
}

Class DCY_UncoSphere : CustomInventory
{
  Default
  {
  +COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.BIGPOWERUP
  +INVENTORY.FANCYPICKUPSOUND
  +FLOATBOB
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.00]:[0.64,0.64,1.29]";
  Scale 1.3;
  Inventory.PickupMessage "\c[Purple]Unco Sphere\c-! (250+ Health and Armor)";
  Inventory.PickupSound "Souffle";
  Inventory.PickupFlash "DCY_UncoRingThing";
  }
  
  States
  {
  Spawn:
    PDFS AABBCCDD 1 Bright A_SpawnItemEx("DCY_UncoAura", random(-1, 1), random(-1, 1), random(26, 29), random(-1, 1), random(-1, 1), random(-1, 1), 0, SXF_NOCHECKPOSITION);
	Loop;
  Pickup:
	PDFS A 0
	{
		A_GiveInventory("DCY_UncoShield");
		A_GiveInventory("DCY_UncoHealth");
	}
	Stop;
  }
}

Class DCY_UncoHealth : Health
{
  Default
  {
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  -COUNTITEM;
  Scale 1.3;
  DamageFactor "Normal", 0.75;
  Inventory.Amount 250;
  Inventory.MaxAmount 400;
  Inventory.Icon "PDFS[0";
  Inventory.PickupMessage "";
  Inventory.PickupSound "";
  }
  
  States
  {
  Spawn:
    PDFS ABCD 2 Bright;
    Loop;
  }
}

Class DCY_UncoShield : BasicArmorPickup
{
  Default
  {
  Inventory.PickupMessage "";
  +INVENTORY.QUIET;
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  DamageFactor "Normal", 0.75;
  Inventory.Icon "PDFS[0";
  Armor.SavePercent 250;
  Armor.SaveAmount 400;
  }
  
  States
  {
  Spawn:
    PDFS ABCD 2 Bright;
    Loop;
  }
}

Class DCY_UltrapissInvulnerability : InvulnerabilitySphere Replaces InvulnerabilitySphere
{
  Default
  {
  Powerup.Color "00 80 80", 0.135;
  Inventory.PickupSound "InvulnerabilitySphere/PickedUp";
  Inventory.PickupMessage "Invulnerability! \c[Green]You are indestructable\c-!";
  RenderStyle "Add";
  Alpha 1.0;
  Powerup.Type "DCY_PowerInvulCA";
  +FLOATBOB
  }
  
  States
  {
  Spawn:
	PINV AAABBBCCCDDD 1 Bright A_SpawnItemEx("DCY_InvulSphereAura", random(-1, 1), random(-1, 1), random(19, 23), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), 0, SXF_NOCHECKPOSITION);
	Loop;
  Pickup:
	PINV A 0 A_SetBlend("White", 0.82, 23, "Green");
	Stop;
  }
}

Class DCY_PowerInvulCA : PowerInvulnerable
{
  Default
  {
  Powerup.Duration -30;
  }
  
  Mixin CYPowerup;
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("InvulnerabilitySphere/Warning", "", "66d988", "66d988", true);
  }
}

Class DCY_RadiationSymbol : RadSuit
{
  Default
  {
  +FLOATBOB
  +BRIGHT
  +VISIBILITYPULSE
  RenderStyle "Add";
  Alpha 1.0;
  Inventory.PickupSound "RadiationSphere/PickedUp";
  Inventory.PickupMessage "\c[Green]Radiation Protection\c-";
  }
  
  States
  {
  Spawn:
	BIOS A 1 Bright A_SpawnItemEx("DCY_RadSphereAura", random(-1, 1), random(-1, 1), random(24, 28), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), 0, SXF_NOCHECKPOSITION);
	Loop;
  Pickup:
	SOUL A 0 A_SetBlend("Green", 0.6, 30, "Yellow");
	Stop;
  }
}

Class DCY_Crosscut : CustomInventory
{
  Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 3;
  Inventory.InterHubAmount 3;
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  Inventory.PickupMessage "\c[x1]Crosscut\c-! A portable drain powerup that lasts for 60 seconds.";
  Inventory.PickupSound "LevelUpMaybe";
  Inventory.UseSound "Soin 2";
  RenderStyle "Add";
  Scale 1.25;
  Tag "Crosscut - Portable Drain for 60 seconds.";
  Inventory.Icon "CRCTE0";
  }
  
  States
  {
  Spawn:
	CRCT AABBCCDDCCBBAA 1 Bright A_SpawnItemEx("DCY_CrosscutAura", random(-1, 1), random(-1, 1), random(24, 28), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), 0, SXF_NOCHECKPOSITION);
	Loop;
  Use:
	TNT1 A 32
	{
		A_SetBlend("Yellow", 0.75, 35, "Orange");
		A_GiveInventory("DCY_CrosscutPower", 1);
	}
	TNT1 A 1;
	Stop;
  }
}

Class DCY_CrosscutPower : PowerDrain
{ 
  Mixin CYPowerup;
  
  Default
  {
  Powerup.Strength 0.5;
  Powerup.Duration -60;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("CROSWARN", "CROSEND", "ffa200", "ffa200", true);
  }
}

Class DCY_RazeSpherule : CustomInventory
{ 
  Default
  {
  Inventory.PickupMessage "\c[Purple]Raze\c- everything! (4x Damage)";
  Inventory.PickupSound "Raze/Pickup";
  +INVENTORY.ALWAYSPICKUP
  +VISIBILITYPULSE
  Inventory.PickupFlash "DCY_UncoRingThing";
  RenderStyle "Add";
  }
  
  States
  {
  Spawn:
	RAZ_ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_SpawnItemEx("DCY_UncoAura", frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(29.0, 31.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(2.0, 3.0), random(0, 360), SXF_NOCHECKPOSITION);
    RAZ_ A 1 Bright
	{
		A_SpawnItemEx("DCY_UncoAura", frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(29.0, 31.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(2.0, 3.0), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_RazeSpheruleCircle");
		A_SpawnItemEx("DCY_RazeSpheruleCircle2");
	}
    Loop;
  Pickup:
	TNT1 A 1
	{
		A_QuakeEx(2, 2, 2, 40, 0, 300, "none", QF_SCALEDOWN, 0, 0, 0, 600);
		A_SetBlend("White", 0.85, 30, "Purple");
		A_SetMugshotState("Grin");
		A_GiveInventory("DCY_QuadDamagePower", 1);
	}
    Stop;
  }
}

Class DCY_RazeSpheruleCircle : DCY_Effect
{
  Default
  {
  Radius 0;
  Height 0;
  Translation "0:255=%[0.00,0.00,0.00]:[1.31,0.00,2.00]";
  +FLATSPRITE;
  +FLOORHUGGER;
  +BRIGHT;
  RenderStyle "Add";
  Alpha 0.001;
  Scale 0.25;
  }
  
  States
  {
  Spawn:
	SPE2 A 0 NoDelay
	{
		A_ChangeVelocity(0, 0, -200000000, CVF_REPLACE);
		A_SetRoll(frandom(0.00, 360.00));
		A_SetTranslation("0:255=%[0.00,0.00,0.00]:[1.31,0.00,2.00]");
	}
	SPE2 ABCDE 1 A_FadeIn(0.2, 0);
	SPE2 FGHIJKLMNOPQRSTUVWXYZ 1;
	SP22 ABCDEFGHIJKL 1;
	Stop;
  }
} 

Class DCY_RazeSpheruleCircle2 : DCY_RazeSpheruleCircle
{
  Default
  {
  Scale 0.4;
  }
  
  States
  {
  Spawn:
	SPE2 A 0 NoDelay
	{
		A_ChangeVelocity(0, 0, -200000000, CVF_REPLACE);
		A_SetRoll(frandom(0.00, 360.00));
		A_SetTranslation("0:255=%[0.00,0.00,0.00]:[1.31,0.00,2.00]");
	}
	SPE2 ABCDE 1 A_FadeIn(0.1, 0);
	SPE2 FGHIJKLMNOPQRSTUVWXYZ 1;
	SP22 ABCDEFGHIJKL 1;
	Stop;
  }
}

Class DCY_QuadDamagePower : PowerDamage
{
  Mixin CYPowerup;
  
  Default
  {
  DamageFactor "Normal", 4;
  Powerup.Color "50 00 50", 0.4;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("Raze/Warning", "Raze/End", "7300ff", "7300ff", true);
  }
}

Class DCY_Rehabiliation : Health
{
  Default
  {
  +COUNTITEM
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.FANCYPICKUPSOUND
  +FLOAT
  +FLOATBOB
  RenderStyle "Add";
  Inventory.Amount 150;
  Inventory.MaxAmount 300;
  Inventory.PickupFlash "DCY_RehabiliationRingThing";
  Inventory.PickupMessage "You feel \c[x1]Rehabiliated\c-. (150+ Health)";
  Inventory.PickupSound "D4REGEN1";
  }
  
  States
  {
  Spawn:
    LFSP AABBCCDDCCBB 1 Bright A_SpawnItemEx("DCY_RehabiliationAura", random(-1, 1), random(-1, 1), random(19, 23), random(-1, 1), random(-1, 1), random(-1, 1), 0, SXF_NOCHECKPOSITION);
    Loop;
  }
  
  override bool Use(bool pickup)
  {
	Owner.GiveBody(150, 300);
	Owner.A_SetBlend("Yellow", 0.5, 20);
	return true;
  }
}

Class DCY_Supremacy : Health
{
  Default
  {
  Inventory.PickupSound "StronkSphere/PickedUp";
  Inventory.PickupMessage "You acquired the \c[i0]Supremacy\c-. (160+ Health)";
  +FLOATBOB
  +BRIGHT
  +COUNTITEM
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  +INVENTORY.FANCYPICKUPSOUND
  +FLOAT
  RenderStyle "Add";
  Inventory.Amount 160;
  Inventory.MaxAmount 700;
  Inventory.PickupFlash "DCY_SupremacyRingThing";
  RenderStyle "Add";
  }
  
  States
  {
  Spawn:
	SRJM AAAABBBBCCCCDDDDEEEEFFFF 1 Bright A_SpawnItemEx("DCY_SupremacyAura", random(-1, 1), random(-1, 1), random(23, 28), random(-1, 1), random(-1, 1), random(-1, 1), 0, SXF_NOCHECKPOSITION);
	Loop;
  Pickup:
	TNT1 A 1;
	TNT1 A 1 A_SetBlend("White", 0.35, 30);
	Stop;
  }
  
  override bool Use(bool pickup)
  {
	Owner.GiveBody(150, 700);
	Owner.A_SetBlend("Yellow", 0.5, 20);
	return true;
  }
}

Class DCY_Prospect : CustomInventory
{
  Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 2;
  Inventory.InterHubAmount 2;
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  Inventory.PickupMessage "Defense Essence \c[d8]''Prospect!''\c- ...You called that thing portable invulnerability.";
  Inventory.PickupSound "SPELL10";
  Inventory.UseSound "SPELL16";
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.50]:[2.00,1.01,1.01]";
  Scale 1.1;
  Tag "Prospect - Invulnerability for 7 seconds. But damages enemies instead.";
  Inventory.Icon "_407E0";
  }
  
  States
  {
  Spawn:
	_407 AAABBBCCCDDD 1 Bright A_SpawnItemEx("DCY_ProspectAura", random(-1, 1), random(-1, 1), random(24, 28), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), 0, SXF_NOCHECKPOSITION);
	Loop;
  Use:
	TNT1 A 32
	{
		A_SpawnItemEx("DCY_ProspectRingThing", 0, 0, 30, 0, 0, 0, angle, SXF_NOCHECKPOSITION);
		A_QuakeEx(2, 2, 2, 22, 0, 200, "none", QF_SCALEDOWN);
		A_SetBlend("CB B9 EE", 0.75, 25, "Red");
		A_GiveInventory("DCY_SoundPower", 1);
		A_GiveInventory("DCY_ProspectPower", 1);
		A_GiveInventory("DCY_ReflectivePower", 1);
	}
	TNT1 A 1;
	Stop;
  }
}

Class DCY_ProspectPower : PowerInvulnerable { Default { Powerup.Duration -7; Powerup.Color "65 10 90", 0.075; } }
Class DCY_SoundPower : PowerProtection { Default { Powerup.Duration -7; ActiveSound "SPELL04"; +PIERCEARMOR; DeathSound "SPELL02"; DamageFactor "Normal", 1.0; -DONTBLAST -DONTMORPH -DONTRIP -DONTSQUASH -NOPAIN -NORADIUSDMG -NOTELEOTHER } }
Class DCY_ReflectivePower : PowerReflection { Default { Powerup.Duration -7; } }