Class DCY_Infrared : Infrared
{
  Default
  {
  Inventory.PickupMessage "Right now, you're wearing the Light Amplification Visor. Night vision is real.";
  Tag "Global Vision NG-80 Triple Eyed Visor";
  Inventory.PickupSound "dcy/visor";
  }
  
  States
  {
  Spawn:
    PV1S ABCB 5;
    Loop;
  }
}

Class DCY_Palisade : DCY_InvItem
{
  Default
  {
  Inventory.PickupMessage "You must be safe.";
  Inventory.PickupSound "misc/ring_pkup";
  Inventory.UseSound "misc/ring_pkup";
  Inventory.Amount 1;
  Inventory.MaxAmount 3;
  Inventory.InterHubAmount 3;
  Scale 1.25;
  Tag "Palisade - Portable Resistance for 40 seconds.";
  Inventory.Icon "0RSRI0";
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  }
  
  States
  {
  Spawn:
	0RSR AABBCCDDEEFFGGHH 1;
	Loop;
  Use:
	TNT1 A 32
	{
		A_SetBlend("Cyan", 0.5, 25, "Blue");
		A_GiveInventory("DCY_PalisadePower", 1);
	}
	TNT1 A 1;
	Stop;
  }
}

Class DCY_PalisadePower : PowerProtection
{
  Mixin CYPowerup;
  
  Default
  {
  DamageFactor "Normal", 0.625;
  Powerup.Duration -40;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("PALIWARN", "PALIEND", "00c8ff", "00c8ff", false);
  }
}

Class DCY_Deterrence : DCY_InvItem
{
  Default
  {
  Inventory.PickupMessage "Say hello to self medical care!";
  Inventory.PickupSound "REGEN01";
  Inventory.UseSound "REGEN02";
  Inventory.Amount 1;
  Inventory.MaxAmount 3;
  Inventory.InterHubAmount 3;
  Scale 1.25;
  Tag "Deterrence - Portable Regeneration for 1 minute.";
  Inventory.Icon "SPDSF0";
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  }
  
  States
  {
  Spawn:
	SPDS AAABBBCCCDDDEEE 1;
	Loop;
  Use:
	TNT1 A 32
	{
		A_SetBlend("White", 0.5, 45, "Green");
		A_GiveInventory("DCY_DeterrencePower", 1);
	}
	Stop;
  }
}

Class DCY_DeterrencePower : PowerRegeneration
{
  Mixin CYPowerup;
  
  Default
  {
  DamageFactor "Normal", 0.925;
  Powerup.Strength 15;
  Powerup.Duration -60;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("DETEWARN", "RUNE03", "ffff00", "73ff00", true);
  }
}

Class DCY_Barricade : DCY_InvItem
{
  Default
  {
  Inventory.PickupMessage "Gadget made for weapons. Enhances weapons with no limits.";
  Inventory.PickupSound "ITEMGET";
  Inventory.UseSound "DSGETPO2";
  Inventory.Amount 1;
  Inventory.MaxAmount 3;
  Inventory.InterHubAmount 3;
  Scale 1.25;
  Tag "Barricade - Portable Infinite Ammo for 12 seconds.";
  Inventory.Icon "ERKOF0";
  +FLOATBOB
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  }
  
  States
  {
  Spawn:
	ERKO AABBCCDDEE 1;
	Loop;
  Use:
	TNT1 A 25
	{
		A_SetBlend("Red", 0.5, 25);
		A_GiveInventory("DCY_BarricadePower", 1);
	}
	Stop;
  }
}

Class DCY_BarricadePower : PowerInfiniteAmmo
{
  Mixin CYPowerup;
  
  Default
  {
  DamageFactor "Normal", 0.925;
  Powerup.Strength 15;
  Powerup.Color "e7 37 58", 0.15;
  Powerup.Duration -12;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("ITEMWARN", "", "ff7700", "ba4727", true);
  }
}

Class DCY_AllMap : AllMap
{
  Default
  {
  Inventory.PickupSound "AllMap/PickedUp";
  ActiveSound "AllMap/Loop";
  Tag "Advanced GPU";
  Inventory.PickupMessage "\c[Orange]You can see where you are right now.\c-";
  }
  
  States
  {
  Spawn:
	MAYY ABCDCB 6 A_LoopActiveSound();
	Loop;
  Pickup:
	MAYY A 0 Bright A_StopSound(CHAN_BODY);
	Stop;
  }
}

Class DCY_VesticalAbettance : DCY_InvItem
{
  Default
  {
  +COUNTITEM
  +NOTIMEFREEZE
  +INVENTORY.BIGPOWERUP
  +INVENTORY.FANCYPICKUPSOUND
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  Inventory.Amount 1;
  Inventory.MaxAmount 4;
  Inventory.InterHubAmount 4;
  Inventory.Icon "VTCPE0";
  Scale 0.765;
  Tag "Abettance - Portable Megasphere.";
  Inventory.PickupMessage "You stumbled apon a portable defence and health kit.";
  Inventory.PickupSound "SPELL05";
  }
  
  string information;
  
  static const string messages[] =
  {
	"Things feel better now.",
	"Life has improved.",
	"There we go.",
	"Now you're all new.",
	"This ain't your ordinary medkit.",
	"May your woes be few and your days be many.",
	"All set."
  };
  
  string messagenum;
  States
  {
  Spawn:
    VTCP ABCDCB 3;
	Loop;
  Pickup:
	Stop;
  Use:
	TNT1 A 1
	{
		invoker.information = "(100+ Health & 100+ Armor)";
		invoker.messagenum = invoker.messages[random(0, invoker.messages.Size() - 1)];
		A_GiveInventory("DCY_VesticalHealth");
		A_GiveInventory("DCY_VesticalShield");
		A_SetBlend("White", 0.7, 30, "Orange");
		A_StartSound("D4REGEN2", CHAN_ITEM);
		A_Log("\c+"..invoker.messagenum.."\c- "..invoker.information);
	}
	Stop;
  }
}

Class DCY_VesticalHealth : Health
{
  Default
  {
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  -COUNTITEM;
  Scale 1.3;
  Inventory.Amount 100;
  Inventory.MaxAmount 400;
  Inventory.Icon "VTCPA0";
  Inventory.PickupMessage "...um.";
  Inventory.PickupSound "";
  }
}

Class DCY_VesticalShield : ArmorBonus
{
  Default
  {
  Inventory.PickupMessage "Hey, that's cheatin!";
  +INVENTORY.QUIET;
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Inventory.Icon "VTCPA0";
  Armor.SavePercent 33;
  Armor.SaveAmount 100;
  Armor.MaxSaveAmount 400;
  }
}

Class DCY_Berserk : DCY_Powerup
{
  Default
  {
  Tag "Unending Chaos";
  Inventory.PickupMessage "\c[b6]Power overload corrupts your mind.\c-";
  Inventory.PickupSound "Berserk/Pickup";
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.50,0.00]";
  +FLOATBOB
  DCY_Powerup.EffectColor1 "ff4800";
  DCY_Powerup.LightRadius 70;
  DCY_Powerup.AmbientNoise "Berserk/IdleNoise";
  }
  
  override void Tick()
  {
	super.Tick();
	
	if (DCY_EffectDistance(1500) && !level.isFrozen())
	{
		A_SpawnItemEx("DCY_LemuresAura", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), (!random(0, 1)) ? 0 : frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME, 20);
		A_SpawnItemEx("DCY_Arc", frandom(-self.radius, self.radius), frandom(-self.radius, self.radius), frandom(0, self.height) + 17, frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, 170);
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10) + 25, frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5), (!random(0, 1)) ? 0 : frandom(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE, 180);
	}
	
	alpha = frandom(1.4, 3);
  }
  
  States
  {
  Spawn:
	BSKR AAABBBCCCDDD 1;
	Loop;
  }
  
  override bool Use(bool pickup)
  {
	Owner.GiveBody(100, 200);
	Owner.A_SetBlend("White", 1.0, 25, "Orange");
	Owner.A_QuakeEx(4, 4, 4, 40, 0, 2000, flags: QF_SCALEDOWN, rollintensity: 2.0, rollwave: 0.141);
	
	Owner.A_GiveInventory("DCY_BerserkStrength");
	Owner.A_GiveInventory("DCY_BerserkInvulnerability");
	Owner.A_GiveInventory("DCY_BerserkDamage");
	Owner.A_GiveInventory("DCY_BerserkSpeed");
		
	for (int i = 0; i < 360; i += 12)
	{
		Owner.A_SpawnParticleEx(effectcolor, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT, 60, random(12, 16), i, frandom(20, -20), frandom(-20, 20), frandom(-20, 20) + 36, frandom(-0.1, 0.1) + 3, frandom(-0.1, 0.1), frandom(0.5, 1.5), accelx: -0.1, accelz: 0.025, startalphaf: 0.5, fadestepf: 0.05, sizestep: -0.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		Owner.A_SpawnParticleEx(effectcolor, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 100, 70, i, frandom(20, -20), frandom(-20, 20), frandom(-20, 20) + 36, frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), startalphaf: 0.4, fadestepf: 0.015, sizestep: 0.05, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
	}
	
	return true;
  }
}

Class DCY_BerserkSpeed : PowerSpeed
{
  Mixin CYPowerup;
  
  Default 
  {
  Powerup.Duration -15; 
  Powerup.Color "FF 44 00", 0.15; 
  Speed 1.05;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("Berserk/Warning", "Berserk/End", "ff4800", "ff4800", true);
  }
}

Class DCY_BerserkStrength : PowerStrength { Default { Powerup.Duration -15; } }
Class DCY_BerserkDamage : PowerDamage { Default { DamageFactor "Normal", 1.5; Powerup.Duration -15; } }
Class DCY_BerserkInvulnerability : PowerProtection { Default { Powerup.Duration -15; DamageFactor 0.5; } }

/*Class DCY_Photocoagulator : DCY_InvItem
{
  Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 1;
  Inventory.InterHubAmount 1;
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  Inventory.PickupMessage "As you pick up the monitor, it reads 'Make your bullets bombastic!'.";
  Inventory.PickupSound "PHTCPKUP";
  Inventory.UseSound "SPELL06";
  Tag "Photocoagulator - Guns turn explosive.";
  Inventory.Icon "MAYXZ0";
  }
  
  States
  {
  Spawn:
	MAYX ABCDEFGHIJ 4;
	Loop;
  Use:
	TNT1 A 32
	{
		A_SpawnItemEx("DCY_PhotocoagulatorRingThing", 0, 0, 30, 0, 0, 0, angle, SXF_NOCHECKPOSITION);
		A_QuakeEx(2, 2, 2, 22, 0, 200, "none", QF_SCALEDOWN);
		A_SetBlend("Blue", 0.75, 25, "Blue");
		A_GiveInventory("DCY_PhotocoagulatorPower", 1);
	}
	Stop;
  }
}*/

Class DCY_PhotocoagulatorPower : PowerWeaponLevel2
{
  Mixin CYPowerup;
  
  Default
  {
  Powerup.Duration -40;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("PHTCWARN", "PHTCEND", "69c0ff", "1751ff", true);
  }
}

/*Class DCY_Emphasis : DCY_InvItem
{
  Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 1;
  Inventory.InterHubAmount 1;
  +INVENTORY.INVBAR
  +INVENTORY.HUBPOWER
  Inventory.PickupMessage "The monitor reads that it makes cells and lasers more diverse.";
  Inventory.PickupSound "Emphasis/Up";
  Inventory.UseSound "Emphasis/Use";
  Tag "Emphasis - Turns plasmatic weapons into something different.";
  Inventory.Icon "MAYWZ0";
  }
  
  States
  {
  Spawn:
	MAYW ABCDEFGH 6;
	Loop;
  Use:
	TNT1 A 32
	{
		A_QuakeEx(2, 2, 2, 22, 0, 200, "none", QF_SCALEDOWN);
		A_SetBlend("9003fc", 0.75, 15, "Purple");
		A_GiveInventory("DCY_EmphasisPower", 1);
	}
	Stop;
  }
}*/

Class DCY_EmphasisPower : PowerWeaponLevel2
{
  Mixin CYPowerup;
  
  Default
  {
  Powerup.Duration -40;
  }
  
  override void DoEffect()
  {
	Super.DoEffect();
	time = EffectTics;
	PowerTimer("EPHAWARN", "EPHAEND", "9003fc", "2803fc", false);
  }
}