Class DCY_TorchBase : Actor
{
  Mixin DCY_Effects;
  
  Default
  {
  Radius 16;
  Height 68;
  ProjectilePassHeight -16;
  +SOLID
  DCY_TorchBase.FireColor "AAAAAA";
  DCY_TorchBase.TorchSprite "NULL";
  DCY_TorchBase.FlameHeight 55;
  DCY_TorchBase.smallTorch false;
  }
  
  string color1;
  property FireColor : color1;
  string tsprite;
  property TorchSprite : tsprite;
  int heightf;
  property FlameHeight : heightf;
  bool small;
  property SmallTorch : small;
  
  void A_Blaze()
  {
	if (level.levelname == "Babylon's Chimera" || level.levelname == "The Cage" //Sunder Peformance
		|| level.isFrozen()) return;
	
	if (waterlevel <= 0)
	{
		A_SpawnParticleEx(color1, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 40, 30, 0, frandom(-1, 1), frandom(-1, 1), ((small) ? heightf / 2 : heightf), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.5, 1.5), accelz: 0.05, startalphaf: 1.0, fadestepf: 0.025, sizestep: -0.8, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		
		if ((level.time % random(2, 5)) == 0)
			A_SpawnParticleEx(color1, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT, 40, random(3, 6), frandom(0, 360), frandom(-10.0, 10.0), frandom(-10.0, 10.0), ((small) ? heightf / 2 : heightf) + frandom(4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.05, 0.2), fadestepf: 0, sizestep: -0.15);
		if ((level.time % random(2, 7)) == 0)
			A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, 90, 40, 0, frandom(-1, 1), frandom(-1, 1), ((small) ? heightf / 2 : heightf) + 25, frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.3, 1), startalphaf: 0.05, fadestepf: 0.0007, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
	}
  }
  
  override void PostBeginPlay()
  {
	if (level.levelname == "Babylon's Chimera" || level.levelname == "The Cage" //Sunder Peformance
		|| level.isFrozen()) return;
	
	A_StartSound("DCYTorch", CHAN_BODY, CHANF_LOOPING, attenuation: 2, pitch: frandom(0.7, 1.3), startTime: frandom(0, 1));
	A_AttachLight("torchlight", DynamicLight.RandomFlickerLight, color1, (small) ? 40 : 60, (small) ? 45 : 70);
  }
  
  override void Tick()
  {
	super.tick();
	
	if (DCY_EffectDistance(2000) || DCY_EffectRange(400))
		A_Blaze();

	if (waterlevel > 0)
	{
		A_RemoveLight("torchlight");
		A_StopSound(CHAN_BODY);
	}
  }
	
  States
  {
  Spawn:
	T0R_ A 1
	{
		if (small)
			SetStateLabel("Tiny");
	}
	Loop;
  Tiny:
	T0R_ B 1;
	Loop;
  }
}

Class DCY_RedTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "TRED"; DCY_TorchBase.FireColor "eb5534"; } }
Class DCY_BlueTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "TBLU"; DCY_TorchBase.FireColor "2b4eed"; } }
Class DCY_GreenTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "TGRN"; DCY_TorchBase.FireColor "72ed2b"; } }
Class DCY_ShortRedTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "SMRT"; DCY_TorchBase.FireColor "eb5534"; DCY_TorchBase.smallTorch true; } }
Class DCY_ShortBlueTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "SMBT"; DCY_TorchBase.FireColor "2b4eed"; DCY_TorchBase.smallTorch true; } }
Class DCY_ShortGreenTorch : DCY_TorchBase { Default { DCY_TorchBase.TorchSprite "SMGT"; DCY_TorchBase.FireColor "72ed2b"; DCY_TorchBase.smallTorch true; } }

Class DCY_BurningBarrel : BurningBarrel
{
  Mixin DCY_Effects;
  
  void A_BarrelBlaze()
  {
	if (level.isFrozen()) return;
	if (waterlevel <= 0)
	{
		if ((level.time % 2) == 0)
			for (int i = random(1, 2); i > 0; i--)
				A_SpawnParticleEx(0xff6830, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 40, 40, 0, frandom(-4, 4), frandom(-4, 4), 25, frandom(-0.1, 0.1), 0.5 - frandom(-0.1, 0.1), frandom(0.9, 1.25), accelz: 0.065, startalphaf: 1.0, fadestepf: 0.025, sizestep: -1.2, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		
		if ((level.time % random(3, 9)) == 0)
			A_SpawnParticleEx(0xff6830, TexMan.CheckForTexture("graphics/particles/dcysquare.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 65, random(3, 6), 0, frandom(-10, 10), frandom(-10, 10), 25 + frandom(-0.35, 0.35), frandom(-0.1, 0.1), 0.5 - frandom(-0.1, 0.1), frandom(0.05, 0.2), frandom(-0.1, 0.1), frandom(0.1, 0.1), frandom(0.1, 0.2), fadestepf: 0, sizestep: -0.115);
			
		if (DCY_EffectRange(800) && (level.time % random(2, 7)) == 0)
			A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, 100, 60, 0, frandom(-8, 8), 5 - frandom(-8, 8), 35, frandom(-0.1, 0.1), 0.5 - frandom(-0.1, 0.1), frandom(0.3, 1), startalphaf: 0.07, fadestepf: 0.0003, sizestep: 0.25, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
	}
  }
  
  override void PostBeginPlay()
  {
	A_StartSound("DCYBurningBarrel", CHAN_BODY, CHANF_LOOPING, attenuation: 2, pitch: frandom(0.7, 1.3), startTime: frandom(0, 1));
	A_AttachLight("barrellight", DynamicLight.RandomFlickerLight, 0xff6830, 50, 60);
  }
  
  override void Tick()
  {
	super.tick();
	
	if (DCY_EffectRange(1200)) A_BarrelBlaze();
	
	if (waterlevel > 0)
	{
		A_RemoveLight("torchlight");
		A_StopSound(CHAN_BODY);
	}
  }
	
  States
  {
  Spawn:
	_B2R ABC 5;
	Loop;
  }
}