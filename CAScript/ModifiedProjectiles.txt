Mixin Class DCY_Projectiles
{
  int sfxdistance;
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	sfxdistance = 1500;
  }
  
  Default
  {
  Projectile;
  +FORCEXYBILLBOARD
  }
  
  action void A_SpawnFlames(string fcolor = "ffffff", float ftimer = 20, float fsize = 40, float faccel = 0,
							bool smonk = true, float offsets = 1, bool allsmoke = false, double thrust = 0, bool ember = true)
  {
	A_SpawnParticleEx(fcolor, TexMan.CheckForTexture("graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, ftimer, fsize, angle, frandom(-offsets, offsets), frandom(-offsets, offsets), frandom(-offsets, offsets), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.x / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.y / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.z / thrust)), accelz: faccel, startalphaf: 1.0, fadestepf: 0.025, sizestep: -(fsize / 10) / (ftimer / 10), startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
	
	if ((ember) && ((level.time % random(3, 9)) == 0)) A_SpawnParticleEx(fcolor, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 40, random(3, 6), angle, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.05, 0.2), fadestepf: 0, sizestep: -0.115);	
	if (smonk)
	{
		if (allsmoke) A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, ftimer * 1.5, fsize, angle, frandom(-1, 1) - 2, frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.x / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.y / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.z / thrust)), startalphaf: 0.3, fadestepf: 0.01, sizestep: 0.1, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
		else
		{
			if ((level.time % random(2, 7)) == 0)
				A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, ftimer * 1.5, fsize, angle, frandom(-1, 1) - 2, frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.x / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.y / thrust)), frandom(-0.1, 0.1) + ((thrust == 0) ? 0 : (Vel.z / thrust)), startalphaf: 0.3, fadestepf: 0.01, sizestep: 0.1, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
		}
	}
  }
}

Class DCY_Projectile : Actor abstract
{
  Mixin DCY_Effects;
  Mixin DCY_Projectiles;
}

Class DCY_FastProjectile : FastProjectile abstract
{
  Mixin DCY_Effects;
  Mixin DCY_Projectiles;
  
  bool checkscalex;
  bool checkscaley;
  bool checkvelocity;
  bool checkroll;
  bool checktranslation;
  bool checkframe;
  bool checkpitch;
  property CSX : checkscalex;
  property CSY : checkscaley;
  property CV : checkvelocity;
  property CR : checkroll;
  property CT : checktranslation;
  property CF : checkframe;
  property CA : checkpitch;
  
  Default
  {
    DCY_FastProjectile.CSX false;
	DCY_FastProjectile.CSY false;
	DCY_FastProjectile.CV false;
	DCY_FastProjectile.CR false;
	DCY_FastProjectile.CT false;
	DCY_FastProjectile.CF false;
	DCY_FastProjectile.CA false;
	MissileHeight 6;
  }
  
  override void Effect()
  {
	if (!DCY_EffectDistance(sfxdistance)) return;
	
	class<Actor> trail = MissileName;
	if (trail != null)
	{
		double hitz = pos.z - 8;
		
		if (hitz < floorz)
			hitz = floorz;
			
		// Do not clip this offset to the floor.
		hitz += MissileHeight;
		
		Actor act = Spawn (trail, (pos.xy, hitz), ALLOW_REPLACE);
		if (act != null)
		{
			if (bGetOwner && target != null)
				act.target = target;
			else
				act.target = self;
				
			act.angle = angle;
			act.pitch = pitch;
			if (checkroll == true) { act.roll = roll; }
			if (checkscalex == true) { act.scale.x = scale.x; }
			if (checkscaley == true) { act.scale.y = scale.y; }
			if (checkvelocity == true) { act.vel = vel; }
			if (checktranslation == true) { act.translation = translation; }
			if (checkframe == true) { act.frame = frame; act.sprite = sprite; }
			if (checkpitch == true) { act.pitch = pitch; }
		}
	}
  }
}


Class DCY_EnemyGrenade : DCY_GoreBase
{
  Default
  {
	Speed 15;
	-THRUACTORS
  }
  
  int timer;
  bool exploded;
  
  override void Tick()
  {
	super.Tick();
	if (level.isFrozen()) return;
	
	if (!exploded)
	{
		if ((timer < 60) && (level.time % 30) == 0) { frame = 1; A_AttachLight("grenadelight", DynamicLight.PointLight, 0xff0000, 30, 30); A_StartSound("DCYGrenadeTick", CHAN_BODY); }
		else if ((timer > 60) && (level.time % 15) == 0) { frame = 1; A_AttachLight("grenadelight", DynamicLight.PointLight, 0xff0000, 30, 30); A_StartSound("DCYGrenadeTick", CHAN_BODY); }
			
		if ((timer < 60) && (level.time % 30) == 5) { frame = 0; A_RemoveLight("grenadelight"); }
		if ((timer > 60) && (level.time % 15) == 5) { frame = 0; A_RemoveLight("grenadelight"); }
			
		if ((level.time % 2) == 0)
			A_SpawnParticleEx(0x000000, TexMan.CheckForTexture("graphics/Particles/dcygas.png"), STYLE_TRANSLUCENT, SPF_RELATIVE|SPF_ROLL, 120, 20, 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), accelz: 0.1, startalphaf: 0.3, fadestepf: 0.01, sizestep: 0.1, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.1 : -0.1);
	}
	
	timer++;
	
	if (timer == 120)
	{
		exploded = true;
		A_StartSound("DCYExplode2", CHAN_WEAPON);
		SetStateLabel("Explode");
	}
  }
  
  States
  {
  Spawn:
	EGD_ # 1 A_SetRoll(Roll + (xroll * 2));
	Loop;
  Death:
	EGD_ # -1 { roll = 0; }
	Stop;
  Explode:
	MNAD A 1 Bright;
	NBKL D 2 Bright
	{
		A_Explode();
		bNoGravity = true;
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_QuakeEx(2, 2, 2, 20, 0, 450, "", QF_SCALEDOWN|QF_3D);
		A_Explode(128, 160, 1, 0, 25);
	}
	NBKL E 2 Bright
	{
		for (int i = 4; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1", frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-2.0, 2.0), frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-0.5, 2.5), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	NBKL FGHIJKLM 2 Bright;
	Stop;
  }
}
  
Class DCY_ImpFlame1 : DCY_Effect
{
  Default
  {
  Height 0;
  Radius 0;
  RenderStyle "Add";
  Scale 1.0;
  Alpha 1.0;
  +NOCLIP;
  +NOINTERACTION;
  +BRIGHT;
  +THRUACTORS;
  +DONTSPLASH;
  }
  
  States
  {
  Spawn:
	FAR0 A 0 NoDelay A_SetScale(frandompick(Scale.X, -Scale.X), Scale.Y);
	FAR0 ABC 3;
	FAR0 DE 2;
	Stop;
  }
}

Class DCY_ImpBigFlame : DCY_ImpFlame1
{
  States
  {
  Spawn:
	BPX0 A 0 NoDelay A_SetScale(frandompick(Scale.X, -Scale.X), Scale.Y);
	BPX0 ABCD 2;
	BPX0 E 2 A_ChangeVelocity(0, 0, 1);
	BPX0 FG 2;
	Stop;
  }
}

Class DCY_ImpFireball : DCY_Projectile
{
  Default
  {
  Radius 6;
  Height 8;
  Speed 10;
  FastSpeed 20;
  Damage 3;
  +RANDOMIZE
  +ZDOOMTRANS
  RenderStyle "Add";
  SeeSound "dcyimp/attack";
  DeathSound "dcyimp/shotx";
  Alpha 1.0;
  +BRIGHT;
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.91,0.00]";
  }
  
  States
  {
  Spawn:
    FBS1 AABBCC 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnItemEx("DCY_ImpFlame1", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), zvel: 1, flags: SXF_NOCHECKPOSITION, failchance: 200);
			A_SpawnFlames("c24d0e", 10, 40, 0, true, frandom(-1.5, 1.5));
		}
	}
	Loop;
  Death:
	TNT1 A 0
	{
		for (int i = 7; i > 0; i--)
			A_SpawnParticle(0xffdc9c, SPF_FULLBRIGHT, random(20, 45), 5, frandom(0, 360), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-3.5, 3.5), frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(3.5, 6.4), accelz: -0.85, fadestepf: 0, sizestep: -0.125);
	}
	BAL1 CCDDEE 2 A_FadeOut(0.2, 0);
	Stop;
  }
}

Class DCY_LeFatFireball : DCY_Projectile
{
  Default
  {
  Alpha 1.0;
  Translation "0:255=%[0.28,0.00,0.00]:[2.00,1.06,0.54]";
  +BRIGHT;
  Radius 6;
  Height 8;
  Speed 20;
  Damage 8;
  +RANDOMIZE
  +ZDOOMTRANS
  RenderStyle "Add";
  SeeSound "dcyfatso/attack";
  DeathSound "dcyfatso/shotx";
  }
  
  States
  {
  Spawn:
    M2FN AABB 1
	{
		if (DCY_EffectDistance(1000))
		{
			let splosion = Spawn("DCY_ExplosiveBallT", pos + (frandom(-2, 2), frandom(-2, 2), frandom(-2, 2)));
			if (splosion) { splosion.translation = translation; splosion.scale *= 0.3; splosion.vel.x = vel.x / 2.5;
			splosion.vel.y = vel.y / 2.5; splosion.vel.z = vel.z / 2.5; }
			A_SpawnItemEx("DCY_ImpBigFlame", frandom(-10.0, 10.0), frandom(-10.0, 10.0), frandom(-10.0, 10.0), zvel: frandom(1, 2.5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 210);
			A_SpawnItemEx("DCY_ImpFlame1", frandom(-10.0, 10.0), frandom(-10.0, 10.0), frandom(-10.0, 10.0), zvel: 1, flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 120);
			A_SpawnFlames("c24d0e", 20, 60, 0, true, allsmoke: true, thrust: 3);
		}
	}
	Loop;
  Death:
    TNT1 A 0
    {
		A_SpawnItemEx("DCY_Explosion_1");
		for (int i = 10; i > 0; i--)
			A_SpawnParticle(0xffdc9c, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	MISL CCDDEE 1 A_FadeOut(0.2, 0);
	Stop;
  }
}

Class DCY_MeatballElecball : DCY_Projectile
{
  Default
  {
  Alpha 1.0;
  Translation "0:255=%[0.00,0.00,0.00]:[0.50,0.83,1.50]";
  +BRIGHT
  Radius 6;
  Height 8;
  Speed 10;
  FastSpeed 20;
  Damage 5;
  +RANDOMIZE
  +ZDOOMTRANS
  RenderStyle "Add";
  SeeSound "dcycaco/attack";
  DeathSound "dcycaco/shotx";
  }
  
  States
  {
  Spawn:
	BAL2 AAABBB 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, 220);
			A_SpawnItemEx("DCY_ElecTrailBase", frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0), flags: SXF_TRANSFERTRANSLATION|SXF_NOCHECKPOSITION);
			if ((level.time % random(1, 9)) == 0) A_SpawnParticleEx(0x206cff, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, random(3, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), fadestepf: 0, sizestep: -0.015);	
		}
	}
	Loop;
  Death:
	BAL2 C 1;
	BAL2 CCCDDDDEEEE 1 A_FadeOut(0.05);
	Stop;
  }
}

Class DCY_MeatballElecballTrail : DCY_Effect
{
  Default
  {
  Alpha 0.95;
  Scale 1.0;
  RenderStyle "Add";
  +NOCLIP
  +NOINTERACTION
  +DONTSPLASH
  +ROLLSPRITE
  -SOLID
  }
  States
  {
  Spawn:
    TNT1 A 1;
	BAL2 AAABBBAAABB 1 Bright 
	{
		A_SetScale(Scale.X-0.1, Scale.Y-0.1);
		A_FadeOut(0.1);
	}
	Stop;
  }
}

Class DCY_HomingMissile : DCY_Projectile
{
  Default
  {
  +BRIGHT
  +SEEKERMISSILE
  Scale 0.75;
  Alpha 1.0;
  Damage 5;
  FastSpeed 15;
  RenderStyle "Normal";
  Radius 11;
  Height 8;
  Speed 10;
  +RANDOMIZE
  +ZDOOMTRANS
  SeeSound "dcyskeleton/attack";
  DeathSound "Explod";
  }
  
  static const string ParticleColors[] = { "ffffff", "ffd77a", "ff983d", "5e5a5a" };
  int timer;
  
  States
  {
  Spawn:
	HMIS A 0 NoDelay A_StartSound("skeleton/seeker", CHAN_6, CHANF_LOOPING);
	HMIS A 2 Bright
	{
		if (timer < 110)
		{
			A_Tracer2(5.625);
			timer++;
		}

		if (DCY_EffectDistance(sfxdistance)) A_SpawnFlames("ff7e3d", 25, 20, 0, true, frandom(-2.5, 2.5));
	}
	Goto Spawn+1;
  Death:
	MISL B 0 Bright;
  	TNT1 A 1 Bright
	{
		A_Scream();
		A_StopSound(CHAN_6);
		A_QuakeEx(2, 2, 2, 17, 0, 250, "none", QF_RELATIVE|QF_SCALEDOWN, 0, 0, 0, 500);
		A_SetTranslucent(1.0, 1);
		A_SpawnItemEx("DCY_Explosion_1_Small", 0, 0, 0, random(-1, 1), random(-1, 1), random(-1, 1), random(0, 360), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_Explosion_1_Small", 0, 0, 0, random(-1, 1), random(-1, 1), random(-1, 1), random(0, 360), SXF_NOCHECKPOSITION);
	}
	TNT1 A 17;
	Stop;
  }
}

Class DCY_BaronKnightFlame : DCY_ImpFlame1 { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.55,1.38,0.46]"; } }

Class DCY_ExplosiveBallT : Actor
{
  Default
  {
  Radius 0;
  Height 0;
  Scale 0.45;
  RenderStyle "Add";
  Alpha 0.8;
  +DONTSPLASH;
  +NOCLIP;
  +ROLLSPRITE;
  +NOINTERACTION;
  +BRIGHT;
  +THRUACTORS;
  }
  States
  {
  Spawn:
	BEWM A 0 NoDelay A_SetRoll(random(0, 360));
	"####" XVQPMKIGE 1
	{ 
		A_FadeOut(0.005, 0);
		A_SetScale(Scale.X-0.002, Scale.Y-0.002); 
	}
	Stop;
  }
}

Class DCY_BaronFireball : DCY_Projectile
{
  Default
  {
  Alpha 0.7;
  +BRIGHT;
  Translation "0:255=%[0.00,0.00,0.00]:[0.00,2.00,0.00]";
  Radius 6;
  Height 16;
  Speed 15;
  FastSpeed 20;
  Damage 8;
  Projectile;
  +RANDOMIZE
  +ZDOOMTRANS
  RenderStyle "Add";
  SeeSound "dcybaron/attack";
  DeathSound "dcybaron/shotx";
  Decal "BaronScorch";
  }
  States
  {
  Spawn:
    BAL7 AAABBB 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			let splosion = Spawn("DCY_ExplosiveBallT", pos + (frandom(-2, 2), frandom(-2, 2), frandom(-2, 2)));
			if (splosion) { splosion.translation = translation; splosion.scale *= 0.2; splosion.vel.x = vel.x / 2.5;
			splosion.vel.y = vel.y / 2.5; splosion.vel.z = vel.z / 2.5; }
			A_SpawnItemEx("DCY_BaronKnightFlame", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), zvel: 1, flags: SXF_NOCHECKPOSITION, failchance: 120);
			A_SpawnFlames("52ff42", 10, 50, 0);
		}
	}
	Loop;
  Death:
    TNT1 A 0
    {
		A_SpawnItemEx("DCY_Explosion_1_Small", 0, 0, 0, random(-3, 3), random(-3, 3), random(-3, 3), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_Explosion_1_Small", 0, 0, 0, random(-3, 3), random(-3, 3), random(-3, 3), random(0, 360), SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		for (int i = 7; i > 0; i--)
			A_SpawnParticle(0x93ff91, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	BAL7 CCDDDEEE 1 A_FadeOut(0.125, 0);
	Stop;
  }
}

Class DCY_OverhauledRocket : DCY_Projectile
{
  Default
  {
  DamageType "Explosive";
  Speed 31.7755;
  Damage 20;
  +RANDOMIZE
  +DEHEXPLOSION
  SeeSound "RocketLauncher/Kaboom";
  DeathSound "Explod";
  Obituary "$OB_MPROCKET";
  RenderStyle "Normal";
  Scale 1.2;
  Alpha 1.0;
  -ROCKETTRAIL
  Radius 11;
  Height 8;
  }
  
  static const string ParticleColors[] = { "ffffff", "ffd77a", "ff983d", "5e5a5a" };
  
  States
  {
  Spawn:
	NMSL A 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnFlames("ff3e1f", 30, 25, 0, allsmoke: true);
			if ((level.time % random(1, 9)) == 0) A_SpawnParticleEx(0xff3e1f, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 80, random(3, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), fadestepf: 0, sizestep: -0.075);	
			A_SpawnItemEx("DCY_RocketFlare", frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-2.5, 2.5), flags: SXF_NOCHECKPOSITION);
		}
	}
	Loop;
  Death:
	TNT1 A 0;
	TNT1 A 5
	{
		A_SetTranslucent(1.0);
		A_Explode();
		A_SpawnItemEx("DCY_Explosion_1", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(0.00, 360.0), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_Explosion_1", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(0.00, 360.0), SXF_NOCHECKPOSITION);
		A_SpawnItemEx("DCY_Explosion_1", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(-0.85, 0.85), frandom(0.00, 360.0), SXF_NOCHECKPOSITION);
		A_QuakeEx(2, 2, 2, 20, 0, 200, "none", QF_SCALEDOWN, 0, 0, 0, 700);
	}
	TNT1 A 20;
	Stop;
  }
}

Class DCY_CyberdemonRocket : DCY_OverhauledRocket { Default { Speed 20; } }

Class DCY_RocketFlare : Actor
{
  Default
  {
  Radius 0;
  Height 0;
  RenderStyle "Add";
  +NOCLIP;
  +NOINTERACTION;
  +BRIGHT;
  +CLIENTSIDEONLY;
  +ROLLSPRITE;
  Translation "0:255=%[0.00,0.00,0.00]:[1.00,0.50,0.00]";
  }
  States
  {
  Spawn:
	TNT1 A 3 NoDelay A_SetScale(frandompick(Scale.X, -Scale.X), Scale.Y);
	3XP0 ABCDE 2;
	Stop;
  }
}

Class DCY_TransmuterTorpedo : DCY_OverhauledRocket
{
  Default
  {
  SeeSound "ROBOMISL";
  DeathSound "AOI/Explode";
  Damage 3;
  Speed 17;
  FastSpeed 27;
  -ROCKETTRAIL
  +BRIGHT
  +FORCERADIUSDMG
  +DONTHARMCLASS
  Alpha 1.0;
  RenderStyle "Normal";
  Translation "0:255=%[0.00,0.00,0.24]:[0.17,0.86,2.00]", "80:111=[138,138,138]:[0,0,0]", "0:3=%[0.00,0.00,0.00]:[0.31,0.31,0.31]", "4:4=%[0.00,0.00,0.00]:[2.00,2.00,2.00]", "5:15=%[0.00,0.00,0.00]:[0.31,0.31,0.31]";
  }
  
  override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
  {
	static const string messages[] =
	{
		"Blue rocket insanity!",
		"%o fell before the might of the unknown.",
		"%o didn't see it coming."
	};

	return messages[Random(0, messages.Size() - 1)];
  }
	
  States
  {
  Spawn:
    HMIS A 1
	{
		if (DCY_EffectDistance(sfxdistance))
		{
			A_SpawnFlames("174ee6", 40, 25, 0, false);
			if ((level.time % random(1, 9)) == 0) A_SpawnParticleEx(0x174ee6, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 50, random(3, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(-0.4, 0.4), frandom(-0.4, 0.4), frandom(-0.4, 0.4), fadestepf: 0, sizestep: -0.175);	
			A_SpawnItemEx("DCY_TransmuterFlare", frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-2.5, 2.5), flags: SXF_NOCHECKPOSITION);
		}
	}
	Loop;
  Death:
    BAL3 C 1
	{
		A_SetRenderStyle(0.875, STYLE_ADD);
		
		for (int i = 2; i > 0; i--)
			A_SpawnItemEx("DCY_AndroidExplosionSmall", 0, 0, 0, random(-1, 1), random(-1, 1), random(-1, 1), random(0, 360), SXF_NOCHECKPOSITION);
		for (int i = random(10, 20); i > 0; i--)
			A_SpawnParticleEx(0x174ee6, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.0, 6.0), frandom(-6.0, 6.0), frandom(6.5, 12.4), accelz: -1);
		
		A_Explode(30, 85, XF_NOTMISSILE, 1);
	}
		
    BAL3 C 1 Bright A_Explode(30, 85, XF_NOTMISSILE, 1);
	BAL3 CCCDDDDEEEE 1 Bright
	{
	  A_FadeOut(0.085, 0);
	  A_SetScale(Scale.X+0.05, Scale.Y+0.05);
	}
	TNT1 A 1 Bright;
    Stop;
  }
}

Class DCY_TransmuterFlare : DCY_RocketFlare { Default { Translation "0:255=%[0.00,0.00,0.54]:[0.24,0.70,1.70]"; } }

Class DCY_XBallTrail : Actor
{
  Default
  {
  Scale 1.5;
  Height 0;
  Radius 0;
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,1.72,0.82]";
  +NOCLIP
  +NOINTERACTION
  +BRIGHT
  +DONTSPLASH
  }
  States
  {
  Spawn:
    3XP0 AB 2;
	3XP0 CDE 1;
	Stop;
  }
}

Class DCY_XBallTrail2 : DCY_XBallTrail
{
  Default
  {
  Scale 1.75;
  }
  States
  {
  Spawn:
	3XP0 ABC 2;
	3XP0 DE 1;
	Stop;
  }
}

Class DCY_RehauledPlasma : DCY_FastProjectile
{
  string ac;
  property AuraColor : ac;
  
  Default
  {
  +ROLLSPRITE;
  +BRIGHT;
  +BLOODLESSIMPACT;
  +RANDOMIZE;
  +FORCEXYBILLBOARD;
  Radius 13;
  Height 8;
  Damage 5;
  DCY_RehauledPlasma.AuraColor "2052bd";
  RenderStyle "Add";
  SeeSound "weapons/plasmaf2";
  DeathSound "LASRX";
  Obituary "$OB_MPPLASMARIFLE";
  Translation "0:255=%[0.00,0.00,0.00]:[0.57,0.80,1.43]";
  Scale 1;
  Alpha 1.0;
  Speed 25;
  DamageType "Plasma";
  }
  
  States
  {
  Spawn:
	BLPL AABBCCDD 1
	{
		A_SetRoll(frandom(0.00, 360.00));
		
		if (random(0, 2) == 0)
		{
			actor plasma = Spawn("DCY_FluorescentSparkle", pos + (frandom(-8.0, 8.0), frandom(-8.0, 8.0), frandom(-8.0, 8.0)));
			if (plasma) { plasma.translation = translation; plasma.bNOGRAVITY = true; }
		}
		
		if (DCY_EffectDistance(900))
			A_SpawnItemEx("DCY_CWFXTrail", flags: SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE|SXF_TRANSFERROLL);
		
		A_SpawnParticleEx(ac, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 10, 20, 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), fadestepf: 0.05, sizestep: -2.225);
	}
	Loop;
  Death:
	PLSE A 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0.00, 360.00));
		for (int i = 4; i > 0; i--)
			A_SpawnParticleEx(ac, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	PLSE BCDE 2;
	Stop;
  }
}

Class DCY_FluorescentOrbTS : DCY_FluorescentOrbT { Default { Scale 0.65; } }

Class DCY_PlasmaTrail : DCY_Effect
{
  Default
  {
  +NOCLIP;
  +NOBLOCKMAP;
  +NOINTERACTION;
  +ROLLSPRITE;
  +FORCEXYBILLBOARD;
  +BRIGHT;
  +NOGRAVITY;
  Alpha 1.0;
  Scale 0.35;
  RenderStyle "Add";
  }
  States
  {
  Spawn:
	P3SE ABCDE 2;
	Stop;
  }
}

Class DCY_ArachPlasma : DCY_RehauledPlasma
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.65,0.65]";
  Speed 18;
  DCY_RehauledPlasma.AuraColor "a83432";
  FastSpeed 20.5;
  }
}

Class DCY_CleavingLaser : DCY_RehauledPlasma
{
  Default
  {
  DamageFunction 3;
  +RIPPER;
  Translation "0:255=%[0.00,0.00,0.00]:[1.00,1.80,0.69]";
  SeeSound "";
  -RANDOMIZE
  Speed 42;
  DCY_FastProjectile.CV true;
  DCY_FastProjectile.CR true;
  DCY_FastProjectile.CT true;
  MissileType "DCY_RipperLaserTrail";
  DCY_RehauledPlasma.AuraColor "2a7012";
  }
  
  States
  {
  Spawn:
	TNT1 A 1
	{
		A_SpawnFlames(ac, 15, smonk: false);
		A_SpawnParticleEx(ac, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), fadestepf: -2);
	}
	Loop;
  Death:
	PLSE A 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0.00, 360.00));
		for (int i = 20; i > 0; i--)
			A_SpawnParticleEx(ac, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	PLSE BCDE 2;
	Stop;
  }
}

Class DCY_RipperLaserTrail : DCY_ProjectileBaseTrail
{
  float time;
  property Duration : time;
  
  Default
  {
  DCY_RipperLaserTrail.Duration 0.03;
  XScale 4;
  YScale 5;
  Alpha 0.135;
  +NOGRAVITY
  RenderStyle "Add";
  }
  
  States
  {
  Spawn:
	PLSS A 0 NoDelay
	{
		A_ChangeVelocity(vel.x / 100, vel.y / 100, vel.z / 100, CVF_REPLACE);
		A_FaceMovementDirection();
	}
	Goto Looping;
  Looping:
	PLSS A 1 A_FadeOut(time);
	Wait;
  }
}

Class DCY_RipperLaserTrailLong : DCY_RipperLaserTrail { Default { DCY_RipperLaserTrail.Duration 0.01; } }

Class DCY_LarrikinLaser : DCY_CleavingLaser
{
  Default
  {
  DamageType "Normal";
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,1.01,0.34]";
  DCY_RehauledPlasma.AuraColor "ffc68a";
  }
}

Class DCY_TrigLaser : DCY_RehauledPlasma
{
  int weave;
  property WeavingNum: weave;
  
  Default
  {
  DamageFunction 10;
  SeeSound "";
  -RANDOMIZE
  Speed 35;
  Translation "0:255=%[0.00,0.00,0.00]:[0.62,0.94,1.89]";
  DCY_TrigLaser.WeavingNum 4;
  }
  
  int timer;
  
  States
  {
  Spawn:
	THZ4 A 1
	{
		if (timer == 20)
		{
			A_Explode(60, 200, 0);
			
			A_StartSound("LASRGREN");
			
			for (int i = 3; i > 0; i--)
				A_SpawnItemEx("DCY_AndroidExplosionSmall", frandom(-5.0, 5.0), frandom(-5.0, 5.0), frandom(-5.0, 5.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
			
			Destroy();
		}
		
		A_Weave(3, 0, weave, 0);
		
		timer++;
		A_SpawnItemEx("DCY_ProjectileBaseTrail", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION);
	}
	Loop;
  Death:
	THZ4 D 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(0);
		for (int i = 20; i > 0; i--)
			A_SpawnParticle(0x7ccdfc, SPF_FULLBRIGHT, random(20, 40), random(1, 3), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	THZ4 EFGHIJKLM 1;
	Stop;
  }
}

Class DCY_TrigLaser2 : DCY_TrigLaser { Default { DCY_TrigLaser.WeavingNum -4; } }
Class DCY_TrigLaser3 : DCY_TrigLaser { Default { DCY_TrigLaser.WeavingNum 0; } }

Class DCY_BFGSpheroid : DCY_Projectile
{
  Default
  {
	DamageType "BFG";
	Translation "0:255=%[0.00,0.00,0.00]:[1.03,2.00,0.70]";
	DeathSound "BFGD1E";
	+BRIGHT
	+ROLLSPRITE
	Radius 13;
	Height 8;
	Speed 25;
	Damage 150;
	+RANDOMIZE
	RenderStyle "Add";
	Alpha 1.0;
	Obituary "$OB_MPBFG_BOOM";
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	A_StartSound("Platinum9kBFGBallFly", CHAN_6, CHANF_LOOPING, 1, 0.75);
	A_StartSound("BFG/Loop", CHAN_BODY, CHANF_LOOPING, 1, 0.95);
  }
  
  States
  {
  Spawn:
	BF3X ABCB 1
	{
		A_SpawnItemEx("DCY_Arc", frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-20.0, 20.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, 100);
		A_SpawnItemEx("DCY_ElecDeathBase", frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-20.0, 20.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, 140);
		roll = frandom(0, 360);
		for (int i = 2; i > 0; i--) A_SpawnParticleEx(0x148c1c, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 80, 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), fadestepf: 0.0215, sizestep: 0.55);
		A_SpawnItemEx("DCY_BFGSpheroidElectricBall", frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	}
	Loop;
  Death:
	BF4X A 1
	{
		A_SpawnItemEx("DCY_CWFXDeathTrail2", random(-2, 2), random(-2, 2), random(-2, 2), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		roll = 0;
		A_SetScale(1.3, 1.3);
		A_StopSound(CHAN_6);
		A_StopSound(CHAN_BODY);
		A_QuakeEx(4, 4, 4, 60, 0, 1200, "", flags: QF_3D|QF_SCALEDOWN|QF_RELATIVE);
		
		for (int i = 10; i > 0; i--) A_SpawnParticleEx(0x148c1c, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 20, 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), fadestepf: 0.0125, sizestep: 4);
		for (int i = 12; i > 0; i--) A_SpawnItemEx("DCY_ElecDeathBase", frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE, 20);
	}
	BF4X AA 2
	{
		A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION|SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE, 60);
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(-5, 15), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 20);
	}
	BF4X BBCCD 2
	{
		A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION|SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE, 60);
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 20);
	}
	BF4X D 2
	{
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 20);
		A_BFGSpray("DCY_BFGExtra", damagecnt: 25);
	}
	BF4X EEFFGG 2
	{
		A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION|SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE, 100);
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 20);
	}
	BF4X HI 3;
	TNT1 A 40;
	Stop;
  }
}

Class DCY_BFGRing : DCY_NeonicRing { Default { Scale 1.25; } }

Class DCY_BFGExtra : BFGExtra
{
  Default
  {
  Alpha 1.0;
  Translation "0:255=%[0.00,0.00,0.00]:[1.03,2.00,0.70]";
  }
  States
  {
  Spawn:
  	BF3X Z 3 Bright NoDelay
	{
		for (int i = 8; i > 0; i--) A_SpawnItemEx("DCY_ElecDeathBase", frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-20.0, 20.0), frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE, 20);
		for (int i = 2; i > 0; i--) A_SpawnParticleEx(0x148c1c, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, random(90, 95), 30, 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), fadestepf: 0.0125, sizestep: 2.55);
		A_SpawnItemEx("DCY_CWFXDeathTrail", random(-2, 2), random(-2, 2), random(-2, 2), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 20);
		A_SpawnItemEx("DCY_AndroidExplosionSmall", flags: SXF_TRANSFERTRANSLATION);
	}
	BF3X ABCDEFGH 3 Bright
	{
		A_SpawnItemEx("DCY_Arc", frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), flags: SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION|SXF_NOCHECKPOSITION, 200);
		A_SpawnItemEx("DCY_BFGThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 120);
  	}
	Stop;
  }
}

Class DCY_BFGSpheroidElectricBall : Actor
{
  Default
  {
  RenderStyle "Add";
  Alpha 1.0;
  Scale 0.85;
  +ROLLSPRITE;
  +NOGRAVITY;
  +NOCLIP;
  +BRIGHT;
  }
  
  States
  {
  Spawn:
	BF3X A 0 NoDelay A_SetRoll(frandom(0, 360));
	BF3X ABCD 2;
	Stop;
  }
}

Class DCY_BFGThunder : CacodemonBall
{
  Default
  {
	SeeSound "";
	DeathSound "";
	DamageFunction 0;
	+MTHRUSPECIES
	+THRUSPECIES
	+THRUACTORS
	+NOINTERACTION
	-SOLID
	Speed 16;
	Scale 1.2;
	+NEVERFAST
  }
  
  States
  {
  Spawn:
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		tics = random(0, 1);
		A_ChangeVelocity(frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5));
		A_SpawnParticle(0xc9ffa3, SPF_FULLBRIGHT, random(10, 20), random(12, 18), frandom(0, 360), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5));
	}
	Goto Death;
  Death:
	SP4K ABCDEFG 2 A_Stop();
	Stop;
  }
}

Class DCY_Blastawave : DCY_RehauledPlasma
{
  Default
  {
  DamageFunction 10;
  SeeSound "";
  DeathSound "CARCATKX";
  -RANDOMIZE
  Speed 65;
  Scale 0.8;
  Height 20;
  Radius 10;
  DamageFunction 30;
  Translation "0:255=%[0.00,0.00,0.00]:[0.43,0.75,1.57]";
  MissileType "DCY_BlastawaveTrail";
  DCY_FastProjectile.CT true;
  DCY_FastProjectile.CF true;
  }
  
  int timer;
  
  States
  {
  Spawn:
	WV00 AB 1;
	Loop;
  Death:
	MPB_ H 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0, 360));
		for (int i = 4; i > 0; i--)
		{
			A_SpawnParticle(0x7ccdfc, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-4.0, 4.0));
			A_SpawnItemEx("DCY_BlastaThunder", frandom(-10, 10), frandom(-10, 10), frandom(-10, 10), frandom(5, 10), zvel: frandom(-7, 7), angle: frandom(0, 360), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION, failchance: 120);
		}
	}
	MPB_ IJKL 2;
	Stop;
  }
}

Class DCY_BlastawaveTrail : DCY_BFGSpheroidElectricBall
{
  Default
  {
	Scale 0.8;
	-ROLLSPRITE;
  }
  
  States
  {
  Spawn:
	WV00 ABCDE 1
	{
		A_SetScale(Scale.X - 0.01);
		A_FadeOut(0.2, 0);
	}
	Stop;
  }
}

Class DCY_BlastaThunder : DCY_BFGThunder
{
  Default { Translation "0:255=%[0.00,0.00,0.50]:[1.01,2.00,2.00]"; }
  
  States
  {
  Spawn:
	TNT1 AAAAAAAAAAAAAAAA 1
	{
		tics = random(0, 1);
		A_ChangeVelocity(frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5));
		A_SpawnParticle(0xacfdfc, SPF_FULLBRIGHT, random(10, 20), random(12, 18), frandom(0, 360), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5));
	}
	Goto Death;
  Death:
	C3AL ABCDE 2 A_Stop();
	Stop;
  }
}

Class DCY_LaserBombBase : DCY_ImpFireball
{
  int explosion1;
  int explosion2;
  property Damage1 : explosion1;
  property Damage2 : explosion2;
  
  Default
  {
  -NOGRAVITY
  Gravity 0.25;
  Speed 30;
  FastSpeed 35;
  SeeSound "RETFIRE";
  DeathSound "RETEXPL0";
  Scale 1.2;
  DCY_LaserBombBase.Damage1 80;
  DCY_LaserBombBase.Damage2 15;
  +BRIGHT
  }
  
  States
  {
  Spawn:
	XB0Z E 1 A_SpawnItemEx("DCY_LaserBombTrail", flags: SXF_TRANSFERTRANSLATION);
	Loop;
  Death:
	XB0Z A 2 { A_NoGravity(); bNoGravity = true; A_Explode(explosion1, 128, XF_NOTMISSILE); }
	XB0Z B 1;
	XB0Z CDCDCDCDCDCDCDCD 1 A_Explode(explosion2, 70);
	Stop;
  }
}

Class DCY_LaserBombTrail : Actor
{
  Default
  {
  RenderStyle "Add";
  Scale 1.2;
  +NOINTERACTION
  +BRIGHT
  }
  
  States
  {
  Spawn:
	XB0Z FGHI 3;
	Stop;
  }
}

Class DCY_GehennaBomb : DCY_LaserBombBase { Default { Damage 1; Speed 24; FastSpeed 29; Gravity 0.15; DCY_LaserBombBase.Damage1 40; DCY_LaserBombBase.Damage2 10; } }

Class DCY_HellRazerPlasma : DCY_RehauledPlasma
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,1.01,1.01]";
  SeeSound "Weapons/ZombieLaser";
  DeathSound "LASRX";
  +BRIGHT
  +ROLLSPRITE
  Damage 5;
  Alpha 1.0;
  Scale 1.1;
  Speed 20;
  FastSpeed 25;
  }
  
  States
  {
  Spawn:
	BLPL A 1
	{
		A_SetRoll(Roll + 10);
		
		for (int i = 2; i > 0; i--)
			A_SpawnItemEx("DCY_RazerTrail", frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
	}
	Loop;
  Death:
	PLSE A 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0.00, 360.00));
		for (int i = 10; i > 0; i--)
			A_SpawnParticle(0xffb5b0, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	PLSE BCDE 2;
	Stop;
  }
}

Class DCY_RazerTrail : DCY_ProjectileBaseTrail
{
  Default
  {
  Alpha 1.0;
  Scale 1.0;
  +ROLLSPRITE
  Translation "0:255=%[0.00,0.00,0.00]:[2.00,0.00,0.00]";
  }
  
  States
  {
  Spawn:
	BLPL AAABBBCCCDDD 1
	{
		A_FadeOut(0.2);
		A_SetScale(Scale.X - 0.2);
		
		if (Scale.X < 0)
			Destroy();
	}
	Wait;
  }
}

Class DCY_RazerTrail2 : DCY_RazerTrail
{
  Default
  {
  Translation "0:255=%[0.00,0.00,0.00]:[1.16,0.30,0.30]";
  }
  
  States
  {
  Spawn:
	BLPL AABBCCDD 1
	{
		A_FadeOut(0.2);
		A_SetScale(Scale.X - 0.2);
		
		if (Scale.X < 0)
			Destroy();
	}
	Wait;
  }
}
Class DCY_PhasicTrail : DCY_RazerTrail2 { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.86,0.74,1.57]"; } }

Class DCY_UmbraPlasma : DCY_HellRazerPlasma
{
  Default
  {
  +SEEKERMISSILE
  Translation "0:255=%[0.00,0.00,0.00]:[0.86,0.74,1.57]";
  Speed 15;
  Damage 4;
  FastSpeed 20;
  }
  
  States
  {
  Spawn:
	BLPL A 1
	{
		A_SetRoll(Roll + 10);
		
		if (!(level.Time % 10)) A_Tracer2(20);
		
		for (int i = 2; i > 0; i--)
			A_SpawnItemEx("DCY_UmbraTrail", frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
	}
	Loop;
  Death:
	PLSE A 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0.00, 360.00));
		for (int i = 10; i > 0; i--)
			A_SpawnParticle(0xe0c2ff, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	PLSE BCDE 2;
	Stop;
  }
}

Class DCY_UmbraTrail : DCY_RazerTrail { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.55,0.49,0.92]"; } }

Class DCY_BigwigPlasma : DCY_HellRazerPlasma
{
  Default
  {
  Damage 2;
  Translation "0:255=%[0.00,0.00,0.00]:[0.61,1.06,2.00]";
  }
  
  States
  {
  Spawn:
	BLPL A 1
	{
		A_SetRoll(Roll + 5);
		
		for (int i = 2; i > 0; i--)
			A_SpawnItemEx("DCY_BigwigTrail", frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
	}
	Loop;
  Death:
	PLSE A 3
	{
		A_SetScale(1.0, 1.0);
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_SetRoll(frandom(0.00, 360.00));
		for (int i = 10; i > 0; i--)
			A_SpawnParticle(0xc0e2ff, SPF_FULLBRIGHT, random(20, 40), random(6, 9), frandom(0, 360), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-6.5, 6.5), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(3.5, 6.4), accelz: -0.85);
	}
	PLSE BCDE 2;
	Stop;
  }
}

Class DCY_BigwigTrail : DCY_RazerTrail { Default { Translation "0:255=%[0.00,0.00,0.00]:[0.00,0.26,0.79]"; } }

Class DCY_Grenade : DCY_OverhauledRocket
{
  Default
  {
  BounceFactor 0.3;
  WallBounceFactor 0.3;
  Gravity 0.45;
  SeeSound "";
  BounceSound "dune/bounce";
  BounceType "Doom";
  Speed 25;
  Damage 20;
  -NOGRAVITY
  +CANBOUNCEWATER;
  }
  
  static const string ParticleColors[] = { "591106", "8a2d0e", "d9601e", "f0910c" };
  
  States
  {
  Spawn:
	MNAD A 1 Bright
	{
		A_SpawnFlames("d9601e", 25, 20, 0, true, frandom(-2.5, 2.5));
		A_SpawnParticleEx(ParticleColors[random(0, ParticleColors.Size() - 1)], TexMan.CheckForTexture("Graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(3, 9), frandom(0, 360), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), sizestep: -0.325);
	}
	Loop;
  Death:
	MNAD A 1 Bright;
	NBKL D 2 Bright
	{
		A_Explode();
		bNoGravity = true;
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_QuakeEx(2, 2, 2, 20, 0, 450, "", QF_SCALEDOWN|QF_3D);
		A_Explode(128, 128, 1, 0, 25);
	}
	NBKL E 2 Bright
	{
		for (int i = 3; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1", frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-2.0, 2.0), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	NBKL FGHIJKLM 2 Bright;
	Stop;
  }
}

Class DCY_Napalm : DCY_Grenade
{
  static const string ParticleColors[] = { "ffffff", "ffd77a", "ff983d" };
  Default { DeathSound "DCYExplode2"; }
  
  States
  {
  Spawn:
	MNAD A 1 Bright
	{
		A_SpawnItemEx("DCY_MastermindJetFlareSmall", frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-2.5, 2.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), flags: SXF_NOCHECKPOSITION);
		A_SpawnFlames("d9601e", 25, 28, 0, true, frandom(-2.5, 2.5));
		A_SpawnParticleEx(ParticleColors[random(0, ParticleColors.Size() - 1)], TexMan.CheckForTexture("Graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, random(20, 40), random(3, 9), frandom(0, 360), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), sizestep: -0.325);
	}
	Loop;
  Death:
	MNAD A 1 Bright;
	NBKL D 2 Bright
	{
		A_Explode();
		bNoGravity = true;
		A_SetRenderStyle(1.0, STYLE_ADD);
		A_QuakeEx(2, 2, 2, 20, 0, 450, "", QF_SCALEDOWN|QF_3D);
		A_Explode(128, 128, 1, 0, 25);
		Spawn("DCY_NapalmBigFire", pos);
		
		for (int i = 5; i > 0; i--)
		{
			let ember = Spawn("DCY_NapalmEmber", (pos.x, pos.y, pos.z));
			
			if (ember)
			{
				ember.vel.x = frandom(-7, 7);
				ember.vel.y = frandom(-7, 7);
				ember.vel.z = frandom(1, 10);
			}
		}
	}
	NBKL E 2 Bright
	{
		for (int i = 4; i > 0; i--)
			A_SpawnItemEx("DCY_Explosion_1", frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(-2.0, 2.0), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 360), SXF_NOCHECKPOSITION);
	}
	NBKL FGHIJKLM 2 Bright;
	Stop;
  }
}

Class DCY_WeakNapalm : DCY_Napalm
{
  Default { Speed 20; Damage 5; }
}

//Napalm
Class DCY_NapalmEmber : Actor
{
  Default
  {
  Projectile;
  DamageType "Fire";
  +RIPPER;
  +BLOODLESSIMPACT;
  DamageFactor (1);
  RenderStyle "Add";
  Translation "0:255=%[0.00,0.00,0.00]:[1.98,1.18,0.53]";
  Speed 18;
  Gravity 0.7;
  Scale 1.0;
  +NEVERFAST;
  -NOGRAVITY;
  +BRIGHT
  }
  
  static const string ParticleColors[] = { "ffffff", "ffd77a", "ff983d" };
  
  States
  {
  Spawn:
	TNT1 A 1 Bright
	{
		if (waterlevel > 0)
			Destroy();
		
		A_SpawnParticleEx(ParticleColors[random(0, ParticleColors.Size() - 1)], Texman.CheckForTexture("Graphics/Particles/dcyflamep.png"), STYLE_ADD, SPF_FULLBRIGHT, 35, random(9, 13), frandom(0, 360), frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-1.0, 1.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), sizestep: -0.325);
	}
	Loop;
  Death:
	TNT1 A 1
	{
		let fire = Spawn("DCY_NapalmFire", (pos.x, pos.y, pos.z));
		
		if (fire)
			fire.scale *= 0.95;
	}
	Stop;
  }
}

Class DCY_NapalmFire : Actor
{
  int ftime;
  property FireDuration : ftime;
  
  Default
  {
  RenderStyle "Add";
  DamageType "Fire";
  +FORCERADIUSDMG
  Radius 10;
  Height 10;
  Alpha 0.0;
  +THRUACTORS
  +DONTSPLASH
  +NODAMAGETHRUST
  +NOEXPLODEFLOOR
  +BRIGHT
  Gravity .5;
  DCY_NapalmFire.FireDuration 85;
  Translation "0:255=%[0.09,0.00,0.00]:[1.72,0.79,0.28]";
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	vol = 1;
  }
  
  override void Tick()
  {
	super.tick();
	
	if (!level.isfrozen())
	{
		if (zframe >= 13.5)
			zframe = 0;
		
		zframe += 0.465;
		frame = int(zframe);
	}
	
	if (waterlevel > 0)
		Destroy();
  }
  
  int fireloop;
  float zframe;
  float vol;
  
  static const string ParticleColors[] = { "b5441b", "4a1d15", "995522" };
  
  States
  {
  Spawn:
	123E "#" 0 NoDelay { fireloop = random(0, 20); A_StartSound("FIR3LOOP", CHAN_BODY, CHANF_LOOPING, vol, pitch: frandom(1.1, 0.9)); A_SetScale(frandom(0.5, 0.8) * randompick(-1, 1), frandom(0.5, 0.8)); }
	123E "##########" 1 A_FadeIn(0.1);
	123E "#" 1
	{
		if (fireloop > ftime)
			SetStateLabel("Gone");
		
		if ((level.time % 3) == 0)
		{
			fireloop++;
			A_Explode(3, 16, 0);
		}
		
		if ((level.time % random(2, 5)) == 0)
			A_SpawnParticleEx(ParticleColors[random(0, ParticleColors.Size() - 1)], TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, 35, random(9, 12), frandom(0, 360), frandom(-10.0, 10.0), frandom(-10.0, 10.0), frandom(4.0, 13.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), accelz: 0.2, fadestepf: 0, sizestep: -0.45);
	}
	Goto Spawn+11;
  Gone:
	123E "##########" 1
	{
		A_SoundVolume(CHAN_BODY, vol);
		vol -= 0.1;
		A_FadeOut(0.1);
	}
	Stop;
  }
}

Class DCY_ApollyonFire : DCY_NapalmFire { Default { DCY_NapalmFire.FireDuration 45; } }

Class DCY_NapalmBigFire : DCY_NapalmFire
{
  override void Tick()
  {
	super.tick();
	
	if (!level.isfrozen())
	{
		if (zframe >= 6.85)
			zframe = 0;
		
		zframe -= 0.15;
	}
  }
  
  States
  {
  Spawn:
	E123 "#" 0 NoDelay { fireloop = random(0, 20); A_StartSound("FIR3LOOPBIG", CHAN_BODY, CHANF_LOOPING, vol, pitch: frandom(1.1, 0.9)); A_SetScale(frandom(1.2, 1) * randompick(-1, 1), frandom(1, 1.2)); }
	E123 "##########" 1 { alpha += 0.1; }
	E123 "#" 1
	{
		if (fireloop > 85)
			SetStateLabel("Gone");
		
		if ((level.time % 3) == 0)
		{
			fireloop++;
			A_Explode(6, 35, 0);
		}
		
		A_SpawnParticleEx(ParticleColors[random(0, ParticleColors.Size() - 1)], TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT, 35, random(8, 14), frandom(0, 360), frandom(-23.0, 23.0), frandom(-23.0, 23.0), frandom(12.0, 32.0), frandom(-0.35, 0.35), frandom(-0.35, 0.35), frandom(-0.35, 0.35), accelz: 0.2, fadestepf: 0, sizestep: -0.45);
	}
	Goto Spawn+11;
  Gone:
	E123 "##########" 1
	{
		A_SoundVolume(CHAN_BODY, vol);
		vol -= 0.1;
		alpha -= 0.1;
	}
	Stop;
  }
}

Class DCY_Vomit : DCY_FatThrower
{
  Default
  {
  -NOGRAVITY
  Speed 10;
  FastSpeed 15;
  SeeSound "";
  DeathSound "";
  Damage 1;
  DamageType "Blood";
  }
  
  States
  {
  Spawn:
	TNT1 A 1 Bright A_SpawnItemEx((!random(0, 1)) ? "De_Blood" : "De_Blood_Splat", random(-1, 1), random(-1, 1), random(-1, 1), frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5), 0, SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	Loop;
  Death:
	TNT1 A 1
	{
		for (int i = 5; i > 0; i--)
			A_SpawnItemEx("De_Blood_BigSplat", random(-5,5), random(-5,5), random(-5,5), xvel: frandom(1, 5), zvel: frandom(2, 6), angle: frandom(0, 360), flags: SXF_TRANSFERTRANSLATION);
	}
	Stop;
  }
}